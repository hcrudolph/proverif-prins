Process 0 (that is, the initial process):
{1}new ciphersuites: bitstring;
{2}new encp: bitstring;
{3}out(n32f_i, encp);
{4}new modp_a: bitstring;
{5}out(n32f_i, modp_a);
{6}new modp_b: bitstring;
{7}out(n32f_i, modp_b);
{8}new modp_r1: bitstring;
{9}out(n32f_i, modp_r1);
{10}new nf_a_addr: bitstring;
{11}out(n32f_i, nf_a_addr);
{12}new nf_b_addr: bitstring;
{13}out(n32f_i, nf_b_addr);
{14}new sepp_a_plmn: bitstring;
{15}out(n32f_i, sepp_a_plmn);
{16}new sepp_b_plmn: bitstring;
{17}out(n32f_i, sepp_b_plmn);
{18}new sepp_a_addr: bitstring;
{19}out(n32f_i, sepp_a_addr);
{20}new sepp_b_addr: bitstring;
{21}out(n32f_i, sepp_b_addr);
{22}new ipx_a_id: bitstring;
{23}out(n32f_i, ipx_a_id);
{24}new ipx_b_id: bitstring;
{25}out(n32f_i, ipx_b_id);
{26}new ipx_r2_id: bitstring;
{27}out(n32f_i, ipx_r2_id);
{28}new ipx_a_privkey: privkey;
{29}new ipx_b_privkey: privkey;
{30}new ipx_r2_privkey: privkey;
{31}let ipx_a_pubkey: pubkey = pk(ipx_a_privkey) in
{32}out(n32f_a, ipx_a_pubkey);
{33}let ipx_b_pubkey: pubkey = pk(ipx_b_privkey) in
{34}out(n32f_b, ipx_b_pubkey);
{35}let ipx_r2_pubkey: pubkey = pk(ipx_r2_privkey) in
{36}out(n32f_a, ipx_r2_pubkey);
(
    {37}new n32f_pid: bitstring;
    {38}out(n32c_a, (sepp_b_addr,ciphersuites,n32f_pid));
    {39}in(n32c_a, (=sepp_a_addr,ciphers_b: bitstring,n32f_pid_b: bitstring));
    {40}let n32f_cid: bitstring = deriveContextId(n32f_pid,n32f_pid_b) in
    {41}event sendN32fContext(sepp_a_addr,n32f_pid,n32f_pid_b,n32f_cid);
    {42}out(n32c_a, (sepp_b_addr,n32f_cid,encp,modp_a));
    {43}in(n32c_a, (=sepp_a_addr,=n32f_cid,=encp,modp_b_1: bitstring));
    {44}out(n32c_a, (sepp_b_addr,n32f_cid,ipx_a_id,ipx_a_pubkey));
    {45}in(n32c_a, (=sepp_a_addr,=n32f_cid,ipx_b_id_1: bitstring,ipx_b_key: pubkey));
    {46}let msg_cnt_a: nat = 0 in
    {47}let master_key_a_1: key = deriveMasterKey(n32f_cid) in
    {48}event sendMasterKey(sepp_a_addr,n32f_cid,master_key_a_1);
    {49}let par_req_key_a_1: key = deriveSessionKey(SEND,REQ,master_key_a_1) in
    {50}let rev_req_key_a_1: key = deriveSessionKey(RECV,REQ,master_key_a_1) in
    {51}let par_res_key_a_1: key = deriveSessionKey(SEND,RES,master_key_a_1) in
    {52}let rev_res_key_a_1: key = deriveSessionKey(RECV,RES,master_key_a_1) in
    {53}let par_req_iv_a: bitstring = deriveIV(SEND,REQ,master_key_a_1) in
    {54}let rev_req_iv_a: bitstring = deriveIV(RECV,REQ,master_key_a_1) in
    {55}let par_res_iv_a: bitstring = deriveIV(SEND,RES,master_key_a_1) in
    {56}let rev_res_iv_a: bitstring = deriveIV(RECV,RES,master_key_a_1) in
    {57}insert storeSeppA(sepp_b_plmn,sepp_b_addr,n32f_cid,msg_cnt_a,par_req_key_a_1,par_res_key_a_1,rev_req_key_a_1,rev_res_key_a_1,par_req_iv_a,par_res_iv_a,rev_req_iv_a,rev_res_iv_a,ciphersuites,encp,modp_a,modp_b_1,ipx_a_id,ipx_a_pubkey,ipx_b_id_1,ipx_b_key)
) | (
    {58}new n32f_pid_1: bitstring;
    {59}in(n32c_a, (=sepp_b_addr,=ciphersuites,n32f_pid_a: bitstring));
    {60}out(n32c_a, (sepp_a_addr,ciphersuites,n32f_pid_1));
    {61}let n32f_cid_1: bitstring = deriveContextId(n32f_pid_a,n32f_pid_1) in
    {62}event recvN32fContext(sepp_b_addr,n32f_pid_a,n32f_pid_1,n32f_cid_1);
    {63}in(n32c_a, (=sepp_b_addr,=n32f_cid_1,=encp,modp_a_1: bitstring));
    {64}out(n32c_a, (sepp_a_addr,n32f_cid_1,encp,modp_b));
    {65}in(n32c_a, (=sepp_b_addr,=n32f_cid_1,ipx_a_id_1: bitstring,ipx_a_key: pubkey));
    {66}out(n32c_a, (sepp_a_addr,n32f_cid_1,ipx_b_id,ipx_b_pubkey));
    {67}let msg_cnt_b: nat = 0 in
    {68}let master_key_b_1: key = deriveMasterKey(n32f_cid_1) in
    {69}event recvMasterKey(sepp_b_addr,n32f_cid_1,master_key_b_1);
    {70}let par_req_key_b_1: key = deriveSessionKey(RECV,REQ,master_key_b_1) in
    {71}let rev_req_key_b_1: key = deriveSessionKey(SEND,REQ,master_key_b_1) in
    {72}let par_res_key_b_1: key = deriveSessionKey(RECV,RES,master_key_b_1) in
    {73}let rev_res_key_b_1: key = deriveSessionKey(SEND,RES,master_key_b_1) in
    {74}let par_req_iv_b: bitstring = deriveIV(RECV,REQ,master_key_b_1) in
    {75}let rev_req_iv_b: bitstring = deriveIV(SEND,REQ,master_key_b_1) in
    {76}let par_res_iv_b: bitstring = deriveIV(RECV,RES,master_key_b_1) in
    {77}let rev_res_iv_b: bitstring = deriveIV(SEND,RES,master_key_b_1) in
    {78}insert storeSeppB(sepp_a_plmn,sepp_a_addr,n32f_cid_1,msg_cnt_b,par_req_key_b_1,par_res_key_b_1,rev_req_key_b_1,rev_res_key_b_1,par_req_iv_b,par_res_iv_b,rev_req_iv_b,rev_res_iv_b,ciphersuites,encp,modp_b,modp_a_1,ipx_b_id,ipx_b_pubkey,ipx_a_id_1,ipx_a_key)
) | (
    {79}new n32f_pid_2: bitstring;
    {80}out(n32c_b, (sepp_a_addr,ciphersuites,n32f_pid_2));
    {81}in(n32c_b, (=sepp_b_addr,ciphers_a: bitstring,n32f_pid_a_1: bitstring));
    {82}let n32f_cid_2: bitstring = deriveContextId(n32f_pid_2,n32f_pid_a_1) in
    {83}event sendN32fContext(sepp_b_addr,n32f_pid_2,n32f_pid_a_1,n32f_cid_2);
    {84}out(n32c_b, (sepp_a_addr,n32f_cid_2,encp,modp_b));
    {85}in(n32c_b, (=sepp_b_addr,=n32f_cid_2,=encp,modp_a_2: bitstring));
    {86}out(n32c_b, (sepp_a_addr,n32f_cid_2,ipx_b_id,ipx_b_pubkey));
    {87}in(n32c_b, (=sepp_b_addr,=n32f_cid_2,ipx_a_id_2: bitstring,ipx_a_key_1: pubkey));
    {88}let msg_cnt_b_1: nat = 0 in
    {89}let master_key_b_2: key = deriveMasterKey(n32f_cid_2) in
    {90}event sendMasterKey(sepp_b_addr,n32f_cid_2,master_key_b_2);
    {91}let par_req_key_b_2: key = deriveSessionKey(SEND,REQ,master_key_b_2) in
    {92}let rev_req_key_b_2: key = deriveSessionKey(RECV,REQ,master_key_b_2) in
    {93}let par_res_key_b_2: key = deriveSessionKey(SEND,RES,master_key_b_2) in
    {94}let rev_res_key_b_2: key = deriveSessionKey(RECV,RES,master_key_b_2) in
    {95}let par_req_iv_b_1: bitstring = deriveIV(SEND,REQ,master_key_b_2) in
    {96}let rev_req_iv_b_1: bitstring = deriveIV(RECV,REQ,master_key_b_2) in
    {97}let par_res_iv_b_1: bitstring = deriveIV(SEND,RES,master_key_b_2) in
    {98}let rev_res_iv_b_1: bitstring = deriveIV(RECV,RES,master_key_b_2) in
    {99}insert storeSeppB(sepp_a_plmn,sepp_a_addr,n32f_cid_2,msg_cnt_b_1,par_req_key_b_2,par_res_key_b_2,rev_req_key_b_2,rev_res_key_b_2,par_req_iv_b_1,par_res_iv_b_1,rev_req_iv_b_1,rev_res_iv_b_1,ciphersuites,encp,modp_b,modp_a_2,ipx_b_id,ipx_b_pubkey,ipx_a_id_2,ipx_a_key_1)
) | (
    {100}new n32f_pid_3: bitstring;
    {101}in(n32c_b, (=sepp_a_addr,=ciphersuites,n32f_pid_b_1: bitstring));
    {102}out(n32c_b, (sepp_b_addr,ciphersuites,n32f_pid_3));
    {103}let n32f_cid_3: bitstring = deriveContextId(n32f_pid_b_1,n32f_pid_3) in
    {104}event recvN32fContext(sepp_a_addr,n32f_pid_b_1,n32f_pid_3,n32f_cid_3);
    {105}in(n32c_b, (=sepp_a_addr,=n32f_cid_3,=encp,modp_b_2: bitstring));
    {106}out(n32c_b, (sepp_b_addr,n32f_cid_3,encp,modp_a));
    {107}in(n32c_b, (=sepp_a_addr,=n32f_cid_3,ipx_b_id_2: bitstring,ipx_b_key_1: pubkey));
    {108}out(n32c_b, (sepp_b_addr,n32f_cid_3,ipx_a_id,ipx_a_pubkey));
    {109}let msg_cnt_a_1: nat = 0 in
    {110}let master_key_a_2: key = deriveMasterKey(n32f_cid_3) in
    {111}event recvMasterKey(sepp_a_addr,n32f_cid_3,master_key_a_2);
    {112}let par_req_key_a_2: key = deriveSessionKey(RECV,REQ,master_key_a_2) in
    {113}let rev_req_key_a_2: key = deriveSessionKey(SEND,REQ,master_key_a_2) in
    {114}let par_res_key_a_2: key = deriveSessionKey(RECV,RES,master_key_a_2) in
    {115}let rev_res_key_a_2: key = deriveSessionKey(SEND,RES,master_key_a_2) in
    {116}let par_req_iv_a_1: bitstring = deriveIV(RECV,REQ,master_key_a_2) in
    {117}let rev_req_iv_a_1: bitstring = deriveIV(SEND,REQ,master_key_a_2) in
    {118}let par_res_iv_a_1: bitstring = deriveIV(RECV,RES,master_key_a_2) in
    {119}let rev_res_iv_a_1: bitstring = deriveIV(SEND,RES,master_key_a_2) in
    {120}insert storeSeppA(sepp_b_plmn,sepp_b_addr,n32f_cid_3,msg_cnt_a_1,par_req_key_a_2,par_res_key_a_2,rev_req_key_a_2,rev_res_key_a_2,par_req_iv_a_1,par_res_iv_a_1,rev_req_iv_a_1,rev_res_iv_a_1,ciphersuites,encp,modp_a,modp_b_2,ipx_a_id,ipx_a_pubkey,ipx_b_id_2,ipx_b_key_1)
) | (
    {121}sync 1;
    {122}!
    {123}new msg_body: bitstring;
    {124}let http_message: http = createHttp(nf_a_addr,nf_b_addr,REQ,msg_body) in
    {125}event sendHttpMsgNfA(REQ,msg_body);
    {126}out(plmn_a, (SEND,http_message))
) | (
    {127}sync 1;
    {128}!
    {129}new msg_body_1: bitstring;
    {130}let http_message_1: http = createHttp(nf_b_addr,nf_a_addr,REQ,msg_body_1) in
    {131}event sendHttpMsgNfB(REQ,msg_body_1);
    {132}out(plmn_b, (SEND,http_message_1))
) | (
    {133}sync 1;
    {134}!
    {135}in(plmn_a, (=SEND,http_message_2: http));
    {198}get storeSeppA(sepp_b_plmn_1: bitstring,sepp_b_addr_1: bitstring,n32f_context: bitstring,msg_cnt_a_2: nat,par_req_key_a_3: key,par_res_key_a_3: key,rev_req_key_a_3: key,rev_res_key_a_3: key,par_req_iv_a_2: bitstring,par_res_iv_a_2: bitstring,rev_req_iv_a_2: bitstring,rev_res_iv_a_2: bitstring,ciphers_a_1: bitstring,encp_a: bitstring,modp_a_3: bitstring,modp_b_3: bitstring,ipx_a_id_3: bitstring,ipx_a_key_2: pubkey,ipx_b_id_3: bitstring,ipx_b_key_2: pubkey) in
    {136}let createHttp(source_addr: bitstring,destination_addr: bitstring,msg_type: bitstring,msg_body_2: bitstring) = http_message_2 in
    {137}event recvHttpMsgSeppA(msg_type,msg_body_2);
    {138}let conf_1: bitstring = getConf(msg_body_2,encp_a) in
    {139}let nonconf: bitstring = getNonconf(msg_body_2,encp_a) in
    {140}let msg_id: nat = msg_cnt_a_2 + 1 in
    {141}let associated_data: aad = combineAAD(source_addr,destination_addr,msg_type,nonconf,msg_id,ipx_a_id_3,n32f_context) in
    {142}let v: bool = (msg_type = REQ) in
    (
        {143}if v then
        (
            {144}let key_1: key = par_req_key_a_3 in
            {145}let v_1: bool = (msg_type = REQ) in
            (
                {146}if v_1 then
                (
                    {147}let nonce: bitstring = deriveNonce(par_req_iv_a_2,msg_id) in
                    {148}let (payload: bitstring,jwe_tag: mac) = aeadEncrypt(key_1,nonce,conf_1,associated_data) in
                    {149}event sendN32fMsgSeppA(n32f_context,msg_id,payload,associated_data);
                    {150}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce,associated_data,payload,jwe_tag)));
                    {151}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
                )
                else
                    {152}let nonce_1: bitstring = deriveNonce(par_res_iv_a_2,msg_id) in
                    {153}let (payload_1: bitstring,jwe_tag_1: mac) = aeadEncrypt(key_1,nonce_1,conf_1,associated_data) in
                    {154}event sendN32fMsgSeppA(n32f_context,msg_id,payload_1,associated_data);
                    {155}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_1,associated_data,payload_1,jwe_tag_1)));
                    {156}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
            )
            else
                {157}let nonce_2: bitstring = fail-any in
                {158}let (payload_2: bitstring,jwe_tag_2: mac) = aeadEncrypt(key_1,nonce_2,conf_1,associated_data) in
                {159}event sendN32fMsgSeppA(n32f_context,msg_id,payload_2,associated_data);
                {160}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_2,associated_data,payload_2,jwe_tag_2)));
                {161}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
        )
        else
            {162}let key_2: key = par_res_key_a_3 in
            {163}let v_2: bool = (msg_type = REQ) in
            (
                {164}if v_2 then
                (
                    {165}let nonce_3: bitstring = deriveNonce(par_req_iv_a_2,msg_id) in
                    {166}let (payload_3: bitstring,jwe_tag_3: mac) = aeadEncrypt(key_2,nonce_3,conf_1,associated_data) in
                    {167}event sendN32fMsgSeppA(n32f_context,msg_id,payload_3,associated_data);
                    {168}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_3,associated_data,payload_3,jwe_tag_3)));
                    {169}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
                )
                else
                    {170}let nonce_4: bitstring = deriveNonce(par_res_iv_a_2,msg_id) in
                    {171}let (payload_4: bitstring,jwe_tag_4: mac) = aeadEncrypt(key_2,nonce_4,conf_1,associated_data) in
                    {172}event sendN32fMsgSeppA(n32f_context,msg_id,payload_4,associated_data);
                    {173}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_4,associated_data,payload_4,jwe_tag_4)));
                    {174}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
            )
            else
                {175}let nonce_5: bitstring = fail-any in
                {176}let (payload_5: bitstring,jwe_tag_5: mac) = aeadEncrypt(key_2,nonce_5,conf_1,associated_data) in
                {177}event sendN32fMsgSeppA(n32f_context,msg_id,payload_5,associated_data);
                {178}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_5,associated_data,payload_5,jwe_tag_5)));
                {179}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
    )
    else
        {180}let key_3: key = fail-any in
        {181}let v_3: bool = (msg_type = REQ) in
        (
            {182}if v_3 then
            (
                {183}let nonce_6: bitstring = deriveNonce(par_req_iv_a_2,msg_id) in
                {184}let (payload_6: bitstring,jwe_tag_6: mac) = aeadEncrypt(key_3,nonce_6,conf_1,associated_data) in
                {185}event sendN32fMsgSeppA(n32f_context,msg_id,payload_6,associated_data);
                {186}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_6,associated_data,payload_6,jwe_tag_6)));
                {187}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
            )
            else
                {188}let nonce_7: bitstring = deriveNonce(par_res_iv_a_2,msg_id) in
                {189}let (payload_7: bitstring,jwe_tag_7: mac) = aeadEncrypt(key_3,nonce_7,conf_1,associated_data) in
                {190}event sendN32fMsgSeppA(n32f_context,msg_id,payload_7,associated_data);
                {191}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_7,associated_data,payload_7,jwe_tag_7)));
                {192}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
        )
        else
            {193}let nonce_8: bitstring = fail-any in
            {194}let (payload_8: bitstring,jwe_tag_8: mac) = aeadEncrypt(key_3,nonce_8,conf_1,associated_data) in
            {195}event sendN32fMsgSeppA(n32f_context,msg_id,payload_8,associated_data);
            {196}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_8,associated_data,payload_8,jwe_tag_8)));
            {197}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
) | (
    {199}sync 1;
    {200}!
    {201}in(plmn_b, (=SEND,http_message_3: http));
    {264}get storeSeppB(sepp_a_plmn_1: bitstring,sepp_a_addr_1: bitstring,n32f_context_1: bitstring,msg_cnt_b_2: nat,par_req_key_b_3: key,par_res_key_b_3: key,rev_req_key_b_3: key,rev_res_key_b_3: key,par_req_iv_b_2: bitstring,par_res_iv_b_2: bitstring,rev_req_iv_b_2: bitstring,rev_res_iv_b_2: bitstring,ciphers_b_1: bitstring,encp_b: bitstring,modp_b_4: bitstring,modp_a_4: bitstring,ipx_b_id_4: bitstring,ipx_b_key_3: pubkey,ipx_a_id_4: bitstring,ipx_a_key_3: pubkey) in
    {202}let createHttp(source_addr_1: bitstring,destination_addr_1: bitstring,msg_type_1: bitstring,msg_body_3: bitstring) = http_message_3 in
    {203}event recvHttpMsgSeppB(msg_type_1,msg_body_3);
    {204}let conf_2: bitstring = getConf(msg_body_3,encp_b) in
    {205}let nonconf_1: bitstring = getNonconf(msg_body_3,encp_b) in
    {206}let msg_id_1: nat = msg_cnt_b_2 + 1 in
    {207}let associated_data_1: aad = combineAAD(source_addr_1,destination_addr_1,msg_type_1,nonconf_1,msg_id_1,ipx_b_id_4,n32f_context_1) in
    {208}let v_4: bool = (msg_type_1 = REQ) in
    (
        {209}if v_4 then
        (
            {210}let key_4: key = par_req_key_b_3 in
            {211}let v_5: bool = (msg_type_1 = REQ) in
            (
                {212}if v_5 then
                (
                    {213}let nonce_9: bitstring = deriveNonce(par_req_iv_b_2,msg_id_1) in
                    {214}let (payload_9: bitstring,jwe_tag_9: mac) = aeadEncrypt(key_4,nonce_9,conf_2,associated_data_1) in
                    {215}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_9,associated_data_1);
                    {216}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_9,associated_data_1,payload_9,jwe_tag_9)));
                    {217}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
                )
                else
                    {218}let nonce_10: bitstring = deriveNonce(par_res_iv_b_2,msg_id_1) in
                    {219}let (payload_10: bitstring,jwe_tag_10: mac) = aeadEncrypt(key_4,nonce_10,conf_2,associated_data_1) in
                    {220}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_10,associated_data_1);
                    {221}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_10,associated_data_1,payload_10,jwe_tag_10)));
                    {222}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
            )
            else
                {223}let nonce_11: bitstring = fail-any in
                {224}let (payload_11: bitstring,jwe_tag_11: mac) = aeadEncrypt(key_4,nonce_11,conf_2,associated_data_1) in
                {225}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_11,associated_data_1);
                {226}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_11,associated_data_1,payload_11,jwe_tag_11)));
                {227}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
        )
        else
            {228}let key_5: key = par_res_key_b_3 in
            {229}let v_6: bool = (msg_type_1 = REQ) in
            (
                {230}if v_6 then
                (
                    {231}let nonce_12: bitstring = deriveNonce(par_req_iv_b_2,msg_id_1) in
                    {232}let (payload_12: bitstring,jwe_tag_12: mac) = aeadEncrypt(key_5,nonce_12,conf_2,associated_data_1) in
                    {233}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_12,associated_data_1);
                    {234}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_12,associated_data_1,payload_12,jwe_tag_12)));
                    {235}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
                )
                else
                    {236}let nonce_13: bitstring = deriveNonce(par_res_iv_b_2,msg_id_1) in
                    {237}let (payload_13: bitstring,jwe_tag_13: mac) = aeadEncrypt(key_5,nonce_13,conf_2,associated_data_1) in
                    {238}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_13,associated_data_1);
                    {239}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_13,associated_data_1,payload_13,jwe_tag_13)));
                    {240}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
            )
            else
                {241}let nonce_14: bitstring = fail-any in
                {242}let (payload_14: bitstring,jwe_tag_14: mac) = aeadEncrypt(key_5,nonce_14,conf_2,associated_data_1) in
                {243}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_14,associated_data_1);
                {244}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_14,associated_data_1,payload_14,jwe_tag_14)));
                {245}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
    )
    else
        {246}let key_6: key = fail-any in
        {247}let v_7: bool = (msg_type_1 = REQ) in
        (
            {248}if v_7 then
            (
                {249}let nonce_15: bitstring = deriveNonce(par_req_iv_b_2,msg_id_1) in
                {250}let (payload_15: bitstring,jwe_tag_15: mac) = aeadEncrypt(key_6,nonce_15,conf_2,associated_data_1) in
                {251}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_15,associated_data_1);
                {252}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_15,associated_data_1,payload_15,jwe_tag_15)));
                {253}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
            )
            else
                {254}let nonce_16: bitstring = deriveNonce(par_res_iv_b_2,msg_id_1) in
                {255}let (payload_16: bitstring,jwe_tag_16: mac) = aeadEncrypt(key_6,nonce_16,conf_2,associated_data_1) in
                {256}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_16,associated_data_1);
                {257}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_16,associated_data_1,payload_16,jwe_tag_16)));
                {258}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
        )
        else
            {259}let nonce_17: bitstring = fail-any in
            {260}let (payload_17: bitstring,jwe_tag_17: mac) = aeadEncrypt(key_6,nonce_17,conf_2,associated_data_1) in
            {261}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_17,associated_data_1);
            {262}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_17,associated_data_1,payload_17,jwe_tag_17)));
            {263}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
) | (
    {265}sync 2;
    {266}!
    {267}in(n32f_i, (sepp_a_addr_2: bitstring,prins_message: modprins));
    {268}let prins''(jwe_headers: bitstring,iv: bitstring,dataToIntegrityProtect: aad,dataToIntegrityProtectAndCipher: bitstring,jwe_tag_18: mac,ipx_b_mods: ipxmod,=EMPTY) = prins_message in
    {269}let modifications: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_18,signPrinsMod(prins_message,modp_a,ipx_a_id,jwe_tag_18,ipx_a_privkey)) in
    {270}let combineAAD(source_addr_2: bitstring,destination_addr_2: bitstring,msg_type_2: bitstring,nonconf_2: bitstring,msg_id_2: nat,auth_ipx_id: bitstring,n32f_context_2: bitstring) = dataToIntegrityProtect in
    {271}let modified_message: modprins = prins''(jwe_headers,iv,dataToIntegrityProtect,dataToIntegrityProtectAndCipher,jwe_tag_18,ipx_b_mods,modifications) in
    {272}event ipxRecvA(n32f_context_2,msg_id_2,jwe_tag_18,modifications);
    {273}out(n32f_a, (sepp_a_addr_2,modified_message))
) | (
    {274}sync 2;
    {275}!
    {276}in(n32f_a, (sepp_b_addr_2: bitstring,prins_message_1: prins));
    {277}let prins'(jwe_headers_1: bitstring,iv_1: bitstring,dataToIntegrityProtect_1: aad,dataToIntegrityProtectAndCipher_1: bitstring,jwe_tag_19: mac) = prins_message_1 in
    {278}let modifications_1: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_19,signPrins(prins_message_1,modp_a,ipx_a_id,jwe_tag_19,ipx_a_privkey)) in
    {279}let combineAAD(source_addr_3: bitstring,destination_addr_3: bitstring,msg_type_3: bitstring,nonconf_3: bitstring,msg_id_3: nat,=ipx_a_id,n32f_context_3: bitstring) = dataToIntegrityProtect_1 in
    {280}let modified_message_1: modprins = prins''(jwe_headers_1,iv_1,dataToIntegrityProtect_1,dataToIntegrityProtectAndCipher_1,jwe_tag_19,modifications_1,EMPTY) in
    {281}event ipxSendA(n32f_context_3,msg_id_3,jwe_tag_19,modifications_1);
    {282}out(n32f_i, (sepp_b_addr_2,modified_message_1))
) | (
    {283}sync 2;
    {284}!
    {285}in(n32f_i, (sepp_b_addr_3: bitstring,prins_message_2: modprins));
    {286}let prins''(jwe_headers_2: bitstring,iv_2: bitstring,dataToIntegrityProtect_2: aad,dataToIntegrityProtectAndCipher_2: bitstring,jwe_tag_20: mac,ipx_a_mods: ipxmod,=EMPTY) = prins_message_2 in
    {287}let modifications_2: ipxmod = jsonPatch(modp_b,ipx_b_id,jwe_tag_20,signPrinsMod(prins_message_2,modp_b,ipx_b_id,jwe_tag_20,ipx_b_privkey)) in
    {288}let combineAAD(source_addr_4: bitstring,destination_addr_4: bitstring,msg_type_4: bitstring,nonconf_4: bitstring,msg_id_4: nat,auth_ipx_id_1: bitstring,n32f_context_4: bitstring) = dataToIntegrityProtect_2 in
    {289}let modified_message_2: modprins = prins''(jwe_headers_2,iv_2,dataToIntegrityProtect_2,dataToIntegrityProtectAndCipher_2,jwe_tag_20,ipx_a_mods,modifications_2) in
    {290}event ipxRecvB(n32f_context_4,msg_id_4,jwe_tag_20,modifications_2);
    {291}out(n32f_b, (sepp_b_addr_3,modified_message_2))
) | (
    {292}sync 2;
    {293}!
    {294}in(n32f_b, (sepp_a_addr_3: bitstring,prins_message_3: prins));
    {295}let prins'(jwe_headers_3: bitstring,iv_3: bitstring,dataToIntegrityProtect_3: aad,dataToIntegrityProtectAndCipher_3: bitstring,jwe_tag_21: mac) = prins_message_3 in
    {296}let modifications_3: ipxmod = jsonPatch(modp_b,ipx_b_id,jwe_tag_21,signPrins(prins_message_3,modp_b,ipx_b_id,jwe_tag_21,ipx_b_privkey)) in
    {297}let combineAAD(source_addr_5: bitstring,destination_addr_5: bitstring,msg_type_5: bitstring,nonconf_5: bitstring,msg_id_5: nat,=ipx_b_id,n32f_context_5: bitstring) = dataToIntegrityProtect_3 in
    {298}let modified_message_3: modprins = prins''(jwe_headers_3,iv_3,dataToIntegrityProtect_3,dataToIntegrityProtectAndCipher_3,jwe_tag_21,modifications_3,EMPTY) in
    {299}event ipxSendB(n32f_context_5,msg_id_5,jwe_tag_21,modifications_3);
    {300}out(n32f_i, (sepp_a_addr_3,modified_message_3));
    {301}out(n32f_i, modifications_3)
) | (
    {302}sync 2;
    {303}!
    {304}in(n32f_i, (sepp_a_addr_4: bitstring,prins_message_4: modprins));
    {305}let prins''(jwe_headers_4: bitstring,iv_4: bitstring,dataToIntegrityProtect_4: aad,dataToIntegrityProtectAndCipher_4: bitstring,jwe_tag_22: mac,ipx_b_mods_1: ipxmod,=EMPTY) = prins_message_4 in
    {306}let modifications_4: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_22,signPrinsMod(prins_message_4,modp_a,ipx_a_id,jwe_tag_22,ipx_a_privkey)) in
    {307}let combineAAD(source_addr_6: bitstring,destination_addr_6: bitstring,msg_type_6: bitstring,nonconf_6: bitstring,msg_id_6: nat,auth_ipx_id_2: bitstring,n32f_context_6: bitstring) = dataToIntegrityProtect_4 in
    {308}let modified_message_4: modprins = prins''(jwe_headers_4,iv_4,dataToIntegrityProtect_4,dataToIntegrityProtectAndCipher_4,jwe_tag_22,EMPTY,modifications_4) in
    {309}event ipxRecvR1(n32f_context_6,msg_id_6,jwe_tag_22,modifications_4);
    {310}out(n32f_a, (sepp_a_addr_4,modified_message_4))
) | (
    {311}sync 2;
    {312}!
    {313}in(n32f_a, (sepp_b_addr_4: bitstring,prins_message_5: prins));
    {314}let prins'(jwe_headers_5: bitstring,iv_5: bitstring,dataToIntegrityProtect_5: aad,dataToIntegrityProtectAndCipher_5: bitstring,jwe_tag_23: mac) = prins_message_5 in
    {315}let modifications_5: ipxmod = jsonPatch(modp_r1,ipx_a_id,jwe_tag_23,signPrins(prins_message_5,modp_r1,ipx_a_id,jwe_tag_23,ipx_a_privkey)) in
    {316}let combineAAD(source_addr_7: bitstring,destination_addr_7: bitstring,msg_type_7: bitstring,nonconf_7: bitstring,msg_id_7: nat,auth_ipx_id_3: bitstring,n32f_context_7: bitstring) = dataToIntegrityProtect_5 in
    {317}let modified_message_5: modprins = prins''(jwe_headers_5,iv_5,dataToIntegrityProtect_5,dataToIntegrityProtectAndCipher_5,jwe_tag_23,modifications_5,EMPTY) in
    {318}event ipxSendR1(n32f_context_7,msg_id_7,jwe_tag_23,modifications_5);
    {319}out(n32f_i, (sepp_b_addr_4,modified_message_5))
) | (
    {320}sync 2;
    {321}!
    {322}in(n32f_i, (sepp_a_addr_5: bitstring,prins_message_6: modprins));
    {323}let prins''(jwe_headers_6: bitstring,iv_6: bitstring,dataToIntegrityProtect_6: aad,dataToIntegrityProtectAndCipher_6: bitstring,jwe_tag_24: mac,ipx_b_mods_2: ipxmod,=EMPTY) = prins_message_6 in
    {324}let modifications_6: ipxmod = jsonPatch(modp_a,ipx_r2_id,jwe_tag_24,signPrinsMod(prins_message_6,modp_a,ipx_r2_id,jwe_tag_24,ipx_r2_privkey)) in
    {325}let combineAAD(source_addr_8: bitstring,destination_addr_8: bitstring,msg_type_8: bitstring,nonconf_8: bitstring,msg_id_8: nat,auth_ipx_id_4: bitstring,n32f_context_8: bitstring) = dataToIntegrityProtect_6 in
    {326}let modified_message_6: modprins = prins''(jwe_headers_6,iv_6,dataToIntegrityProtect_6,dataToIntegrityProtectAndCipher_6,jwe_tag_24,EMPTY,modifications_6) in
    {327}event ipxRecvR2(n32f_context_8,msg_id_8,jwe_tag_24,modifications_6);
    {328}out(n32f_a, (sepp_a_addr_5,modified_message_6))
) | (
    {329}sync 2;
    {330}!
    {331}in(n32f_a, (sepp_b_addr_5: bitstring,prins_message_7: prins));
    {332}let prins'(jwe_headers_7: bitstring,iv_7: bitstring,dataToIntegrityProtect_7: aad,dataToIntegrityProtectAndCipher_7: bitstring,jwe_tag_25: mac) = prins_message_7 in
    {333}let modifications_7: ipxmod = jsonPatch(modp_a,ipx_r2_id,jwe_tag_25,signPrins(prins_message_7,modp_a,ipx_r2_id,jwe_tag_25,ipx_r2_privkey)) in
    {334}let combineAAD(source_addr_9: bitstring,destination_addr_9: bitstring,msg_type_9: bitstring,nonconf_9: bitstring,msg_id_9: nat,auth_ipx_id_5: bitstring,n32f_context_9: bitstring) = dataToIntegrityProtect_7 in
    {335}let modified_message_7: modprins = prins''(jwe_headers_7,iv_7,dataToIntegrityProtect_7,dataToIntegrityProtectAndCipher_7,jwe_tag_25,modifications_7,EMPTY) in
    {336}event ipxSendR2(n32f_context_9,msg_id_9,jwe_tag_25,modifications_7);
    {337}out(n32f_i, (sepp_b_addr_5,modified_message_7))
) | (
    {338}sync 2;
    {339}!
    {340}in(n32f_i, (sepp_a_addr_6: bitstring,prins_message_8: modprins));
    {341}in(n32f_i, modifications_8: ipxmod);
    {342}let prins''(jwe_headers_8: bitstring,iv_8: bitstring,dataToIntegrityProtect_8: aad,dataToIntegrityProtectAndCipher_8: bitstring,jwe_tag_26: mac,ipx_b_mods_3: ipxmod,ipx_a_mods_1: ipxmod) = prins_message_8 in
    {343}let combineAAD(source_addr_10: bitstring,destination_addr_10: bitstring,msg_type_10: bitstring,nonconf_10: bitstring,msg_id_10: nat,auth_ipx_id_6: bitstring,n32f_context_10: bitstring) = dataToIntegrityProtect_8 in
    {344}let modified_message_8: modprins = prins''(jwe_headers_8,iv_8,dataToIntegrityProtect_8,dataToIntegrityProtectAndCipher_8,jwe_tag_26,ipx_b_mods_3,modifications_8) in
    {345}event ipxRecvR3(n32f_context_10,msg_id_10,jwe_tag_26,modifications_8);
    {346}out(n32f_a, (sepp_a_addr_6,modified_message_8))
) | (
    {347}sync 3;
    {348}!
    {349}in(n32f_a, (=sepp_a_addr,prins_messsage: modprins));
    {350}let prins''(jwe_headers_9: bitstring,nonce_18: bitstring,dataToIntegrityProtect_9: aad,dataToIntegrityProtectAndCipher_9: bitstring,jwe_tag_27: mac,ipx_b_mods_4: ipxmod,ipx_a_mods_2: ipxmod) = prins_messsage in
    {351}let combineAAD(source_addr_11: bitstring,destination_addr_11: bitstring,msg_type_11: bitstring,nonconf_11: bitstring,msg_id_11: nat,auth_ipx_id_7: bitstring,n32f_context': bitstring) = dataToIntegrityProtect_9 in
    {352}event recvN32fMsgSeppA(n32f_context',msg_id_11,dataToIntegrityProtectAndCipher_9,dataToIntegrityProtect_9);
    {517}get storeSeppA(sepp_b_plmn_2: bitstring,sepp_b_addr_6: bitstring,n32f_context_11: bitstring,msg_cnt_a_3: nat,par_req_key_a_4: key,par_res_key_a_4: key,rev_req_key_a_4: key,rev_res_key_a_4: key,par_req_iv_a_3: bitstring,par_res_iv_a_3: bitstring,rev_req_iv_a_3: bitstring,rev_res_iv_a_3: bitstring,ciphers_a_2: bitstring,encp_a_1: bitstring,modp_a_5: bitstring,modp_b_5: bitstring,ipx_a_id_5: bitstring,ipx_a_key_4: pubkey,ipx_b_id_5: bitstring,ipx_b_key_4: pubkey) suchthat (n32f_context' = n32f_context_11) in
    {353}let v_8: bool = (msg_type_11 = REQ) in
    (
        {354}if v_8 then
        (
            {355}let key_7: key = rev_req_key_a_4 in
            {356}let v_9: bool = (msg_type_11 = REQ) in
            (
                {357}if v_9 then
                (
                    {358}let nonce_19: bitstring = deriveNonce(rev_req_iv_a_3,msg_id_11) in
                    {359}let conf_3: bitstring = aeadDecrypt(key_7,nonce_19,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                    {360}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws: bitstring) = ipx_b_mods_4 in
                    {361}if not(validPrinsSign(ipx_b_jws,ipx_b_key_4)) then
                        {362}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {363}out(err_a, (n32f_context_11,msg_id_11))
                    else
                        {364}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {365}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws: bitstring) = ipx_a_mods_2 in
                        {366}if not(validPrinsModSign(ipx_a_jws,ipx_a_key_4)) then
                            {367}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {368}out(err_a, (n32f_context_11,msg_id_11))
                        else
                            {369}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {370}if (validPrinsModSign(ipx_a_jws,ipx_a_key_4) && (validPrinsSign(ipx_b_jws,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                            {371}let msg_body_4: bitstring = applyPatches((conf_3,nonconf_11),modp_b_5,modp_a_5) in
                            {372}let http_message_4: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_4) in
                            {373}event sendHttpMsgSeppA(msg_type_11,msg_body_4);
                            {374}out(plmn_a, (RECV,http_message_4))
                )
                else
                    {375}let nonce_20: bitstring = deriveNonce(rev_res_iv_a_3,msg_id_11) in
                    {376}let conf_4: bitstring = aeadDecrypt(key_7,nonce_20,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                    {377}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_1: bitstring) = ipx_b_mods_4 in
                    {378}if not(validPrinsSign(ipx_b_jws_1,ipx_b_key_4)) then
                        {379}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {380}out(err_a, (n32f_context_11,msg_id_11))
                    else
                        {381}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {382}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_1: bitstring) = ipx_a_mods_2 in
                        {383}if not(validPrinsModSign(ipx_a_jws_1,ipx_a_key_4)) then
                            {384}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {385}out(err_a, (n32f_context_11,msg_id_11))
                        else
                            {386}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {387}if (validPrinsModSign(ipx_a_jws_1,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_1,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                            {388}let msg_body_5: bitstring = applyPatches((conf_4,nonconf_11),modp_b_5,modp_a_5) in
                            {389}let http_message_5: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_5) in
                            {390}event sendHttpMsgSeppA(msg_type_11,msg_body_5);
                            {391}out(plmn_a, (RECV,http_message_5))
            )
            else
                {392}let nonce_21: bitstring = fail-any in
                {393}let conf_5: bitstring = aeadDecrypt(key_7,nonce_21,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                {394}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_2: bitstring) = ipx_b_mods_4 in
                {395}if not(validPrinsSign(ipx_b_jws_2,ipx_b_key_4)) then
                    {396}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    {397}out(err_a, (n32f_context_11,msg_id_11))
                else
                    {398}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    {399}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_2: bitstring) = ipx_a_mods_2 in
                    {400}if not(validPrinsModSign(ipx_a_jws_2,ipx_a_key_4)) then
                        {401}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        {402}out(err_a, (n32f_context_11,msg_id_11))
                    else
                        {403}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        {404}if (validPrinsModSign(ipx_a_jws_2,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_2,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                        {405}let msg_body_6: bitstring = applyPatches((conf_5,nonconf_11),modp_b_5,modp_a_5) in
                        {406}let http_message_6: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_6) in
                        {407}event sendHttpMsgSeppA(msg_type_11,msg_body_6);
                        {408}out(plmn_a, (RECV,http_message_6))
        )
        else
            {409}let key_8: key = rev_res_key_a_4 in
            {410}let v_10: bool = (msg_type_11 = REQ) in
            (
                {411}if v_10 then
                (
                    {412}let nonce_22: bitstring = deriveNonce(rev_req_iv_a_3,msg_id_11) in
                    {413}let conf_6: bitstring = aeadDecrypt(key_8,nonce_22,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                    {414}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_3: bitstring) = ipx_b_mods_4 in
                    {415}if not(validPrinsSign(ipx_b_jws_3,ipx_b_key_4)) then
                        {416}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {417}out(err_a, (n32f_context_11,msg_id_11))
                    else
                        {418}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {419}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_3: bitstring) = ipx_a_mods_2 in
                        {420}if not(validPrinsModSign(ipx_a_jws_3,ipx_a_key_4)) then
                            {421}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {422}out(err_a, (n32f_context_11,msg_id_11))
                        else
                            {423}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {424}if (validPrinsModSign(ipx_a_jws_3,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_3,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                            {425}let msg_body_7: bitstring = applyPatches((conf_6,nonconf_11),modp_b_5,modp_a_5) in
                            {426}let http_message_7: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_7) in
                            {427}event sendHttpMsgSeppA(msg_type_11,msg_body_7);
                            {428}out(plmn_a, (RECV,http_message_7))
                )
                else
                    {429}let nonce_23: bitstring = deriveNonce(rev_res_iv_a_3,msg_id_11) in
                    {430}let conf_7: bitstring = aeadDecrypt(key_8,nonce_23,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                    {431}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_4: bitstring) = ipx_b_mods_4 in
                    {432}if not(validPrinsSign(ipx_b_jws_4,ipx_b_key_4)) then
                        {433}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {434}out(err_a, (n32f_context_11,msg_id_11))
                    else
                        {435}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {436}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_4: bitstring) = ipx_a_mods_2 in
                        {437}if not(validPrinsModSign(ipx_a_jws_4,ipx_a_key_4)) then
                            {438}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {439}out(err_a, (n32f_context_11,msg_id_11))
                        else
                            {440}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {441}if (validPrinsModSign(ipx_a_jws_4,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_4,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                            {442}let msg_body_8: bitstring = applyPatches((conf_7,nonconf_11),modp_b_5,modp_a_5) in
                            {443}let http_message_8: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_8) in
                            {444}event sendHttpMsgSeppA(msg_type_11,msg_body_8);
                            {445}out(plmn_a, (RECV,http_message_8))
            )
            else
                {446}let nonce_24: bitstring = fail-any in
                {447}let conf_8: bitstring = aeadDecrypt(key_8,nonce_24,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                {448}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_5: bitstring) = ipx_b_mods_4 in
                {449}if not(validPrinsSign(ipx_b_jws_5,ipx_b_key_4)) then
                    {450}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    {451}out(err_a, (n32f_context_11,msg_id_11))
                else
                    {452}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    {453}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_5: bitstring) = ipx_a_mods_2 in
                    {454}if not(validPrinsModSign(ipx_a_jws_5,ipx_a_key_4)) then
                        {455}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        {456}out(err_a, (n32f_context_11,msg_id_11))
                    else
                        {457}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        {458}if (validPrinsModSign(ipx_a_jws_5,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_5,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                        {459}let msg_body_9: bitstring = applyPatches((conf_8,nonconf_11),modp_b_5,modp_a_5) in
                        {460}let http_message_9: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_9) in
                        {461}event sendHttpMsgSeppA(msg_type_11,msg_body_9);
                        {462}out(plmn_a, (RECV,http_message_9))
    )
    else
        {463}let key_9: key = fail-any in
        {464}let v_11: bool = (msg_type_11 = REQ) in
        (
            {465}if v_11 then
            (
                {466}let nonce_25: bitstring = deriveNonce(rev_req_iv_a_3,msg_id_11) in
                {467}let conf_9: bitstring = aeadDecrypt(key_9,nonce_25,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                {468}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_6: bitstring) = ipx_b_mods_4 in
                {469}if not(validPrinsSign(ipx_b_jws_6,ipx_b_key_4)) then
                    {470}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    {471}out(err_a, (n32f_context_11,msg_id_11))
                else
                    {472}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    {473}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_6: bitstring) = ipx_a_mods_2 in
                    {474}if not(validPrinsModSign(ipx_a_jws_6,ipx_a_key_4)) then
                        {475}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        {476}out(err_a, (n32f_context_11,msg_id_11))
                    else
                        {477}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        {478}if (validPrinsModSign(ipx_a_jws_6,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_6,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                        {479}let msg_body_10: bitstring = applyPatches((conf_9,nonconf_11),modp_b_5,modp_a_5) in
                        {480}let http_message_10: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_10) in
                        {481}event sendHttpMsgSeppA(msg_type_11,msg_body_10);
                        {482}out(plmn_a, (RECV,http_message_10))
            )
            else
                {483}let nonce_26: bitstring = deriveNonce(rev_res_iv_a_3,msg_id_11) in
                {484}let conf_10: bitstring = aeadDecrypt(key_9,nonce_26,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                {485}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_7: bitstring) = ipx_b_mods_4 in
                {486}if not(validPrinsSign(ipx_b_jws_7,ipx_b_key_4)) then
                    {487}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    {488}out(err_a, (n32f_context_11,msg_id_11))
                else
                    {489}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    {490}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_7: bitstring) = ipx_a_mods_2 in
                    {491}if not(validPrinsModSign(ipx_a_jws_7,ipx_a_key_4)) then
                        {492}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        {493}out(err_a, (n32f_context_11,msg_id_11))
                    else
                        {494}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        {495}if (validPrinsModSign(ipx_a_jws_7,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_7,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                        {496}let msg_body_11: bitstring = applyPatches((conf_10,nonconf_11),modp_b_5,modp_a_5) in
                        {497}let http_message_11: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_11) in
                        {498}event sendHttpMsgSeppA(msg_type_11,msg_body_11);
                        {499}out(plmn_a, (RECV,http_message_11))
        )
        else
            {500}let nonce_27: bitstring = fail-any in
            {501}let conf_11: bitstring = aeadDecrypt(key_9,nonce_27,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
            {502}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_8: bitstring) = ipx_b_mods_4 in
            {503}if not(validPrinsSign(ipx_b_jws_8,ipx_b_key_4)) then
                {504}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                {505}out(err_a, (n32f_context_11,msg_id_11))
            else
                {506}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                {507}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_8: bitstring) = ipx_a_mods_2 in
                {508}if not(validPrinsModSign(ipx_a_jws_8,ipx_a_key_4)) then
                    {509}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                    {510}out(err_a, (n32f_context_11,msg_id_11))
                else
                    {511}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                    {512}if (validPrinsModSign(ipx_a_jws_8,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_8,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                    {513}let msg_body_12: bitstring = applyPatches((conf_11,nonconf_11),modp_b_5,modp_a_5) in
                    {514}let http_message_12: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_12) in
                    {515}event sendHttpMsgSeppA(msg_type_11,msg_body_12);
                    {516}out(plmn_a, (RECV,http_message_12))
) | (
    {518}sync 3;
    {519}!
    {520}in(n32f_b, (=sepp_b_addr,prins_messsage_1: modprins));
    {521}let prins''(jwe_headers_10: bitstring,nonce_28: bitstring,dataToIntegrityProtect_10: aad,dataToIntegrityProtectAndCipher_10: bitstring,jwe_tag_28: mac,ipx_a_mods_3: ipxmod,ipx_b_mods_5: ipxmod) = prins_messsage_1 in
    {522}let combineAAD(source_addr_12: bitstring,destination_addr_12: bitstring,msg_type_12: bitstring,nonconf_12: bitstring,msg_id_12: nat,auth_ipx_id_8: bitstring,n32f_context'_1: bitstring) = dataToIntegrityProtect_10 in
    {523}event recvN32fMsgSeppB(n32f_context'_1,msg_id_12,dataToIntegrityProtectAndCipher_10,dataToIntegrityProtect_10);
    {688}get storeSeppB(sepp_a_plmn_2: bitstring,sepp_a_addr_7: bitstring,n32f_context_12: bitstring,msg_cnt_b_3: nat,par_req_key_b_4: key,par_res_key_b_4: key,rev_req_key_b_4: key,rev_res_key_b_4: key,par_req_iv_b_3: bitstring,par_res_iv_b_3: bitstring,rev_req_iv_b_3: bitstring,rev_res_iv_b_3: bitstring,ciphers_b_2: bitstring,encp_b_1: bitstring,modp_b_6: bitstring,modp_a_6: bitstring,ipx_b_id_6: bitstring,ipx_b_key_5: pubkey,ipx_a_id_6: bitstring,ipx_a_key_5: pubkey) suchthat (n32f_context'_1 = n32f_context_12) in
    {524}let v_12: bool = (msg_type_12 = REQ) in
    (
        {525}if v_12 then
        (
            {526}let key_10: key = rev_req_key_b_4 in
            {527}let v_13: bool = (msg_type_12 = REQ) in
            (
                {528}if v_13 then
                (
                    {529}let nonce_29: bitstring = deriveNonce(rev_req_iv_b_3,msg_id_12) in
                    {530}let conf_12: bitstring = aeadDecrypt(key_10,nonce_29,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                    {531}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_9: bitstring) = ipx_a_mods_3 in
                    {532}if not(validPrinsSign(ipx_a_jws_9,ipx_a_key_5)) then
                        {533}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {534}out(err_b, (n32f_context_12,msg_id_12))
                    else
                        {535}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {536}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_9: bitstring) = ipx_b_mods_5 in
                        {537}if not(validPrinsModSign(ipx_b_jws_9,ipx_b_key_5)) then
                            {538}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {539}out(err_b, (n32f_context_12,msg_id_12))
                        else
                            {540}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {541}if (validPrinsSign(ipx_a_jws_9,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_9,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                            {542}let msg_body_13: bitstring = applyPatches((conf_12,nonconf_12),modp_a_6,modp_b_6) in
                            {543}let http_message_13: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_13) in
                            {544}event sendHttpMsgSeppB(msg_type_12,msg_body_13);
                            {545}out(plmn_b, (RECV,http_message_13))
                )
                else
                    {546}let nonce_30: bitstring = deriveNonce(rev_res_iv_b_3,msg_id_12) in
                    {547}let conf_13: bitstring = aeadDecrypt(key_10,nonce_30,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                    {548}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_10: bitstring) = ipx_a_mods_3 in
                    {549}if not(validPrinsSign(ipx_a_jws_10,ipx_a_key_5)) then
                        {550}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {551}out(err_b, (n32f_context_12,msg_id_12))
                    else
                        {552}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {553}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_10: bitstring) = ipx_b_mods_5 in
                        {554}if not(validPrinsModSign(ipx_b_jws_10,ipx_b_key_5)) then
                            {555}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {556}out(err_b, (n32f_context_12,msg_id_12))
                        else
                            {557}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {558}if (validPrinsSign(ipx_a_jws_10,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_10,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                            {559}let msg_body_14: bitstring = applyPatches((conf_13,nonconf_12),modp_a_6,modp_b_6) in
                            {560}let http_message_14: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_14) in
                            {561}event sendHttpMsgSeppB(msg_type_12,msg_body_14);
                            {562}out(plmn_b, (RECV,http_message_14))
            )
            else
                {563}let nonce_31: bitstring = fail-any in
                {564}let conf_14: bitstring = aeadDecrypt(key_10,nonce_31,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                {565}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_11: bitstring) = ipx_a_mods_3 in
                {566}if not(validPrinsSign(ipx_a_jws_11,ipx_a_key_5)) then
                    {567}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    {568}out(err_b, (n32f_context_12,msg_id_12))
                else
                    {569}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    {570}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_11: bitstring) = ipx_b_mods_5 in
                    {571}if not(validPrinsModSign(ipx_b_jws_11,ipx_b_key_5)) then
                        {572}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        {573}out(err_b, (n32f_context_12,msg_id_12))
                    else
                        {574}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        {575}if (validPrinsSign(ipx_a_jws_11,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_11,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                        {576}let msg_body_15: bitstring = applyPatches((conf_14,nonconf_12),modp_a_6,modp_b_6) in
                        {577}let http_message_15: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_15) in
                        {578}event sendHttpMsgSeppB(msg_type_12,msg_body_15);
                        {579}out(plmn_b, (RECV,http_message_15))
        )
        else
            {580}let key_11: key = rev_res_key_b_4 in
            {581}let v_14: bool = (msg_type_12 = REQ) in
            (
                {582}if v_14 then
                (
                    {583}let nonce_32: bitstring = deriveNonce(rev_req_iv_b_3,msg_id_12) in
                    {584}let conf_15: bitstring = aeadDecrypt(key_11,nonce_32,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                    {585}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_12: bitstring) = ipx_a_mods_3 in
                    {586}if not(validPrinsSign(ipx_a_jws_12,ipx_a_key_5)) then
                        {587}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {588}out(err_b, (n32f_context_12,msg_id_12))
                    else
                        {589}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {590}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_12: bitstring) = ipx_b_mods_5 in
                        {591}if not(validPrinsModSign(ipx_b_jws_12,ipx_b_key_5)) then
                            {592}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {593}out(err_b, (n32f_context_12,msg_id_12))
                        else
                            {594}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {595}if (validPrinsSign(ipx_a_jws_12,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_12,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                            {596}let msg_body_16: bitstring = applyPatches((conf_15,nonconf_12),modp_a_6,modp_b_6) in
                            {597}let http_message_16: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_16) in
                            {598}event sendHttpMsgSeppB(msg_type_12,msg_body_16);
                            {599}out(plmn_b, (RECV,http_message_16))
                )
                else
                    {600}let nonce_33: bitstring = deriveNonce(rev_res_iv_b_3,msg_id_12) in
                    {601}let conf_16: bitstring = aeadDecrypt(key_11,nonce_33,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                    {602}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_13: bitstring) = ipx_a_mods_3 in
                    {603}if not(validPrinsSign(ipx_a_jws_13,ipx_a_key_5)) then
                        {604}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {605}out(err_b, (n32f_context_12,msg_id_12))
                    else
                        {606}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {607}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_13: bitstring) = ipx_b_mods_5 in
                        {608}if not(validPrinsModSign(ipx_b_jws_13,ipx_b_key_5)) then
                            {609}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {610}out(err_b, (n32f_context_12,msg_id_12))
                        else
                            {611}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {612}if (validPrinsSign(ipx_a_jws_13,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_13,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                            {613}let msg_body_17: bitstring = applyPatches((conf_16,nonconf_12),modp_a_6,modp_b_6) in
                            {614}let http_message_17: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_17) in
                            {615}event sendHttpMsgSeppB(msg_type_12,msg_body_17);
                            {616}out(plmn_b, (RECV,http_message_17))
            )
            else
                {617}let nonce_34: bitstring = fail-any in
                {618}let conf_17: bitstring = aeadDecrypt(key_11,nonce_34,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                {619}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_14: bitstring) = ipx_a_mods_3 in
                {620}if not(validPrinsSign(ipx_a_jws_14,ipx_a_key_5)) then
                    {621}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    {622}out(err_b, (n32f_context_12,msg_id_12))
                else
                    {623}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    {624}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_14: bitstring) = ipx_b_mods_5 in
                    {625}if not(validPrinsModSign(ipx_b_jws_14,ipx_b_key_5)) then
                        {626}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        {627}out(err_b, (n32f_context_12,msg_id_12))
                    else
                        {628}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        {629}if (validPrinsSign(ipx_a_jws_14,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_14,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                        {630}let msg_body_18: bitstring = applyPatches((conf_17,nonconf_12),modp_a_6,modp_b_6) in
                        {631}let http_message_18: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_18) in
                        {632}event sendHttpMsgSeppB(msg_type_12,msg_body_18);
                        {633}out(plmn_b, (RECV,http_message_18))
    )
    else
        {634}let key_12: key = fail-any in
        {635}let v_15: bool = (msg_type_12 = REQ) in
        (
            {636}if v_15 then
            (
                {637}let nonce_35: bitstring = deriveNonce(rev_req_iv_b_3,msg_id_12) in
                {638}let conf_18: bitstring = aeadDecrypt(key_12,nonce_35,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                {639}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_15: bitstring) = ipx_a_mods_3 in
                {640}if not(validPrinsSign(ipx_a_jws_15,ipx_a_key_5)) then
                    {641}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    {642}out(err_b, (n32f_context_12,msg_id_12))
                else
                    {643}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    {644}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_15: bitstring) = ipx_b_mods_5 in
                    {645}if not(validPrinsModSign(ipx_b_jws_15,ipx_b_key_5)) then
                        {646}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        {647}out(err_b, (n32f_context_12,msg_id_12))
                    else
                        {648}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        {649}if (validPrinsSign(ipx_a_jws_15,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_15,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                        {650}let msg_body_19: bitstring = applyPatches((conf_18,nonconf_12),modp_a_6,modp_b_6) in
                        {651}let http_message_19: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_19) in
                        {652}event sendHttpMsgSeppB(msg_type_12,msg_body_19);
                        {653}out(plmn_b, (RECV,http_message_19))
            )
            else
                {654}let nonce_36: bitstring = deriveNonce(rev_res_iv_b_3,msg_id_12) in
                {655}let conf_19: bitstring = aeadDecrypt(key_12,nonce_36,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                {656}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_16: bitstring) = ipx_a_mods_3 in
                {657}if not(validPrinsSign(ipx_a_jws_16,ipx_a_key_5)) then
                    {658}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    {659}out(err_b, (n32f_context_12,msg_id_12))
                else
                    {660}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    {661}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_16: bitstring) = ipx_b_mods_5 in
                    {662}if not(validPrinsModSign(ipx_b_jws_16,ipx_b_key_5)) then
                        {663}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        {664}out(err_b, (n32f_context_12,msg_id_12))
                    else
                        {665}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        {666}if (validPrinsSign(ipx_a_jws_16,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_16,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                        {667}let msg_body_20: bitstring = applyPatches((conf_19,nonconf_12),modp_a_6,modp_b_6) in
                        {668}let http_message_20: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_20) in
                        {669}event sendHttpMsgSeppB(msg_type_12,msg_body_20);
                        {670}out(plmn_b, (RECV,http_message_20))
        )
        else
            {671}let nonce_37: bitstring = fail-any in
            {672}let conf_20: bitstring = aeadDecrypt(key_12,nonce_37,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
            {673}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_17: bitstring) = ipx_a_mods_3 in
            {674}if not(validPrinsSign(ipx_a_jws_17,ipx_a_key_5)) then
                {675}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                {676}out(err_b, (n32f_context_12,msg_id_12))
            else
                {677}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                {678}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_17: bitstring) = ipx_b_mods_5 in
                {679}if not(validPrinsModSign(ipx_b_jws_17,ipx_b_key_5)) then
                    {680}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                    {681}out(err_b, (n32f_context_12,msg_id_12))
                else
                    {682}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                    {683}if (validPrinsSign(ipx_a_jws_17,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_17,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                    {684}let msg_body_21: bitstring = applyPatches((conf_20,nonconf_12),modp_a_6,modp_b_6) in
                    {685}let http_message_21: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_21) in
                    {686}event sendHttpMsgSeppB(msg_type_12,msg_body_21);
                    {687}out(plmn_b, (RECV,http_message_21))
) | (
    {689}sync 3;
    {690}!
    {691}in(plmn_a, (=RECV,msg: http));
    {692}let createHttp(nf_b_addr_1: bitstring,=nf_a_addr,msg_type_13: bitstring,msg_body_22: bitstring) = msg in
    {693}if (msg_type_13 = REQ) then
        {694}event sendHttpMsgNfA(RES,msg_body_22);
        {695}out(plmn_a, (SEND,createHttp(nf_a_addr,nf_b_addr_1,RES,msg_body_22)))
    else
        {696}event recvHttpMsgNfA(RES,msg_body_22)
) | (
    {697}sync 3;
    {698}!
    {699}in(plmn_b, (=RECV,msg_1: http));
    {700}let createHttp(nf_a_addr_1: bitstring,=nf_b_addr,msg_type_14: bitstring,msg_body_23: bitstring) = msg_1 in
    {701}if (msg_type_14 = REQ) then
        {702}event sendHttpMsgNfB(RES,msg_body_23);
        {703}out(plmn_b, (SEND,createHttp(nf_b_addr,nf_a_addr_1,RES,msg_body_23)))
    else
        {704}event recvHttpMsgNfB(RES,msg_body_23)
) | (
    {705}sync 3;
    {706}!
    {707}in(err_a, (n32f_context'_2: bitstring,msg_id_13: nat));
    {711}get storeSeppA(sepp_b_plmn_3: bitstring,sepp_b_addr_7: bitstring,n32f_context_13: bitstring,msg_cnt_a_4: nat,par_req_key_a_5: key,par_res_key_a_5: key,rev_req_key_a_5: key,rev_res_key_a_5: key,par_req_iv_a_4: bitstring,par_res_iv_a_4: bitstring,rev_req_iv_a_4: bitstring,rev_res_iv_a_4: bitstring,ciphers_a_3: bitstring,encp_a_2: bitstring,modp_a_7: bitstring,modp_b_7: bitstring,ipx_a_id_7: bitstring,ipx_a_key_6: pubkey,ipx_b_id_7: bitstring,ipx_b_key_6: pubkey) suchthat (n32f_context'_2 = n32f_context_13) in
    {708}out(n32c_a, (sepp_b_addr_7,n32f_context_13,msg_id_13));
    {709}in(n32c_a, (=sepp_a_addr,=n32f_context_13,=msg_id_13,status_code: bitstring));
    {710}event sendErrorSeppA(n32f_context_13,msg_id_13,status_code)
) | (
    {712}sync 3;
    {713}!
    {714}in(n32c_b, (=sepp_a_addr,n32f_context'_3: bitstring,msg_id_14: nat));
    {720}get storeSeppA(sepp_b_plmn_4: bitstring,sepp_b_addr_8: bitstring,n32f_context_14: bitstring,msg_cnt_a_5: nat,par_req_key_a_6: key,par_res_key_a_6: key,rev_req_key_a_6: key,rev_res_key_a_6: key,par_req_iv_a_5: bitstring,par_res_iv_a_5: bitstring,rev_req_iv_a_5: bitstring,rev_res_iv_a_5: bitstring,ciphers_a_4: bitstring,encp_a_3: bitstring,modp_a_8: bitstring,modp_b_8: bitstring,ipx_a_id_8: bitstring,ipx_a_key_7: pubkey,ipx_b_id_8: bitstring,ipx_b_key_7: pubkey) suchthat (n32f_context'_3 = n32f_context_14) in
    {715}if (msg_id_14 ≤ msg_cnt_a_5) then
        {716}out(n32c_b, (sepp_b_addr_8,n32f_context_14,msg_id_14,SUCC));
        {717}event recvErrorSeppA(n32f_context_14,msg_id_14,SUCC)
    else
        {718}out(n32c_b, (sepp_b_addr_8,n32f_context_14,msg_id_14,FAIL));
        {719}event recvErrorSeppA(n32f_context_14,msg_id_14,FAIL)
) | (
    {721}sync 3;
    {722}!
    {723}in(err_b, (n32f_context'_4: bitstring,msg_id_15: nat));
    {727}get storeSeppB(sepp_a_plmn_3: bitstring,sepp_a_addr_8: bitstring,n32f_context_15: bitstring,msg_cnt_b_4: nat,par_req_key_b_5: key,par_res_key_b_5: key,rev_req_key_b_5: key,rev_res_key_b_5: key,par_req_iv_b_4: bitstring,par_res_iv_b_4: bitstring,rev_req_iv_b_4: bitstring,rev_res_iv_b_4: bitstring,ciphers_b_3: bitstring,encp_b_2: bitstring,modp_b_9: bitstring,modp_a_9: bitstring,ipx_b_id_9: bitstring,ipx_b_key_8: pubkey,ipx_a_id_9: bitstring,ipx_a_key_8: pubkey) suchthat (n32f_context'_4 = n32f_context_15) in
    {724}out(n32c_b, (sepp_a_addr_8,n32f_context_15,msg_id_15));
    {725}in(n32c_b, (=sepp_b_addr,=n32f_context_15,=msg_id_15,status_code_1: bitstring));
    {726}event sendErrorSeppB(n32f_context_15,msg_id_15,status_code_1)
) | (
    {728}sync 3;
    {729}!
    {730}in(n32c_a, (=sepp_b_addr,n32f_context'_5: bitstring,msg_id_16: nat));
    {736}get storeSeppB(sepp_a_plmn_4: bitstring,sepp_a_addr_9: bitstring,n32f_context_16: bitstring,msg_cnt_b_5: nat,par_req_key_b_6: key,par_res_key_b_6: key,rev_req_key_b_6: key,rev_res_key_b_6: key,par_req_iv_b_5: bitstring,par_res_iv_b_5: bitstring,rev_req_iv_b_5: bitstring,rev_res_iv_b_5: bitstring,ciphers_b_4: bitstring,encp_b_3: bitstring,modp_b_10: bitstring,modp_a_10: bitstring,ipx_b_id_10: bitstring,ipx_b_key_9: pubkey,ipx_a_id_10: bitstring,ipx_a_key_9: pubkey) suchthat (n32f_context'_5 = n32f_context_16) in
    {731}if (msg_id_16 ≤ msg_cnt_b_5) then
        {732}out(n32c_a, (sepp_a_addr_9,n32f_context_16,msg_id_16,SUCC));
        {733}event recvErrorSeppB(n32f_context_16,msg_id_16,SUCC)
    else
        {734}out(n32c_a, (sepp_a_addr_9,n32f_context_16,msg_id_16,FAIL));
        {735}event recvErrorSeppB(n32f_context_16,msg_id_16,FAIL)
) | (
    {737}sync 3;
    {738}!
    {739}in(plmn_a, (=SEND,http_message_22: http));
    {802}get storeSeppA(sepp_b_plmn_5: bitstring,sepp_b_addr_9: bitstring,n32f_context_17: bitstring,msg_cnt_a_6: nat,par_req_key_a_7: key,par_res_key_a_7: key,rev_req_key_a_7: key,rev_res_key_a_7: key,par_req_iv_a_6: bitstring,par_res_iv_a_6: bitstring,rev_req_iv_a_6: bitstring,rev_res_iv_a_6: bitstring,ciphers_a_5: bitstring,encp_a_4: bitstring,modp_a_11: bitstring,modp_b_11: bitstring,ipx_a_id_11: bitstring,ipx_a_key_10: pubkey,ipx_b_id_11: bitstring,ipx_b_key_10: pubkey) in
    {740}let createHttp(source_addr_13: bitstring,destination_addr_13: bitstring,msg_type_15: bitstring,msg_body_24: bitstring) = http_message_22 in
    {741}event recvHttpMsgSeppA(msg_type_15,msg_body_24);
    {742}let conf_21: bitstring = getConf(msg_body_24,encp_a_4) in
    {743}let nonconf_13: bitstring = getNonconf(msg_body_24,encp_a_4) in
    {744}let msg_id_17: nat = msg_cnt_a_6 + 1 in
    {745}let associated_data_2: aad = combineAAD(source_addr_13,destination_addr_13,msg_type_15,nonconf_13,msg_id_17,ipx_a_id_11,n32f_context_17) in
    {746}let v_16: bool = (msg_type_15 = REQ) in
    (
        {747}if v_16 then
        (
            {748}let key_13: key = par_req_key_a_7 in
            {749}let v_17: bool = (msg_type_15 = REQ) in
            (
                {750}if v_17 then
                (
                    {751}let nonce_38: bitstring = deriveNonce(par_req_iv_a_6,msg_id_17) in
                    {752}let (payload_18: bitstring,jwe_tag_29: mac) = aeadEncrypt(key_13,nonce_38,conf_21,associated_data_2) in
                    {753}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_18,associated_data_2);
                    {754}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_38,associated_data_2,payload_18,jwe_tag_29)));
                    {755}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
                )
                else
                    {756}let nonce_39: bitstring = deriveNonce(par_res_iv_a_6,msg_id_17) in
                    {757}let (payload_19: bitstring,jwe_tag_30: mac) = aeadEncrypt(key_13,nonce_39,conf_21,associated_data_2) in
                    {758}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_19,associated_data_2);
                    {759}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_39,associated_data_2,payload_19,jwe_tag_30)));
                    {760}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
            )
            else
                {761}let nonce_40: bitstring = fail-any in
                {762}let (payload_20: bitstring,jwe_tag_31: mac) = aeadEncrypt(key_13,nonce_40,conf_21,associated_data_2) in
                {763}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_20,associated_data_2);
                {764}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_40,associated_data_2,payload_20,jwe_tag_31)));
                {765}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
        )
        else
            {766}let key_14: key = par_res_key_a_7 in
            {767}let v_18: bool = (msg_type_15 = REQ) in
            (
                {768}if v_18 then
                (
                    {769}let nonce_41: bitstring = deriveNonce(par_req_iv_a_6,msg_id_17) in
                    {770}let (payload_21: bitstring,jwe_tag_32: mac) = aeadEncrypt(key_14,nonce_41,conf_21,associated_data_2) in
                    {771}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_21,associated_data_2);
                    {772}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_41,associated_data_2,payload_21,jwe_tag_32)));
                    {773}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
                )
                else
                    {774}let nonce_42: bitstring = deriveNonce(par_res_iv_a_6,msg_id_17) in
                    {775}let (payload_22: bitstring,jwe_tag_33: mac) = aeadEncrypt(key_14,nonce_42,conf_21,associated_data_2) in
                    {776}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_22,associated_data_2);
                    {777}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_42,associated_data_2,payload_22,jwe_tag_33)));
                    {778}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
            )
            else
                {779}let nonce_43: bitstring = fail-any in
                {780}let (payload_23: bitstring,jwe_tag_34: mac) = aeadEncrypt(key_14,nonce_43,conf_21,associated_data_2) in
                {781}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_23,associated_data_2);
                {782}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_43,associated_data_2,payload_23,jwe_tag_34)));
                {783}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
    )
    else
        {784}let key_15: key = fail-any in
        {785}let v_19: bool = (msg_type_15 = REQ) in
        (
            {786}if v_19 then
            (
                {787}let nonce_44: bitstring = deriveNonce(par_req_iv_a_6,msg_id_17) in
                {788}let (payload_24: bitstring,jwe_tag_35: mac) = aeadEncrypt(key_15,nonce_44,conf_21,associated_data_2) in
                {789}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_24,associated_data_2);
                {790}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_44,associated_data_2,payload_24,jwe_tag_35)));
                {791}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
            )
            else
                {792}let nonce_45: bitstring = deriveNonce(par_res_iv_a_6,msg_id_17) in
                {793}let (payload_25: bitstring,jwe_tag_36: mac) = aeadEncrypt(key_15,nonce_45,conf_21,associated_data_2) in
                {794}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_25,associated_data_2);
                {795}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_45,associated_data_2,payload_25,jwe_tag_36)));
                {796}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
        )
        else
            {797}let nonce_46: bitstring = fail-any in
            {798}let (payload_26: bitstring,jwe_tag_37: mac) = aeadEncrypt(key_15,nonce_46,conf_21,associated_data_2) in
            {799}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_26,associated_data_2);
            {800}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_46,associated_data_2,payload_26,jwe_tag_37)));
            {801}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
) | (
    {803}sync 3;
    {804}!
    {805}in(plmn_b, (=SEND,http_message_23: http));
    {868}get storeSeppB(sepp_a_plmn_5: bitstring,sepp_a_addr_10: bitstring,n32f_context_18: bitstring,msg_cnt_b_6: nat,par_req_key_b_7: key,par_res_key_b_7: key,rev_req_key_b_7: key,rev_res_key_b_7: key,par_req_iv_b_6: bitstring,par_res_iv_b_6: bitstring,rev_req_iv_b_6: bitstring,rev_res_iv_b_6: bitstring,ciphers_b_5: bitstring,encp_b_4: bitstring,modp_b_12: bitstring,modp_a_12: bitstring,ipx_b_id_12: bitstring,ipx_b_key_11: pubkey,ipx_a_id_12: bitstring,ipx_a_key_11: pubkey) in
    {806}let createHttp(source_addr_14: bitstring,destination_addr_14: bitstring,msg_type_16: bitstring,msg_body_25: bitstring) = http_message_23 in
    {807}event recvHttpMsgSeppB(msg_type_16,msg_body_25);
    {808}let conf_22: bitstring = getConf(msg_body_25,encp_b_4) in
    {809}let nonconf_14: bitstring = getNonconf(msg_body_25,encp_b_4) in
    {810}let msg_id_18: nat = msg_cnt_b_6 + 1 in
    {811}let associated_data_3: aad = combineAAD(source_addr_14,destination_addr_14,msg_type_16,nonconf_14,msg_id_18,ipx_b_id_12,n32f_context_18) in
    {812}let v_20: bool = (msg_type_16 = REQ) in
    (
        {813}if v_20 then
        (
            {814}let key_16: key = par_req_key_b_7 in
            {815}let v_21: bool = (msg_type_16 = REQ) in
            (
                {816}if v_21 then
                (
                    {817}let nonce_47: bitstring = deriveNonce(par_req_iv_b_6,msg_id_18) in
                    {818}let (payload_27: bitstring,jwe_tag_38: mac) = aeadEncrypt(key_16,nonce_47,conf_22,associated_data_3) in
                    {819}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_27,associated_data_3);
                    {820}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_47,associated_data_3,payload_27,jwe_tag_38)));
                    {821}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
                )
                else
                    {822}let nonce_48: bitstring = deriveNonce(par_res_iv_b_6,msg_id_18) in
                    {823}let (payload_28: bitstring,jwe_tag_39: mac) = aeadEncrypt(key_16,nonce_48,conf_22,associated_data_3) in
                    {824}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_28,associated_data_3);
                    {825}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_48,associated_data_3,payload_28,jwe_tag_39)));
                    {826}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
            )
            else
                {827}let nonce_49: bitstring = fail-any in
                {828}let (payload_29: bitstring,jwe_tag_40: mac) = aeadEncrypt(key_16,nonce_49,conf_22,associated_data_3) in
                {829}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_29,associated_data_3);
                {830}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_49,associated_data_3,payload_29,jwe_tag_40)));
                {831}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
        )
        else
            {832}let key_17: key = par_res_key_b_7 in
            {833}let v_22: bool = (msg_type_16 = REQ) in
            (
                {834}if v_22 then
                (
                    {835}let nonce_50: bitstring = deriveNonce(par_req_iv_b_6,msg_id_18) in
                    {836}let (payload_30: bitstring,jwe_tag_41: mac) = aeadEncrypt(key_17,nonce_50,conf_22,associated_data_3) in
                    {837}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_30,associated_data_3);
                    {838}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_50,associated_data_3,payload_30,jwe_tag_41)));
                    {839}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
                )
                else
                    {840}let nonce_51: bitstring = deriveNonce(par_res_iv_b_6,msg_id_18) in
                    {841}let (payload_31: bitstring,jwe_tag_42: mac) = aeadEncrypt(key_17,nonce_51,conf_22,associated_data_3) in
                    {842}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_31,associated_data_3);
                    {843}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_51,associated_data_3,payload_31,jwe_tag_42)));
                    {844}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
            )
            else
                {845}let nonce_52: bitstring = fail-any in
                {846}let (payload_32: bitstring,jwe_tag_43: mac) = aeadEncrypt(key_17,nonce_52,conf_22,associated_data_3) in
                {847}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_32,associated_data_3);
                {848}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_52,associated_data_3,payload_32,jwe_tag_43)));
                {849}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
    )
    else
        {850}let key_18: key = fail-any in
        {851}let v_23: bool = (msg_type_16 = REQ) in
        (
            {852}if v_23 then
            (
                {853}let nonce_53: bitstring = deriveNonce(par_req_iv_b_6,msg_id_18) in
                {854}let (payload_33: bitstring,jwe_tag_44: mac) = aeadEncrypt(key_18,nonce_53,conf_22,associated_data_3) in
                {855}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_33,associated_data_3);
                {856}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_53,associated_data_3,payload_33,jwe_tag_44)));
                {857}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
            )
            else
                {858}let nonce_54: bitstring = deriveNonce(par_res_iv_b_6,msg_id_18) in
                {859}let (payload_34: bitstring,jwe_tag_45: mac) = aeadEncrypt(key_18,nonce_54,conf_22,associated_data_3) in
                {860}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_34,associated_data_3);
                {861}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_54,associated_data_3,payload_34,jwe_tag_45)));
                {862}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
        )
        else
            {863}let nonce_55: bitstring = fail-any in
            {864}let (payload_35: bitstring,jwe_tag_46: mac) = aeadEncrypt(key_18,nonce_55,conf_22,associated_data_3) in
            {865}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_35,associated_data_3);
            {866}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_55,associated_data_3,payload_35,jwe_tag_46)));
            {867}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
) | (
    {869}sync 4;
    {870}!
    {871}in(n32f_i, (sepp_a_addr_11: bitstring,prins_message_9: modprins));
    {872}let prins''(jwe_headers_11: bitstring,iv_9: bitstring,dataToIntegrityProtect_11: aad,dataToIntegrityProtectAndCipher_11: bitstring,jwe_tag_47: mac,ipx_b_mods_6: ipxmod,=EMPTY) = prins_message_9 in
    {873}let modifications_9: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_47,signPrinsMod(prins_message_9,modp_a,ipx_a_id,jwe_tag_47,ipx_a_privkey)) in
    {874}let combineAAD(source_addr_15: bitstring,destination_addr_15: bitstring,msg_type_17: bitstring,nonconf_15: bitstring,msg_id_19: nat,auth_ipx_id_9: bitstring,n32f_context_19: bitstring) = dataToIntegrityProtect_11 in
    {875}let modified_message_9: modprins = prins''(jwe_headers_11,iv_9,dataToIntegrityProtect_11,dataToIntegrityProtectAndCipher_11,jwe_tag_47,ipx_b_mods_6,modifications_9) in
    {876}event ipxRecvA(n32f_context_19,msg_id_19,jwe_tag_47,modifications_9);
    {877}out(n32f_a, (sepp_a_addr_11,modified_message_9))
) | (
    {878}sync 4;
    {879}!
    {880}in(n32f_a, (sepp_b_addr_10: bitstring,prins_message_10: prins));
    {881}let prins'(jwe_headers_12: bitstring,iv_10: bitstring,dataToIntegrityProtect_12: aad,dataToIntegrityProtectAndCipher_12: bitstring,jwe_tag_48: mac) = prins_message_10 in
    {882}let modifications_10: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_48,signPrins(prins_message_10,modp_a,ipx_a_id,jwe_tag_48,ipx_a_privkey)) in
    {883}let combineAAD(source_addr_16: bitstring,destination_addr_16: bitstring,msg_type_18: bitstring,nonconf_16: bitstring,msg_id_20: nat,=ipx_a_id,n32f_context_20: bitstring) = dataToIntegrityProtect_12 in
    {884}let modified_message_10: modprins = prins''(jwe_headers_12,iv_10,dataToIntegrityProtect_12,dataToIntegrityProtectAndCipher_12,jwe_tag_48,modifications_10,EMPTY) in
    {885}event ipxSendA(n32f_context_20,msg_id_20,jwe_tag_48,modifications_10);
    {886}out(n32f_i, (sepp_b_addr_10,modified_message_10))
) | (
    {887}sync 4;
    {888}!
    {889}in(n32f_i, (sepp_b_addr_11: bitstring,prins_message_11: modprins));
    {890}let prins''(jwe_headers_13: bitstring,iv_11: bitstring,dataToIntegrityProtect_13: aad,dataToIntegrityProtectAndCipher_13: bitstring,jwe_tag_49: mac,ipx_a_mods_4: ipxmod,=EMPTY) = prins_message_11 in
    {891}let modifications_11: ipxmod = jsonPatch(modp_b,ipx_b_id,jwe_tag_49,signPrinsMod(prins_message_11,modp_b,ipx_b_id,jwe_tag_49,ipx_b_privkey)) in
    {892}let combineAAD(source_addr_17: bitstring,destination_addr_17: bitstring,msg_type_19: bitstring,nonconf_17: bitstring,msg_id_21: nat,auth_ipx_id_10: bitstring,n32f_context_21: bitstring) = dataToIntegrityProtect_13 in
    {893}let modified_message_11: modprins = prins''(jwe_headers_13,iv_11,dataToIntegrityProtect_13,dataToIntegrityProtectAndCipher_13,jwe_tag_49,ipx_a_mods_4,modifications_11) in
    {894}event ipxRecvB(n32f_context_21,msg_id_21,jwe_tag_49,modifications_11);
    {895}out(n32f_b, (sepp_b_addr_11,modified_message_11))
) | (
    {896}sync 4;
    {897}!
    {898}in(n32f_b, (sepp_a_addr_12: bitstring,prins_message_12: prins));
    {899}let prins'(jwe_headers_14: bitstring,iv_12: bitstring,dataToIntegrityProtect_14: aad,dataToIntegrityProtectAndCipher_14: bitstring,jwe_tag_50: mac) = prins_message_12 in
    {900}let modifications_12: ipxmod = jsonPatch(modp_b,ipx_b_id,jwe_tag_50,signPrins(prins_message_12,modp_b,ipx_b_id,jwe_tag_50,ipx_b_privkey)) in
    {901}let combineAAD(source_addr_18: bitstring,destination_addr_18: bitstring,msg_type_20: bitstring,nonconf_18: bitstring,msg_id_22: nat,=ipx_b_id,n32f_context_22: bitstring) = dataToIntegrityProtect_14 in
    {902}let modified_message_12: modprins = prins''(jwe_headers_14,iv_12,dataToIntegrityProtect_14,dataToIntegrityProtectAndCipher_14,jwe_tag_50,modifications_12,EMPTY) in
    {903}event ipxSendB(n32f_context_22,msg_id_22,jwe_tag_50,modifications_12);
    {904}out(n32f_i, (sepp_a_addr_12,modified_message_12));
    {905}out(n32f_i, modifications_12)
) | (
    {906}sync 4;
    {907}!
    {908}in(n32f_i, (sepp_a_addr_13: bitstring,prins_message_13: modprins));
    {909}let prins''(jwe_headers_15: bitstring,iv_13: bitstring,dataToIntegrityProtect_15: aad,dataToIntegrityProtectAndCipher_15: bitstring,jwe_tag_51: mac,ipx_b_mods_7: ipxmod,=EMPTY) = prins_message_13 in
    {910}let modifications_13: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_51,signPrinsMod(prins_message_13,modp_a,ipx_a_id,jwe_tag_51,ipx_a_privkey)) in
    {911}let combineAAD(source_addr_19: bitstring,destination_addr_19: bitstring,msg_type_21: bitstring,nonconf_19: bitstring,msg_id_23: nat,auth_ipx_id_11: bitstring,n32f_context_23: bitstring) = dataToIntegrityProtect_15 in
    {912}let modified_message_13: modprins = prins''(jwe_headers_15,iv_13,dataToIntegrityProtect_15,dataToIntegrityProtectAndCipher_15,jwe_tag_51,EMPTY,modifications_13) in
    {913}event ipxRecvR1(n32f_context_23,msg_id_23,jwe_tag_51,modifications_13);
    {914}out(n32f_a, (sepp_a_addr_13,modified_message_13))
) | (
    {915}sync 4;
    {916}!
    {917}in(n32f_a, (sepp_b_addr_12: bitstring,prins_message_14: prins));
    {918}let prins'(jwe_headers_16: bitstring,iv_14: bitstring,dataToIntegrityProtect_16: aad,dataToIntegrityProtectAndCipher_16: bitstring,jwe_tag_52: mac) = prins_message_14 in
    {919}let modifications_14: ipxmod = jsonPatch(modp_r1,ipx_a_id,jwe_tag_52,signPrins(prins_message_14,modp_r1,ipx_a_id,jwe_tag_52,ipx_a_privkey)) in
    {920}let combineAAD(source_addr_20: bitstring,destination_addr_20: bitstring,msg_type_22: bitstring,nonconf_20: bitstring,msg_id_24: nat,auth_ipx_id_12: bitstring,n32f_context_24: bitstring) = dataToIntegrityProtect_16 in
    {921}let modified_message_14: modprins = prins''(jwe_headers_16,iv_14,dataToIntegrityProtect_16,dataToIntegrityProtectAndCipher_16,jwe_tag_52,modifications_14,EMPTY) in
    {922}event ipxSendR1(n32f_context_24,msg_id_24,jwe_tag_52,modifications_14);
    {923}out(n32f_i, (sepp_b_addr_12,modified_message_14))
) | (
    {924}sync 4;
    {925}!
    {926}in(n32f_i, (sepp_a_addr_14: bitstring,prins_message_15: modprins));
    {927}let prins''(jwe_headers_17: bitstring,iv_15: bitstring,dataToIntegrityProtect_17: aad,dataToIntegrityProtectAndCipher_17: bitstring,jwe_tag_53: mac,ipx_b_mods_8: ipxmod,=EMPTY) = prins_message_15 in
    {928}let modifications_15: ipxmod = jsonPatch(modp_a,ipx_r2_id,jwe_tag_53,signPrinsMod(prins_message_15,modp_a,ipx_r2_id,jwe_tag_53,ipx_r2_privkey)) in
    {929}let combineAAD(source_addr_21: bitstring,destination_addr_21: bitstring,msg_type_23: bitstring,nonconf_21: bitstring,msg_id_25: nat,auth_ipx_id_13: bitstring,n32f_context_25: bitstring) = dataToIntegrityProtect_17 in
    {930}let modified_message_15: modprins = prins''(jwe_headers_17,iv_15,dataToIntegrityProtect_17,dataToIntegrityProtectAndCipher_17,jwe_tag_53,EMPTY,modifications_15) in
    {931}event ipxRecvR2(n32f_context_25,msg_id_25,jwe_tag_53,modifications_15);
    {932}out(n32f_a, (sepp_a_addr_14,modified_message_15))
) | (
    {933}sync 4;
    {934}!
    {935}in(n32f_a, (sepp_b_addr_13: bitstring,prins_message_16: prins));
    {936}let prins'(jwe_headers_18: bitstring,iv_16: bitstring,dataToIntegrityProtect_18: aad,dataToIntegrityProtectAndCipher_18: bitstring,jwe_tag_54: mac) = prins_message_16 in
    {937}let modifications_16: ipxmod = jsonPatch(modp_a,ipx_r2_id,jwe_tag_54,signPrins(prins_message_16,modp_a,ipx_r2_id,jwe_tag_54,ipx_r2_privkey)) in
    {938}let combineAAD(source_addr_22: bitstring,destination_addr_22: bitstring,msg_type_24: bitstring,nonconf_22: bitstring,msg_id_26: nat,auth_ipx_id_14: bitstring,n32f_context_26: bitstring) = dataToIntegrityProtect_18 in
    {939}let modified_message_16: modprins = prins''(jwe_headers_18,iv_16,dataToIntegrityProtect_18,dataToIntegrityProtectAndCipher_18,jwe_tag_54,modifications_16,EMPTY) in
    {940}event ipxSendR2(n32f_context_26,msg_id_26,jwe_tag_54,modifications_16);
    {941}out(n32f_i, (sepp_b_addr_13,modified_message_16))
) | (
    {942}sync 4;
    {943}!
    {944}in(n32f_i, (sepp_a_addr_15: bitstring,prins_message_17: modprins));
    {945}in(n32f_i, modifications_17: ipxmod);
    {946}let prins''(jwe_headers_19: bitstring,iv_17: bitstring,dataToIntegrityProtect_19: aad,dataToIntegrityProtectAndCipher_19: bitstring,jwe_tag_55: mac,ipx_b_mods_9: ipxmod,ipx_a_mods_5: ipxmod) = prins_message_17 in
    {947}let combineAAD(source_addr_23: bitstring,destination_addr_23: bitstring,msg_type_25: bitstring,nonconf_23: bitstring,msg_id_27: nat,auth_ipx_id_15: bitstring,n32f_context_27: bitstring) = dataToIntegrityProtect_19 in
    {948}let modified_message_17: modprins = prins''(jwe_headers_19,iv_17,dataToIntegrityProtect_19,dataToIntegrityProtectAndCipher_19,jwe_tag_55,ipx_b_mods_9,modifications_17) in
    {949}event ipxRecvR3(n32f_context_27,msg_id_27,jwe_tag_55,modifications_17);
    {950}out(n32f_a, (sepp_a_addr_15,modified_message_17))
) | (
    {951}sync 5;
    {952}!
    {953}in(n32f_a, (=sepp_a_addr,prins_messsage_2: modprins));
    {954}let prins''(jwe_headers_20: bitstring,nonce_56: bitstring,dataToIntegrityProtect_20: aad,dataToIntegrityProtectAndCipher_20: bitstring,jwe_tag_56: mac,ipx_b_mods_10: ipxmod,ipx_a_mods_6: ipxmod) = prins_messsage_2 in
    {955}let combineAAD(source_addr_24: bitstring,destination_addr_24: bitstring,msg_type_26: bitstring,nonconf_24: bitstring,msg_id_28: nat,auth_ipx_id_16: bitstring,n32f_context'_6: bitstring) = dataToIntegrityProtect_20 in
    {956}event recvN32fMsgSeppA(n32f_context'_6,msg_id_28,dataToIntegrityProtectAndCipher_20,dataToIntegrityProtect_20);
    {1121}get storeSeppA(sepp_b_plmn_6: bitstring,sepp_b_addr_14: bitstring,n32f_context_28: bitstring,msg_cnt_a_7: nat,par_req_key_a_8: key,par_res_key_a_8: key,rev_req_key_a_8: key,rev_res_key_a_8: key,par_req_iv_a_7: bitstring,par_res_iv_a_7: bitstring,rev_req_iv_a_7: bitstring,rev_res_iv_a_7: bitstring,ciphers_a_6: bitstring,encp_a_5: bitstring,modp_a_13: bitstring,modp_b_13: bitstring,ipx_a_id_13: bitstring,ipx_a_key_12: pubkey,ipx_b_id_13: bitstring,ipx_b_key_12: pubkey) suchthat (n32f_context'_6 = n32f_context_28) in
    {957}let v_24: bool = (msg_type_26 = REQ) in
    (
        {958}if v_24 then
        (
            {959}let key_19: key = rev_req_key_a_8 in
            {960}let v_25: bool = (msg_type_26 = REQ) in
            (
                {961}if v_25 then
                (
                    {962}let nonce_57: bitstring = deriveNonce(rev_req_iv_a_7,msg_id_28) in
                    {963}let conf_23: bitstring = aeadDecrypt(key_19,nonce_57,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                    {964}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_18: bitstring) = ipx_b_mods_10 in
                    {965}if not(validPrinsSign(ipx_b_jws_18,ipx_b_key_12)) then
                        {966}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {967}out(err_a, (n32f_context_28,msg_id_28))
                    else
                        {968}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {969}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_18: bitstring) = ipx_a_mods_6 in
                        {970}if not(validPrinsModSign(ipx_a_jws_18,ipx_a_key_12)) then
                            {971}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {972}out(err_a, (n32f_context_28,msg_id_28))
                        else
                            {973}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {974}if (validPrinsModSign(ipx_a_jws_18,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_18,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                            {975}let msg_body_26: bitstring = applyPatches((conf_23,nonconf_24),modp_b_13,modp_a_13) in
                            {976}let http_message_24: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_26) in
                            {977}event sendHttpMsgSeppA(msg_type_26,msg_body_26);
                            {978}out(plmn_a, (RECV,http_message_24))
                )
                else
                    {979}let nonce_58: bitstring = deriveNonce(rev_res_iv_a_7,msg_id_28) in
                    {980}let conf_24: bitstring = aeadDecrypt(key_19,nonce_58,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                    {981}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_19: bitstring) = ipx_b_mods_10 in
                    {982}if not(validPrinsSign(ipx_b_jws_19,ipx_b_key_12)) then
                        {983}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {984}out(err_a, (n32f_context_28,msg_id_28))
                    else
                        {985}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {986}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_19: bitstring) = ipx_a_mods_6 in
                        {987}if not(validPrinsModSign(ipx_a_jws_19,ipx_a_key_12)) then
                            {988}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {989}out(err_a, (n32f_context_28,msg_id_28))
                        else
                            {990}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {991}if (validPrinsModSign(ipx_a_jws_19,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_19,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                            {992}let msg_body_27: bitstring = applyPatches((conf_24,nonconf_24),modp_b_13,modp_a_13) in
                            {993}let http_message_25: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_27) in
                            {994}event sendHttpMsgSeppA(msg_type_26,msg_body_27);
                            {995}out(plmn_a, (RECV,http_message_25))
            )
            else
                {996}let nonce_59: bitstring = fail-any in
                {997}let conf_25: bitstring = aeadDecrypt(key_19,nonce_59,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                {998}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_20: bitstring) = ipx_b_mods_10 in
                {999}if not(validPrinsSign(ipx_b_jws_20,ipx_b_key_12)) then
                    {1000}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    {1001}out(err_a, (n32f_context_28,msg_id_28))
                else
                    {1002}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    {1003}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_20: bitstring) = ipx_a_mods_6 in
                    {1004}if not(validPrinsModSign(ipx_a_jws_20,ipx_a_key_12)) then
                        {1005}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        {1006}out(err_a, (n32f_context_28,msg_id_28))
                    else
                        {1007}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        {1008}if (validPrinsModSign(ipx_a_jws_20,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_20,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                        {1009}let msg_body_28: bitstring = applyPatches((conf_25,nonconf_24),modp_b_13,modp_a_13) in
                        {1010}let http_message_26: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_28) in
                        {1011}event sendHttpMsgSeppA(msg_type_26,msg_body_28);
                        {1012}out(plmn_a, (RECV,http_message_26))
        )
        else
            {1013}let key_20: key = rev_res_key_a_8 in
            {1014}let v_26: bool = (msg_type_26 = REQ) in
            (
                {1015}if v_26 then
                (
                    {1016}let nonce_60: bitstring = deriveNonce(rev_req_iv_a_7,msg_id_28) in
                    {1017}let conf_26: bitstring = aeadDecrypt(key_20,nonce_60,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                    {1018}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_21: bitstring) = ipx_b_mods_10 in
                    {1019}if not(validPrinsSign(ipx_b_jws_21,ipx_b_key_12)) then
                        {1020}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {1021}out(err_a, (n32f_context_28,msg_id_28))
                    else
                        {1022}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {1023}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_21: bitstring) = ipx_a_mods_6 in
                        {1024}if not(validPrinsModSign(ipx_a_jws_21,ipx_a_key_12)) then
                            {1025}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {1026}out(err_a, (n32f_context_28,msg_id_28))
                        else
                            {1027}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {1028}if (validPrinsModSign(ipx_a_jws_21,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_21,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                            {1029}let msg_body_29: bitstring = applyPatches((conf_26,nonconf_24),modp_b_13,modp_a_13) in
                            {1030}let http_message_27: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_29) in
                            {1031}event sendHttpMsgSeppA(msg_type_26,msg_body_29);
                            {1032}out(plmn_a, (RECV,http_message_27))
                )
                else
                    {1033}let nonce_61: bitstring = deriveNonce(rev_res_iv_a_7,msg_id_28) in
                    {1034}let conf_27: bitstring = aeadDecrypt(key_20,nonce_61,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                    {1035}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_22: bitstring) = ipx_b_mods_10 in
                    {1036}if not(validPrinsSign(ipx_b_jws_22,ipx_b_key_12)) then
                        {1037}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {1038}out(err_a, (n32f_context_28,msg_id_28))
                    else
                        {1039}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {1040}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_22: bitstring) = ipx_a_mods_6 in
                        {1041}if not(validPrinsModSign(ipx_a_jws_22,ipx_a_key_12)) then
                            {1042}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {1043}out(err_a, (n32f_context_28,msg_id_28))
                        else
                            {1044}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {1045}if (validPrinsModSign(ipx_a_jws_22,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_22,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                            {1046}let msg_body_30: bitstring = applyPatches((conf_27,nonconf_24),modp_b_13,modp_a_13) in
                            {1047}let http_message_28: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_30) in
                            {1048}event sendHttpMsgSeppA(msg_type_26,msg_body_30);
                            {1049}out(plmn_a, (RECV,http_message_28))
            )
            else
                {1050}let nonce_62: bitstring = fail-any in
                {1051}let conf_28: bitstring = aeadDecrypt(key_20,nonce_62,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                {1052}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_23: bitstring) = ipx_b_mods_10 in
                {1053}if not(validPrinsSign(ipx_b_jws_23,ipx_b_key_12)) then
                    {1054}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    {1055}out(err_a, (n32f_context_28,msg_id_28))
                else
                    {1056}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    {1057}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_23: bitstring) = ipx_a_mods_6 in
                    {1058}if not(validPrinsModSign(ipx_a_jws_23,ipx_a_key_12)) then
                        {1059}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        {1060}out(err_a, (n32f_context_28,msg_id_28))
                    else
                        {1061}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        {1062}if (validPrinsModSign(ipx_a_jws_23,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_23,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                        {1063}let msg_body_31: bitstring = applyPatches((conf_28,nonconf_24),modp_b_13,modp_a_13) in
                        {1064}let http_message_29: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_31) in
                        {1065}event sendHttpMsgSeppA(msg_type_26,msg_body_31);
                        {1066}out(plmn_a, (RECV,http_message_29))
    )
    else
        {1067}let key_21: key = fail-any in
        {1068}let v_27: bool = (msg_type_26 = REQ) in
        (
            {1069}if v_27 then
            (
                {1070}let nonce_63: bitstring = deriveNonce(rev_req_iv_a_7,msg_id_28) in
                {1071}let conf_29: bitstring = aeadDecrypt(key_21,nonce_63,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                {1072}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_24: bitstring) = ipx_b_mods_10 in
                {1073}if not(validPrinsSign(ipx_b_jws_24,ipx_b_key_12)) then
                    {1074}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    {1075}out(err_a, (n32f_context_28,msg_id_28))
                else
                    {1076}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    {1077}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_24: bitstring) = ipx_a_mods_6 in
                    {1078}if not(validPrinsModSign(ipx_a_jws_24,ipx_a_key_12)) then
                        {1079}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        {1080}out(err_a, (n32f_context_28,msg_id_28))
                    else
                        {1081}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        {1082}if (validPrinsModSign(ipx_a_jws_24,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_24,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                        {1083}let msg_body_32: bitstring = applyPatches((conf_29,nonconf_24),modp_b_13,modp_a_13) in
                        {1084}let http_message_30: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_32) in
                        {1085}event sendHttpMsgSeppA(msg_type_26,msg_body_32);
                        {1086}out(plmn_a, (RECV,http_message_30))
            )
            else
                {1087}let nonce_64: bitstring = deriveNonce(rev_res_iv_a_7,msg_id_28) in
                {1088}let conf_30: bitstring = aeadDecrypt(key_21,nonce_64,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                {1089}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_25: bitstring) = ipx_b_mods_10 in
                {1090}if not(validPrinsSign(ipx_b_jws_25,ipx_b_key_12)) then
                    {1091}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    {1092}out(err_a, (n32f_context_28,msg_id_28))
                else
                    {1093}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    {1094}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_25: bitstring) = ipx_a_mods_6 in
                    {1095}if not(validPrinsModSign(ipx_a_jws_25,ipx_a_key_12)) then
                        {1096}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        {1097}out(err_a, (n32f_context_28,msg_id_28))
                    else
                        {1098}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        {1099}if (validPrinsModSign(ipx_a_jws_25,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_25,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                        {1100}let msg_body_33: bitstring = applyPatches((conf_30,nonconf_24),modp_b_13,modp_a_13) in
                        {1101}let http_message_31: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_33) in
                        {1102}event sendHttpMsgSeppA(msg_type_26,msg_body_33);
                        {1103}out(plmn_a, (RECV,http_message_31))
        )
        else
            {1104}let nonce_65: bitstring = fail-any in
            {1105}let conf_31: bitstring = aeadDecrypt(key_21,nonce_65,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
            {1106}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_26: bitstring) = ipx_b_mods_10 in
            {1107}if not(validPrinsSign(ipx_b_jws_26,ipx_b_key_12)) then
                {1108}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                {1109}out(err_a, (n32f_context_28,msg_id_28))
            else
                {1110}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                {1111}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_26: bitstring) = ipx_a_mods_6 in
                {1112}if not(validPrinsModSign(ipx_a_jws_26,ipx_a_key_12)) then
                    {1113}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                    {1114}out(err_a, (n32f_context_28,msg_id_28))
                else
                    {1115}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                    {1116}if (validPrinsModSign(ipx_a_jws_26,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_26,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                    {1117}let msg_body_34: bitstring = applyPatches((conf_31,nonconf_24),modp_b_13,modp_a_13) in
                    {1118}let http_message_32: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_34) in
                    {1119}event sendHttpMsgSeppA(msg_type_26,msg_body_34);
                    {1120}out(plmn_a, (RECV,http_message_32))
) | (
    {1122}sync 5;
    {1123}!
    {1124}in(n32f_b, (=sepp_b_addr,prins_messsage_3: modprins));
    {1125}let prins''(jwe_headers_21: bitstring,nonce_66: bitstring,dataToIntegrityProtect_21: aad,dataToIntegrityProtectAndCipher_21: bitstring,jwe_tag_57: mac,ipx_a_mods_7: ipxmod,ipx_b_mods_11: ipxmod) = prins_messsage_3 in
    {1126}let combineAAD(source_addr_25: bitstring,destination_addr_25: bitstring,msg_type_27: bitstring,nonconf_25: bitstring,msg_id_29: nat,auth_ipx_id_17: bitstring,n32f_context'_7: bitstring) = dataToIntegrityProtect_21 in
    {1127}event recvN32fMsgSeppB(n32f_context'_7,msg_id_29,dataToIntegrityProtectAndCipher_21,dataToIntegrityProtect_21);
    {1292}get storeSeppB(sepp_a_plmn_6: bitstring,sepp_a_addr_16: bitstring,n32f_context_29: bitstring,msg_cnt_b_7: nat,par_req_key_b_8: key,par_res_key_b_8: key,rev_req_key_b_8: key,rev_res_key_b_8: key,par_req_iv_b_7: bitstring,par_res_iv_b_7: bitstring,rev_req_iv_b_7: bitstring,rev_res_iv_b_7: bitstring,ciphers_b_6: bitstring,encp_b_5: bitstring,modp_b_14: bitstring,modp_a_14: bitstring,ipx_b_id_14: bitstring,ipx_b_key_13: pubkey,ipx_a_id_14: bitstring,ipx_a_key_13: pubkey) suchthat (n32f_context'_7 = n32f_context_29) in
    {1128}let v_28: bool = (msg_type_27 = REQ) in
    (
        {1129}if v_28 then
        (
            {1130}let key_22: key = rev_req_key_b_8 in
            {1131}let v_29: bool = (msg_type_27 = REQ) in
            (
                {1132}if v_29 then
                (
                    {1133}let nonce_67: bitstring = deriveNonce(rev_req_iv_b_7,msg_id_29) in
                    {1134}let conf_32: bitstring = aeadDecrypt(key_22,nonce_67,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                    {1135}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_27: bitstring) = ipx_a_mods_7 in
                    {1136}if not(validPrinsSign(ipx_a_jws_27,ipx_a_key_13)) then
                        {1137}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1138}out(err_b, (n32f_context_29,msg_id_29))
                    else
                        {1139}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1140}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_27: bitstring) = ipx_b_mods_11 in
                        {1141}if not(validPrinsModSign(ipx_b_jws_27,ipx_b_key_13)) then
                            {1142}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1143}out(err_b, (n32f_context_29,msg_id_29))
                        else
                            {1144}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1145}if (validPrinsSign(ipx_a_jws_27,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_27,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                            {1146}let msg_body_35: bitstring = applyPatches((conf_32,nonconf_25),modp_a_14,modp_b_14) in
                            {1147}let http_message_33: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_35) in
                            {1148}event sendHttpMsgSeppB(msg_type_27,msg_body_35);
                            {1149}out(plmn_b, (RECV,http_message_33))
                )
                else
                    {1150}let nonce_68: bitstring = deriveNonce(rev_res_iv_b_7,msg_id_29) in
                    {1151}let conf_33: bitstring = aeadDecrypt(key_22,nonce_68,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                    {1152}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_28: bitstring) = ipx_a_mods_7 in
                    {1153}if not(validPrinsSign(ipx_a_jws_28,ipx_a_key_13)) then
                        {1154}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1155}out(err_b, (n32f_context_29,msg_id_29))
                    else
                        {1156}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1157}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_28: bitstring) = ipx_b_mods_11 in
                        {1158}if not(validPrinsModSign(ipx_b_jws_28,ipx_b_key_13)) then
                            {1159}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1160}out(err_b, (n32f_context_29,msg_id_29))
                        else
                            {1161}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1162}if (validPrinsSign(ipx_a_jws_28,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_28,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                            {1163}let msg_body_36: bitstring = applyPatches((conf_33,nonconf_25),modp_a_14,modp_b_14) in
                            {1164}let http_message_34: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_36) in
                            {1165}event sendHttpMsgSeppB(msg_type_27,msg_body_36);
                            {1166}out(plmn_b, (RECV,http_message_34))
            )
            else
                {1167}let nonce_69: bitstring = fail-any in
                {1168}let conf_34: bitstring = aeadDecrypt(key_22,nonce_69,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                {1169}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_29: bitstring) = ipx_a_mods_7 in
                {1170}if not(validPrinsSign(ipx_a_jws_29,ipx_a_key_13)) then
                    {1171}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    {1172}out(err_b, (n32f_context_29,msg_id_29))
                else
                    {1173}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    {1174}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_29: bitstring) = ipx_b_mods_11 in
                    {1175}if not(validPrinsModSign(ipx_b_jws_29,ipx_b_key_13)) then
                        {1176}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        {1177}out(err_b, (n32f_context_29,msg_id_29))
                    else
                        {1178}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        {1179}if (validPrinsSign(ipx_a_jws_29,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_29,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                        {1180}let msg_body_37: bitstring = applyPatches((conf_34,nonconf_25),modp_a_14,modp_b_14) in
                        {1181}let http_message_35: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_37) in
                        {1182}event sendHttpMsgSeppB(msg_type_27,msg_body_37);
                        {1183}out(plmn_b, (RECV,http_message_35))
        )
        else
            {1184}let key_23: key = rev_res_key_b_8 in
            {1185}let v_30: bool = (msg_type_27 = REQ) in
            (
                {1186}if v_30 then
                (
                    {1187}let nonce_70: bitstring = deriveNonce(rev_req_iv_b_7,msg_id_29) in
                    {1188}let conf_35: bitstring = aeadDecrypt(key_23,nonce_70,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                    {1189}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_30: bitstring) = ipx_a_mods_7 in
                    {1190}if not(validPrinsSign(ipx_a_jws_30,ipx_a_key_13)) then
                        {1191}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1192}out(err_b, (n32f_context_29,msg_id_29))
                    else
                        {1193}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1194}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_30: bitstring) = ipx_b_mods_11 in
                        {1195}if not(validPrinsModSign(ipx_b_jws_30,ipx_b_key_13)) then
                            {1196}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1197}out(err_b, (n32f_context_29,msg_id_29))
                        else
                            {1198}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1199}if (validPrinsSign(ipx_a_jws_30,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_30,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                            {1200}let msg_body_38: bitstring = applyPatches((conf_35,nonconf_25),modp_a_14,modp_b_14) in
                            {1201}let http_message_36: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_38) in
                            {1202}event sendHttpMsgSeppB(msg_type_27,msg_body_38);
                            {1203}out(plmn_b, (RECV,http_message_36))
                )
                else
                    {1204}let nonce_71: bitstring = deriveNonce(rev_res_iv_b_7,msg_id_29) in
                    {1205}let conf_36: bitstring = aeadDecrypt(key_23,nonce_71,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                    {1206}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_31: bitstring) = ipx_a_mods_7 in
                    {1207}if not(validPrinsSign(ipx_a_jws_31,ipx_a_key_13)) then
                        {1208}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1209}out(err_b, (n32f_context_29,msg_id_29))
                    else
                        {1210}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1211}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_31: bitstring) = ipx_b_mods_11 in
                        {1212}if not(validPrinsModSign(ipx_b_jws_31,ipx_b_key_13)) then
                            {1213}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1214}out(err_b, (n32f_context_29,msg_id_29))
                        else
                            {1215}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1216}if (validPrinsSign(ipx_a_jws_31,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_31,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                            {1217}let msg_body_39: bitstring = applyPatches((conf_36,nonconf_25),modp_a_14,modp_b_14) in
                            {1218}let http_message_37: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_39) in
                            {1219}event sendHttpMsgSeppB(msg_type_27,msg_body_39);
                            {1220}out(plmn_b, (RECV,http_message_37))
            )
            else
                {1221}let nonce_72: bitstring = fail-any in
                {1222}let conf_37: bitstring = aeadDecrypt(key_23,nonce_72,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                {1223}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_32: bitstring) = ipx_a_mods_7 in
                {1224}if not(validPrinsSign(ipx_a_jws_32,ipx_a_key_13)) then
                    {1225}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    {1226}out(err_b, (n32f_context_29,msg_id_29))
                else
                    {1227}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    {1228}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_32: bitstring) = ipx_b_mods_11 in
                    {1229}if not(validPrinsModSign(ipx_b_jws_32,ipx_b_key_13)) then
                        {1230}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        {1231}out(err_b, (n32f_context_29,msg_id_29))
                    else
                        {1232}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        {1233}if (validPrinsSign(ipx_a_jws_32,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_32,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                        {1234}let msg_body_40: bitstring = applyPatches((conf_37,nonconf_25),modp_a_14,modp_b_14) in
                        {1235}let http_message_38: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_40) in
                        {1236}event sendHttpMsgSeppB(msg_type_27,msg_body_40);
                        {1237}out(plmn_b, (RECV,http_message_38))
    )
    else
        {1238}let key_24: key = fail-any in
        {1239}let v_31: bool = (msg_type_27 = REQ) in
        (
            {1240}if v_31 then
            (
                {1241}let nonce_73: bitstring = deriveNonce(rev_req_iv_b_7,msg_id_29) in
                {1242}let conf_38: bitstring = aeadDecrypt(key_24,nonce_73,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                {1243}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_33: bitstring) = ipx_a_mods_7 in
                {1244}if not(validPrinsSign(ipx_a_jws_33,ipx_a_key_13)) then
                    {1245}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    {1246}out(err_b, (n32f_context_29,msg_id_29))
                else
                    {1247}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    {1248}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_33: bitstring) = ipx_b_mods_11 in
                    {1249}if not(validPrinsModSign(ipx_b_jws_33,ipx_b_key_13)) then
                        {1250}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        {1251}out(err_b, (n32f_context_29,msg_id_29))
                    else
                        {1252}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        {1253}if (validPrinsSign(ipx_a_jws_33,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_33,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                        {1254}let msg_body_41: bitstring = applyPatches((conf_38,nonconf_25),modp_a_14,modp_b_14) in
                        {1255}let http_message_39: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_41) in
                        {1256}event sendHttpMsgSeppB(msg_type_27,msg_body_41);
                        {1257}out(plmn_b, (RECV,http_message_39))
            )
            else
                {1258}let nonce_74: bitstring = deriveNonce(rev_res_iv_b_7,msg_id_29) in
                {1259}let conf_39: bitstring = aeadDecrypt(key_24,nonce_74,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                {1260}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_34: bitstring) = ipx_a_mods_7 in
                {1261}if not(validPrinsSign(ipx_a_jws_34,ipx_a_key_13)) then
                    {1262}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    {1263}out(err_b, (n32f_context_29,msg_id_29))
                else
                    {1264}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    {1265}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_34: bitstring) = ipx_b_mods_11 in
                    {1266}if not(validPrinsModSign(ipx_b_jws_34,ipx_b_key_13)) then
                        {1267}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        {1268}out(err_b, (n32f_context_29,msg_id_29))
                    else
                        {1269}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        {1270}if (validPrinsSign(ipx_a_jws_34,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_34,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                        {1271}let msg_body_42: bitstring = applyPatches((conf_39,nonconf_25),modp_a_14,modp_b_14) in
                        {1272}let http_message_40: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_42) in
                        {1273}event sendHttpMsgSeppB(msg_type_27,msg_body_42);
                        {1274}out(plmn_b, (RECV,http_message_40))
        )
        else
            {1275}let nonce_75: bitstring = fail-any in
            {1276}let conf_40: bitstring = aeadDecrypt(key_24,nonce_75,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
            {1277}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_35: bitstring) = ipx_a_mods_7 in
            {1278}if not(validPrinsSign(ipx_a_jws_35,ipx_a_key_13)) then
                {1279}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                {1280}out(err_b, (n32f_context_29,msg_id_29))
            else
                {1281}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                {1282}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_35: bitstring) = ipx_b_mods_11 in
                {1283}if not(validPrinsModSign(ipx_b_jws_35,ipx_b_key_13)) then
                    {1284}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                    {1285}out(err_b, (n32f_context_29,msg_id_29))
                else
                    {1286}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                    {1287}if (validPrinsSign(ipx_a_jws_35,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_35,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                    {1288}let msg_body_43: bitstring = applyPatches((conf_40,nonconf_25),modp_a_14,modp_b_14) in
                    {1289}let http_message_41: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_43) in
                    {1290}event sendHttpMsgSeppB(msg_type_27,msg_body_43);
                    {1291}out(plmn_b, (RECV,http_message_41))
) | (
    {1293}sync 5;
    {1294}!
    {1295}in(plmn_a, (=RECV,msg_2: http));
    {1296}let createHttp(nf_b_addr_2: bitstring,=nf_a_addr,msg_type_28: bitstring,msg_body_44: bitstring) = msg_2 in
    {1297}if (msg_type_28 = REQ) then
        {1298}event sendHttpMsgNfA(RES,msg_body_44);
        {1299}out(plmn_a, (SEND,createHttp(nf_a_addr,nf_b_addr_2,RES,msg_body_44)))
    else
        {1300}event recvHttpMsgNfA(RES,msg_body_44)
) | (
    {1301}sync 5;
    {1302}!
    {1303}in(plmn_b, (=RECV,msg_3: http));
    {1304}let createHttp(nf_a_addr_2: bitstring,=nf_b_addr,msg_type_29: bitstring,msg_body_45: bitstring) = msg_3 in
    {1305}if (msg_type_29 = REQ) then
        {1306}event sendHttpMsgNfB(RES,msg_body_45);
        {1307}out(plmn_b, (SEND,createHttp(nf_b_addr,nf_a_addr_2,RES,msg_body_45)))
    else
        {1308}event recvHttpMsgNfB(RES,msg_body_45)
) | (
    {1309}sync 5;
    {1310}!
    {1311}in(err_a, (n32f_context'_8: bitstring,msg_id_30: nat));
    {1315}get storeSeppA(sepp_b_plmn_7: bitstring,sepp_b_addr_15: bitstring,n32f_context_30: bitstring,msg_cnt_a_8: nat,par_req_key_a_9: key,par_res_key_a_9: key,rev_req_key_a_9: key,rev_res_key_a_9: key,par_req_iv_a_8: bitstring,par_res_iv_a_8: bitstring,rev_req_iv_a_8: bitstring,rev_res_iv_a_8: bitstring,ciphers_a_7: bitstring,encp_a_6: bitstring,modp_a_15: bitstring,modp_b_15: bitstring,ipx_a_id_15: bitstring,ipx_a_key_14: pubkey,ipx_b_id_15: bitstring,ipx_b_key_14: pubkey) suchthat (n32f_context'_8 = n32f_context_30) in
    {1312}out(n32c_a, (sepp_b_addr_15,n32f_context_30,msg_id_30));
    {1313}in(n32c_a, (=sepp_a_addr,=n32f_context_30,=msg_id_30,status_code_2: bitstring));
    {1314}event sendErrorSeppA(n32f_context_30,msg_id_30,status_code_2)
) | (
    {1316}sync 5;
    {1317}!
    {1318}in(n32c_b, (=sepp_a_addr,n32f_context'_9: bitstring,msg_id_31: nat));
    {1324}get storeSeppA(sepp_b_plmn_8: bitstring,sepp_b_addr_16: bitstring,n32f_context_31: bitstring,msg_cnt_a_9: nat,par_req_key_a_10: key,par_res_key_a_10: key,rev_req_key_a_10: key,rev_res_key_a_10: key,par_req_iv_a_9: bitstring,par_res_iv_a_9: bitstring,rev_req_iv_a_9: bitstring,rev_res_iv_a_9: bitstring,ciphers_a_8: bitstring,encp_a_7: bitstring,modp_a_16: bitstring,modp_b_16: bitstring,ipx_a_id_16: bitstring,ipx_a_key_15: pubkey,ipx_b_id_16: bitstring,ipx_b_key_15: pubkey) suchthat (n32f_context'_9 = n32f_context_31) in
    {1319}if (msg_id_31 ≤ msg_cnt_a_9) then
        {1320}out(n32c_b, (sepp_b_addr_16,n32f_context_31,msg_id_31,SUCC));
        {1321}event recvErrorSeppA(n32f_context_31,msg_id_31,SUCC)
    else
        {1322}out(n32c_b, (sepp_b_addr_16,n32f_context_31,msg_id_31,FAIL));
        {1323}event recvErrorSeppA(n32f_context_31,msg_id_31,FAIL)
) | (
    {1325}sync 5;
    {1326}!
    {1327}in(err_b, (n32f_context'_10: bitstring,msg_id_32: nat));
    {1331}get storeSeppB(sepp_a_plmn_7: bitstring,sepp_a_addr_17: bitstring,n32f_context_32: bitstring,msg_cnt_b_8: nat,par_req_key_b_9: key,par_res_key_b_9: key,rev_req_key_b_9: key,rev_res_key_b_9: key,par_req_iv_b_8: bitstring,par_res_iv_b_8: bitstring,rev_req_iv_b_8: bitstring,rev_res_iv_b_8: bitstring,ciphers_b_7: bitstring,encp_b_6: bitstring,modp_b_17: bitstring,modp_a_17: bitstring,ipx_b_id_17: bitstring,ipx_b_key_16: pubkey,ipx_a_id_17: bitstring,ipx_a_key_16: pubkey) suchthat (n32f_context'_10 = n32f_context_32) in
    {1328}out(n32c_b, (sepp_a_addr_17,n32f_context_32,msg_id_32));
    {1329}in(n32c_b, (=sepp_b_addr,=n32f_context_32,=msg_id_32,status_code_3: bitstring));
    {1330}event sendErrorSeppB(n32f_context_32,msg_id_32,status_code_3)
) | (
    {1332}sync 5;
    {1333}!
    {1334}in(n32c_a, (=sepp_b_addr,n32f_context'_11: bitstring,msg_id_33: nat));
    {1340}get storeSeppB(sepp_a_plmn_8: bitstring,sepp_a_addr_18: bitstring,n32f_context_33: bitstring,msg_cnt_b_9: nat,par_req_key_b_10: key,par_res_key_b_10: key,rev_req_key_b_10: key,rev_res_key_b_10: key,par_req_iv_b_9: bitstring,par_res_iv_b_9: bitstring,rev_req_iv_b_9: bitstring,rev_res_iv_b_9: bitstring,ciphers_b_8: bitstring,encp_b_7: bitstring,modp_b_18: bitstring,modp_a_18: bitstring,ipx_b_id_18: bitstring,ipx_b_key_17: pubkey,ipx_a_id_18: bitstring,ipx_a_key_17: pubkey) suchthat (n32f_context'_11 = n32f_context_33) in
    {1335}if (msg_id_33 ≤ msg_cnt_b_9) then
        {1336}out(n32c_a, (sepp_a_addr_18,n32f_context_33,msg_id_33,SUCC));
        {1337}event recvErrorSeppB(n32f_context_33,msg_id_33,SUCC)
    else
        {1338}out(n32c_a, (sepp_a_addr_18,n32f_context_33,msg_id_33,FAIL));
        {1339}event recvErrorSeppB(n32f_context_33,msg_id_33,FAIL)
)

Annotated process:
new ciphersuites: bitstring;
new encp: bitstring;
out(n32f_i, encp);
new modp_a: bitstring;
out(n32f_i, modp_a);
new modp_b: bitstring;
out(n32f_i, modp_b);
new modp_r1: bitstring;
out(n32f_i, modp_r1);
new nf_a_addr: bitstring;
out(n32f_i, nf_a_addr);
new nf_b_addr: bitstring;
out(n32f_i, nf_b_addr);
new sepp_a_plmn: bitstring;
out(n32f_i, sepp_a_plmn);
new sepp_b_plmn: bitstring;
out(n32f_i, sepp_b_plmn);
new sepp_a_addr: bitstring;
out(n32f_i, sepp_a_addr);
new sepp_b_addr: bitstring;
out(n32f_i, sepp_b_addr);
new ipx_a_id: bitstring;
out(n32f_i, ipx_a_id);
new ipx_b_id: bitstring;
out(n32f_i, ipx_b_id);
new ipx_r2_id: bitstring;
out(n32f_i, ipx_r2_id);
new ipx_a_privkey: privkey;
new ipx_b_privkey: privkey;
new ipx_r2_privkey: privkey;
let ipx_a_pubkey: pubkey = pk(ipx_a_privkey) in
out(n32f_a, ipx_a_pubkey);
let ipx_b_pubkey: pubkey = pk(ipx_b_privkey) in
out(n32f_b, ipx_b_pubkey);
let ipx_r2_pubkey: pubkey = pk(ipx_r2_privkey) in
out(n32f_a, ipx_r2_pubkey);
(
    new n32f_pid: bitstring;
    out(n32c_a, (sepp_b_addr,ciphersuites,n32f_pid));
    in(n32c_a, (=sepp_a_addr,ciphers_b: bitstring,n32f_pid_b: bitstring));
    let n32f_cid: bitstring = deriveContextId(n32f_pid,n32f_pid_b) in
    event sendN32fContext(sepp_a_addr,n32f_pid,n32f_pid_b,n32f_cid);
    out(n32c_a, (sepp_b_addr,n32f_cid,encp,modp_a));
    in(n32c_a, (=sepp_a_addr,=n32f_cid,=encp,modp_b_1: bitstring));
    out(n32c_a, (sepp_b_addr,n32f_cid,ipx_a_id,ipx_a_pubkey));
    in(n32c_a, (=sepp_a_addr,=n32f_cid,ipx_b_id_1: bitstring,ipx_b_key: pubkey));
    let msg_cnt_a: nat = 0 in
    let master_key_a_1: key = deriveMasterKey(n32f_cid) in
    event sendMasterKey(sepp_a_addr,n32f_cid,master_key_a_1);
    let par_req_key_a_1: key = deriveSessionKey(SEND,REQ,master_key_a_1) in
    let rev_req_key_a_1: key = deriveSessionKey(RECV,REQ,master_key_a_1) in
    let par_res_key_a_1: key = deriveSessionKey(SEND,RES,master_key_a_1) in
    let rev_res_key_a_1: key = deriveSessionKey(RECV,RES,master_key_a_1) in
    let par_req_iv_a: bitstring = deriveIV(SEND,REQ,master_key_a_1) in
    let rev_req_iv_a: bitstring = deriveIV(RECV,REQ,master_key_a_1) in
    let par_res_iv_a: bitstring = deriveIV(SEND,RES,master_key_a_1) in
    let rev_res_iv_a: bitstring = deriveIV(RECV,RES,master_key_a_1) in
    insert storeSeppA(sepp_b_plmn,sepp_b_addr,n32f_cid,msg_cnt_a,par_req_key_a_1,par_res_key_a_1,rev_req_key_a_1,rev_res_key_a_1,par_req_iv_a,par_res_iv_a,rev_req_iv_a,rev_res_iv_a,ciphersuites,encp,modp_a,modp_b_1,ipx_a_id,ipx_a_pubkey,ipx_b_id_1,ipx_b_key)
) | (
    new n32f_pid_1: bitstring;
    in(n32c_a, (=sepp_b_addr,=ciphersuites,n32f_pid_a: bitstring));
    out(n32c_a, (sepp_a_addr,ciphersuites,n32f_pid_1));
    let n32f_cid_1: bitstring = deriveContextId(n32f_pid_a,n32f_pid_1) in
    event recvN32fContext(sepp_b_addr,n32f_pid_a,n32f_pid_1,n32f_cid_1);
    in(n32c_a, (=sepp_b_addr,=n32f_cid_1,=encp,modp_a_1: bitstring));
    out(n32c_a, (sepp_a_addr,n32f_cid_1,encp,modp_b));
    in(n32c_a, (=sepp_b_addr,=n32f_cid_1,ipx_a_id_1: bitstring,ipx_a_key: pubkey));
    out(n32c_a, (sepp_a_addr,n32f_cid_1,ipx_b_id,ipx_b_pubkey));
    let msg_cnt_b: nat = 0 in
    let master_key_b_1: key = deriveMasterKey(n32f_cid_1) in
    event recvMasterKey(sepp_b_addr,n32f_cid_1,master_key_b_1);
    let par_req_key_b_1: key = deriveSessionKey(RECV,REQ,master_key_b_1) in
    let rev_req_key_b_1: key = deriveSessionKey(SEND,REQ,master_key_b_1) in
    let par_res_key_b_1: key = deriveSessionKey(RECV,RES,master_key_b_1) in
    let rev_res_key_b_1: key = deriveSessionKey(SEND,RES,master_key_b_1) in
    let par_req_iv_b: bitstring = deriveIV(RECV,REQ,master_key_b_1) in
    let rev_req_iv_b: bitstring = deriveIV(SEND,REQ,master_key_b_1) in
    let par_res_iv_b: bitstring = deriveIV(RECV,RES,master_key_b_1) in
    let rev_res_iv_b: bitstring = deriveIV(SEND,RES,master_key_b_1) in
    insert storeSeppB(sepp_a_plmn,sepp_a_addr,n32f_cid_1,msg_cnt_b,par_req_key_b_1,par_res_key_b_1,rev_req_key_b_1,rev_res_key_b_1,par_req_iv_b,par_res_iv_b,rev_req_iv_b,rev_res_iv_b,ciphersuites,encp,modp_b,modp_a_1,ipx_b_id,ipx_b_pubkey,ipx_a_id_1,ipx_a_key)
) | (
    new n32f_pid_2: bitstring;
    out(n32c_b, (sepp_a_addr,ciphersuites,n32f_pid_2));
    in(n32c_b, (=sepp_b_addr,ciphers_a: bitstring,n32f_pid_a_1: bitstring));
    let n32f_cid_2: bitstring = deriveContextId(n32f_pid_2,n32f_pid_a_1) in
    event sendN32fContext(sepp_b_addr,n32f_pid_2,n32f_pid_a_1,n32f_cid_2);
    out(n32c_b, (sepp_a_addr,n32f_cid_2,encp,modp_b));
    in(n32c_b, (=sepp_b_addr,=n32f_cid_2,=encp,modp_a_2: bitstring));
    out(n32c_b, (sepp_a_addr,n32f_cid_2,ipx_b_id,ipx_b_pubkey));
    in(n32c_b, (=sepp_b_addr,=n32f_cid_2,ipx_a_id_2: bitstring,ipx_a_key_1: pubkey));
    let msg_cnt_b_1: nat = 0 in
    let master_key_b_2: key = deriveMasterKey(n32f_cid_2) in
    event sendMasterKey(sepp_b_addr,n32f_cid_2,master_key_b_2);
    let par_req_key_b_2: key = deriveSessionKey(SEND,REQ,master_key_b_2) in
    let rev_req_key_b_2: key = deriveSessionKey(RECV,REQ,master_key_b_2) in
    let par_res_key_b_2: key = deriveSessionKey(SEND,RES,master_key_b_2) in
    let rev_res_key_b_2: key = deriveSessionKey(RECV,RES,master_key_b_2) in
    let par_req_iv_b_1: bitstring = deriveIV(SEND,REQ,master_key_b_2) in
    let rev_req_iv_b_1: bitstring = deriveIV(RECV,REQ,master_key_b_2) in
    let par_res_iv_b_1: bitstring = deriveIV(SEND,RES,master_key_b_2) in
    let rev_res_iv_b_1: bitstring = deriveIV(RECV,RES,master_key_b_2) in
    insert storeSeppB(sepp_a_plmn,sepp_a_addr,n32f_cid_2,msg_cnt_b_1,par_req_key_b_2,par_res_key_b_2,rev_req_key_b_2,rev_res_key_b_2,par_req_iv_b_1,par_res_iv_b_1,rev_req_iv_b_1,rev_res_iv_b_1,ciphersuites,encp,modp_b,modp_a_2,ipx_b_id,ipx_b_pubkey,ipx_a_id_2,ipx_a_key_1)
) | (
    new n32f_pid_3: bitstring;
    in(n32c_b, (=sepp_a_addr,=ciphersuites,n32f_pid_b_1: bitstring));
    out(n32c_b, (sepp_b_addr,ciphersuites,n32f_pid_3));
    let n32f_cid_3: bitstring = deriveContextId(n32f_pid_b_1,n32f_pid_3) in
    event recvN32fContext(sepp_a_addr,n32f_pid_b_1,n32f_pid_3,n32f_cid_3);
    in(n32c_b, (=sepp_a_addr,=n32f_cid_3,=encp,modp_b_2: bitstring));
    out(n32c_b, (sepp_b_addr,n32f_cid_3,encp,modp_a));
    in(n32c_b, (=sepp_a_addr,=n32f_cid_3,ipx_b_id_2: bitstring,ipx_b_key_1: pubkey));
    out(n32c_b, (sepp_b_addr,n32f_cid_3,ipx_a_id,ipx_a_pubkey));
    let msg_cnt_a_1: nat = 0 in
    let master_key_a_2: key = deriveMasterKey(n32f_cid_3) in
    event recvMasterKey(sepp_a_addr,n32f_cid_3,master_key_a_2);
    let par_req_key_a_2: key = deriveSessionKey(RECV,REQ,master_key_a_2) in
    let rev_req_key_a_2: key = deriveSessionKey(SEND,REQ,master_key_a_2) in
    let par_res_key_a_2: key = deriveSessionKey(RECV,RES,master_key_a_2) in
    let rev_res_key_a_2: key = deriveSessionKey(SEND,RES,master_key_a_2) in
    let par_req_iv_a_1: bitstring = deriveIV(RECV,REQ,master_key_a_2) in
    let rev_req_iv_a_1: bitstring = deriveIV(SEND,REQ,master_key_a_2) in
    let par_res_iv_a_1: bitstring = deriveIV(RECV,RES,master_key_a_2) in
    let rev_res_iv_a_1: bitstring = deriveIV(SEND,RES,master_key_a_2) in
    insert storeSeppA(sepp_b_plmn,sepp_b_addr,n32f_cid_3,msg_cnt_a_1,par_req_key_a_2,par_res_key_a_2,rev_req_key_a_2,rev_res_key_a_2,par_req_iv_a_1,par_res_iv_a_1,rev_req_iv_a_1,rev_res_iv_a_1,ciphersuites,encp,modp_a,modp_b_2,ipx_a_id,ipx_a_pubkey,ipx_b_id_2,ipx_b_key_1)
) | (
    sync 1[@_3467, a, c, ()];
    !
    new msg_body: bitstring;
    let http_message: http = createHttp(nf_a_addr,nf_b_addr,REQ,msg_body) in
    event sendHttpMsgNfA(REQ,msg_body);
    out(plmn_a, (SEND,http_message))
) | (
    sync 1[@_3464, a_1, c_1, ()];
    !
    new msg_body_1: bitstring;
    let http_message_1: http = createHttp(nf_b_addr,nf_a_addr,REQ,msg_body_1) in
    event sendHttpMsgNfB(REQ,msg_body_1);
    out(plmn_b, (SEND,http_message_1))
) | (
    sync 1[@_3461, a_2, c_2, ()];
    !
    in(plmn_a, (=SEND,http_message_2: http));
    get storeSeppA(sepp_b_plmn_1: bitstring,sepp_b_addr_1: bitstring,n32f_context: bitstring,msg_cnt_a_2: nat,par_req_key_a_3: key,par_res_key_a_3: key,rev_req_key_a_3: key,rev_res_key_a_3: key,par_req_iv_a_2: bitstring,par_res_iv_a_2: bitstring,rev_req_iv_a_2: bitstring,rev_res_iv_a_2: bitstring,ciphers_a_1: bitstring,encp_a: bitstring,modp_a_3: bitstring,modp_b_3: bitstring,ipx_a_id_3: bitstring,ipx_a_key_2: pubkey,ipx_b_id_3: bitstring,ipx_b_key_2: pubkey) in
    let createHttp(source_addr: bitstring,destination_addr: bitstring,msg_type: bitstring,msg_body_2: bitstring) = http_message_2 in
    event recvHttpMsgSeppA(msg_type,msg_body_2);
    let conf_1: bitstring = getConf(msg_body_2,encp_a) in
    let nonconf: bitstring = getNonconf(msg_body_2,encp_a) in
    let msg_id: nat = msg_cnt_a_2 + 1 in
    let associated_data: aad = combineAAD(source_addr,destination_addr,msg_type,nonconf,msg_id,ipx_a_id_3,n32f_context) in
    let v: bool = (msg_type = REQ) in
    (
        if v then
        (
            let key_1: key = par_req_key_a_3 in
            let v_1: bool = (msg_type = REQ) in
            (
                if v_1 then
                (
                    let nonce: bitstring = deriveNonce(par_req_iv_a_2,msg_id) in
                    let (payload: bitstring,jwe_tag: mac) = aeadEncrypt(key_1,nonce,conf_1,associated_data) in
                    event sendN32fMsgSeppA(n32f_context,msg_id,payload,associated_data);
                    out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce,associated_data,payload,jwe_tag)));
                    insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
                )
                else
                    let nonce_1: bitstring = deriveNonce(par_res_iv_a_2,msg_id) in
                    let (payload_1: bitstring,jwe_tag_1: mac) = aeadEncrypt(key_1,nonce_1,conf_1,associated_data) in
                    event sendN32fMsgSeppA(n32f_context,msg_id,payload_1,associated_data);
                    out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_1,associated_data,payload_1,jwe_tag_1)));
                    insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
            )
            else
                let nonce_2: bitstring = fail-any in
                let (payload_2: bitstring,jwe_tag_2: mac) = aeadEncrypt(key_1,nonce_2,conf_1,associated_data) in
                event sendN32fMsgSeppA(n32f_context,msg_id,payload_2,associated_data);
                out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_2,associated_data,payload_2,jwe_tag_2)));
                insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
        )
        else
            let key_2: key = par_res_key_a_3 in
            let v_2: bool = (msg_type = REQ) in
            (
                if v_2 then
                (
                    let nonce_3: bitstring = deriveNonce(par_req_iv_a_2,msg_id) in
                    let (payload_3: bitstring,jwe_tag_3: mac) = aeadEncrypt(key_2,nonce_3,conf_1,associated_data) in
                    event sendN32fMsgSeppA(n32f_context,msg_id,payload_3,associated_data);
                    out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_3,associated_data,payload_3,jwe_tag_3)));
                    insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
                )
                else
                    let nonce_4: bitstring = deriveNonce(par_res_iv_a_2,msg_id) in
                    let (payload_4: bitstring,jwe_tag_4: mac) = aeadEncrypt(key_2,nonce_4,conf_1,associated_data) in
                    event sendN32fMsgSeppA(n32f_context,msg_id,payload_4,associated_data);
                    out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_4,associated_data,payload_4,jwe_tag_4)));
                    insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
            )
            else
                let nonce_5: bitstring = fail-any in
                let (payload_5: bitstring,jwe_tag_5: mac) = aeadEncrypt(key_2,nonce_5,conf_1,associated_data) in
                event sendN32fMsgSeppA(n32f_context,msg_id,payload_5,associated_data);
                out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_5,associated_data,payload_5,jwe_tag_5)));
                insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
    )
    else
        let key_3: key = fail-any in
        let v_3: bool = (msg_type = REQ) in
        (
            if v_3 then
            (
                let nonce_6: bitstring = deriveNonce(par_req_iv_a_2,msg_id) in
                let (payload_6: bitstring,jwe_tag_6: mac) = aeadEncrypt(key_3,nonce_6,conf_1,associated_data) in
                event sendN32fMsgSeppA(n32f_context,msg_id,payload_6,associated_data);
                out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_6,associated_data,payload_6,jwe_tag_6)));
                insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
            )
            else
                let nonce_7: bitstring = deriveNonce(par_res_iv_a_2,msg_id) in
                let (payload_7: bitstring,jwe_tag_7: mac) = aeadEncrypt(key_3,nonce_7,conf_1,associated_data) in
                event sendN32fMsgSeppA(n32f_context,msg_id,payload_7,associated_data);
                out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_7,associated_data,payload_7,jwe_tag_7)));
                insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
        )
        else
            let nonce_8: bitstring = fail-any in
            let (payload_8: bitstring,jwe_tag_8: mac) = aeadEncrypt(key_3,nonce_8,conf_1,associated_data) in
            event sendN32fMsgSeppA(n32f_context,msg_id,payload_8,associated_data);
            out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_8,associated_data,payload_8,jwe_tag_8)));
            insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
) | (
    sync 1[@_3458, a_3, c_3, ()];
    !
    in(plmn_b, (=SEND,http_message_3: http));
    get storeSeppB(sepp_a_plmn_1: bitstring,sepp_a_addr_1: bitstring,n32f_context_1: bitstring,msg_cnt_b_2: nat,par_req_key_b_3: key,par_res_key_b_3: key,rev_req_key_b_3: key,rev_res_key_b_3: key,par_req_iv_b_2: bitstring,par_res_iv_b_2: bitstring,rev_req_iv_b_2: bitstring,rev_res_iv_b_2: bitstring,ciphers_b_1: bitstring,encp_b: bitstring,modp_b_4: bitstring,modp_a_4: bitstring,ipx_b_id_4: bitstring,ipx_b_key_3: pubkey,ipx_a_id_4: bitstring,ipx_a_key_3: pubkey) in
    let createHttp(source_addr_1: bitstring,destination_addr_1: bitstring,msg_type_1: bitstring,msg_body_3: bitstring) = http_message_3 in
    event recvHttpMsgSeppB(msg_type_1,msg_body_3);
    let conf_2: bitstring = getConf(msg_body_3,encp_b) in
    let nonconf_1: bitstring = getNonconf(msg_body_3,encp_b) in
    let msg_id_1: nat = msg_cnt_b_2 + 1 in
    let associated_data_1: aad = combineAAD(source_addr_1,destination_addr_1,msg_type_1,nonconf_1,msg_id_1,ipx_b_id_4,n32f_context_1) in
    let v_4: bool = (msg_type_1 = REQ) in
    (
        if v_4 then
        (
            let key_4: key = par_req_key_b_3 in
            let v_5: bool = (msg_type_1 = REQ) in
            (
                if v_5 then
                (
                    let nonce_9: bitstring = deriveNonce(par_req_iv_b_2,msg_id_1) in
                    let (payload_9: bitstring,jwe_tag_9: mac) = aeadEncrypt(key_4,nonce_9,conf_2,associated_data_1) in
                    event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_9,associated_data_1);
                    out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_9,associated_data_1,payload_9,jwe_tag_9)));
                    insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
                )
                else
                    let nonce_10: bitstring = deriveNonce(par_res_iv_b_2,msg_id_1) in
                    let (payload_10: bitstring,jwe_tag_10: mac) = aeadEncrypt(key_4,nonce_10,conf_2,associated_data_1) in
                    event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_10,associated_data_1);
                    out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_10,associated_data_1,payload_10,jwe_tag_10)));
                    insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
            )
            else
                let nonce_11: bitstring = fail-any in
                let (payload_11: bitstring,jwe_tag_11: mac) = aeadEncrypt(key_4,nonce_11,conf_2,associated_data_1) in
                event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_11,associated_data_1);
                out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_11,associated_data_1,payload_11,jwe_tag_11)));
                insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
        )
        else
            let key_5: key = par_res_key_b_3 in
            let v_6: bool = (msg_type_1 = REQ) in
            (
                if v_6 then
                (
                    let nonce_12: bitstring = deriveNonce(par_req_iv_b_2,msg_id_1) in
                    let (payload_12: bitstring,jwe_tag_12: mac) = aeadEncrypt(key_5,nonce_12,conf_2,associated_data_1) in
                    event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_12,associated_data_1);
                    out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_12,associated_data_1,payload_12,jwe_tag_12)));
                    insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
                )
                else
                    let nonce_13: bitstring = deriveNonce(par_res_iv_b_2,msg_id_1) in
                    let (payload_13: bitstring,jwe_tag_13: mac) = aeadEncrypt(key_5,nonce_13,conf_2,associated_data_1) in
                    event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_13,associated_data_1);
                    out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_13,associated_data_1,payload_13,jwe_tag_13)));
                    insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
            )
            else
                let nonce_14: bitstring = fail-any in
                let (payload_14: bitstring,jwe_tag_14: mac) = aeadEncrypt(key_5,nonce_14,conf_2,associated_data_1) in
                event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_14,associated_data_1);
                out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_14,associated_data_1,payload_14,jwe_tag_14)));
                insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
    )
    else
        let key_6: key = fail-any in
        let v_7: bool = (msg_type_1 = REQ) in
        (
            if v_7 then
            (
                let nonce_15: bitstring = deriveNonce(par_req_iv_b_2,msg_id_1) in
                let (payload_15: bitstring,jwe_tag_15: mac) = aeadEncrypt(key_6,nonce_15,conf_2,associated_data_1) in
                event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_15,associated_data_1);
                out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_15,associated_data_1,payload_15,jwe_tag_15)));
                insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
            )
            else
                let nonce_16: bitstring = deriveNonce(par_res_iv_b_2,msg_id_1) in
                let (payload_16: bitstring,jwe_tag_16: mac) = aeadEncrypt(key_6,nonce_16,conf_2,associated_data_1) in
                event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_16,associated_data_1);
                out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_16,associated_data_1,payload_16,jwe_tag_16)));
                insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
        )
        else
            let nonce_17: bitstring = fail-any in
            let (payload_17: bitstring,jwe_tag_17: mac) = aeadEncrypt(key_6,nonce_17,conf_2,associated_data_1) in
            event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_17,associated_data_1);
            out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_17,associated_data_1,payload_17,jwe_tag_17)));
            insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
) | (
    sync 2[@_3455, a_4, c_4, ()];
    !
    in(n32f_i, (sepp_a_addr_2: bitstring,prins_message: modprins));
    let prins''(jwe_headers: bitstring,iv: bitstring,dataToIntegrityProtect: aad,dataToIntegrityProtectAndCipher: bitstring,jwe_tag_18: mac,ipx_b_mods: ipxmod,=EMPTY) = prins_message in
    let modifications: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_18,signPrinsMod(prins_message,modp_a,ipx_a_id,jwe_tag_18,ipx_a_privkey)) in
    let combineAAD(source_addr_2: bitstring,destination_addr_2: bitstring,msg_type_2: bitstring,nonconf_2: bitstring,msg_id_2: nat,auth_ipx_id: bitstring,n32f_context_2: bitstring) = dataToIntegrityProtect in
    let modified_message: modprins = prins''(jwe_headers,iv,dataToIntegrityProtect,dataToIntegrityProtectAndCipher,jwe_tag_18,ipx_b_mods,modifications) in
    event ipxRecvA(n32f_context_2,msg_id_2,jwe_tag_18,modifications);
    out(n32f_a, (sepp_a_addr_2,modified_message))
) | (
    sync 2[@_3452, a_5, c_5, ()];
    !
    in(n32f_a, (sepp_b_addr_2: bitstring,prins_message_1: prins));
    let prins'(jwe_headers_1: bitstring,iv_1: bitstring,dataToIntegrityProtect_1: aad,dataToIntegrityProtectAndCipher_1: bitstring,jwe_tag_19: mac) = prins_message_1 in
    let modifications_1: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_19,signPrins(prins_message_1,modp_a,ipx_a_id,jwe_tag_19,ipx_a_privkey)) in
    let combineAAD(source_addr_3: bitstring,destination_addr_3: bitstring,msg_type_3: bitstring,nonconf_3: bitstring,msg_id_3: nat,=ipx_a_id,n32f_context_3: bitstring) = dataToIntegrityProtect_1 in
    let modified_message_1: modprins = prins''(jwe_headers_1,iv_1,dataToIntegrityProtect_1,dataToIntegrityProtectAndCipher_1,jwe_tag_19,modifications_1,EMPTY) in
    event ipxSendA(n32f_context_3,msg_id_3,jwe_tag_19,modifications_1);
    out(n32f_i, (sepp_b_addr_2,modified_message_1))
) | (
    sync 2[@_3449, a_6, c_6, ()];
    !
    in(n32f_i, (sepp_b_addr_3: bitstring,prins_message_2: modprins));
    let prins''(jwe_headers_2: bitstring,iv_2: bitstring,dataToIntegrityProtect_2: aad,dataToIntegrityProtectAndCipher_2: bitstring,jwe_tag_20: mac,ipx_a_mods: ipxmod,=EMPTY) = prins_message_2 in
    let modifications_2: ipxmod = jsonPatch(modp_b,ipx_b_id,jwe_tag_20,signPrinsMod(prins_message_2,modp_b,ipx_b_id,jwe_tag_20,ipx_b_privkey)) in
    let combineAAD(source_addr_4: bitstring,destination_addr_4: bitstring,msg_type_4: bitstring,nonconf_4: bitstring,msg_id_4: nat,auth_ipx_id_1: bitstring,n32f_context_4: bitstring) = dataToIntegrityProtect_2 in
    let modified_message_2: modprins = prins''(jwe_headers_2,iv_2,dataToIntegrityProtect_2,dataToIntegrityProtectAndCipher_2,jwe_tag_20,ipx_a_mods,modifications_2) in
    event ipxRecvB(n32f_context_4,msg_id_4,jwe_tag_20,modifications_2);
    out(n32f_b, (sepp_b_addr_3,modified_message_2))
) | (
    sync 2[@_3446, a_7, c_7, ()];
    !
    in(n32f_b, (sepp_a_addr_3: bitstring,prins_message_3: prins));
    let prins'(jwe_headers_3: bitstring,iv_3: bitstring,dataToIntegrityProtect_3: aad,dataToIntegrityProtectAndCipher_3: bitstring,jwe_tag_21: mac) = prins_message_3 in
    let modifications_3: ipxmod = jsonPatch(modp_b,ipx_b_id,jwe_tag_21,signPrins(prins_message_3,modp_b,ipx_b_id,jwe_tag_21,ipx_b_privkey)) in
    let combineAAD(source_addr_5: bitstring,destination_addr_5: bitstring,msg_type_5: bitstring,nonconf_5: bitstring,msg_id_5: nat,=ipx_b_id,n32f_context_5: bitstring) = dataToIntegrityProtect_3 in
    let modified_message_3: modprins = prins''(jwe_headers_3,iv_3,dataToIntegrityProtect_3,dataToIntegrityProtectAndCipher_3,jwe_tag_21,modifications_3,EMPTY) in
    event ipxSendB(n32f_context_5,msg_id_5,jwe_tag_21,modifications_3);
    out(n32f_i, (sepp_a_addr_3,modified_message_3));
    out(n32f_i, modifications_3)
) | (
    sync 2[@_3443, a_8, c_8, ()];
    !
    in(n32f_i, (sepp_a_addr_4: bitstring,prins_message_4: modprins));
    let prins''(jwe_headers_4: bitstring,iv_4: bitstring,dataToIntegrityProtect_4: aad,dataToIntegrityProtectAndCipher_4: bitstring,jwe_tag_22: mac,ipx_b_mods_1: ipxmod,=EMPTY) = prins_message_4 in
    let modifications_4: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_22,signPrinsMod(prins_message_4,modp_a,ipx_a_id,jwe_tag_22,ipx_a_privkey)) in
    let combineAAD(source_addr_6: bitstring,destination_addr_6: bitstring,msg_type_6: bitstring,nonconf_6: bitstring,msg_id_6: nat,auth_ipx_id_2: bitstring,n32f_context_6: bitstring) = dataToIntegrityProtect_4 in
    let modified_message_4: modprins = prins''(jwe_headers_4,iv_4,dataToIntegrityProtect_4,dataToIntegrityProtectAndCipher_4,jwe_tag_22,EMPTY,modifications_4) in
    event ipxRecvR1(n32f_context_6,msg_id_6,jwe_tag_22,modifications_4);
    out(n32f_a, (sepp_a_addr_4,modified_message_4))
) | (
    sync 2[@_3440, a_9, c_9, ()];
    !
    in(n32f_a, (sepp_b_addr_4: bitstring,prins_message_5: prins));
    let prins'(jwe_headers_5: bitstring,iv_5: bitstring,dataToIntegrityProtect_5: aad,dataToIntegrityProtectAndCipher_5: bitstring,jwe_tag_23: mac) = prins_message_5 in
    let modifications_5: ipxmod = jsonPatch(modp_r1,ipx_a_id,jwe_tag_23,signPrins(prins_message_5,modp_r1,ipx_a_id,jwe_tag_23,ipx_a_privkey)) in
    let combineAAD(source_addr_7: bitstring,destination_addr_7: bitstring,msg_type_7: bitstring,nonconf_7: bitstring,msg_id_7: nat,auth_ipx_id_3: bitstring,n32f_context_7: bitstring) = dataToIntegrityProtect_5 in
    let modified_message_5: modprins = prins''(jwe_headers_5,iv_5,dataToIntegrityProtect_5,dataToIntegrityProtectAndCipher_5,jwe_tag_23,modifications_5,EMPTY) in
    event ipxSendR1(n32f_context_7,msg_id_7,jwe_tag_23,modifications_5);
    out(n32f_i, (sepp_b_addr_4,modified_message_5))
) | (
    sync 2[@_3437, a_10, c_10, ()];
    !
    in(n32f_i, (sepp_a_addr_5: bitstring,prins_message_6: modprins));
    let prins''(jwe_headers_6: bitstring,iv_6: bitstring,dataToIntegrityProtect_6: aad,dataToIntegrityProtectAndCipher_6: bitstring,jwe_tag_24: mac,ipx_b_mods_2: ipxmod,=EMPTY) = prins_message_6 in
    let modifications_6: ipxmod = jsonPatch(modp_a,ipx_r2_id,jwe_tag_24,signPrinsMod(prins_message_6,modp_a,ipx_r2_id,jwe_tag_24,ipx_r2_privkey)) in
    let combineAAD(source_addr_8: bitstring,destination_addr_8: bitstring,msg_type_8: bitstring,nonconf_8: bitstring,msg_id_8: nat,auth_ipx_id_4: bitstring,n32f_context_8: bitstring) = dataToIntegrityProtect_6 in
    let modified_message_6: modprins = prins''(jwe_headers_6,iv_6,dataToIntegrityProtect_6,dataToIntegrityProtectAndCipher_6,jwe_tag_24,EMPTY,modifications_6) in
    event ipxRecvR2(n32f_context_8,msg_id_8,jwe_tag_24,modifications_6);
    out(n32f_a, (sepp_a_addr_5,modified_message_6))
) | (
    sync 2[@_3434, a_11, c_11, ()];
    !
    in(n32f_a, (sepp_b_addr_5: bitstring,prins_message_7: prins));
    let prins'(jwe_headers_7: bitstring,iv_7: bitstring,dataToIntegrityProtect_7: aad,dataToIntegrityProtectAndCipher_7: bitstring,jwe_tag_25: mac) = prins_message_7 in
    let modifications_7: ipxmod = jsonPatch(modp_a,ipx_r2_id,jwe_tag_25,signPrins(prins_message_7,modp_a,ipx_r2_id,jwe_tag_25,ipx_r2_privkey)) in
    let combineAAD(source_addr_9: bitstring,destination_addr_9: bitstring,msg_type_9: bitstring,nonconf_9: bitstring,msg_id_9: nat,auth_ipx_id_5: bitstring,n32f_context_9: bitstring) = dataToIntegrityProtect_7 in
    let modified_message_7: modprins = prins''(jwe_headers_7,iv_7,dataToIntegrityProtect_7,dataToIntegrityProtectAndCipher_7,jwe_tag_25,modifications_7,EMPTY) in
    event ipxSendR2(n32f_context_9,msg_id_9,jwe_tag_25,modifications_7);
    out(n32f_i, (sepp_b_addr_5,modified_message_7))
) | (
    sync 2[@_3431, a_12, c_12, ()];
    !
    in(n32f_i, (sepp_a_addr_6: bitstring,prins_message_8: modprins));
    in(n32f_i, modifications_8: ipxmod);
    let prins''(jwe_headers_8: bitstring,iv_8: bitstring,dataToIntegrityProtect_8: aad,dataToIntegrityProtectAndCipher_8: bitstring,jwe_tag_26: mac,ipx_b_mods_3: ipxmod,ipx_a_mods_1: ipxmod) = prins_message_8 in
    let combineAAD(source_addr_10: bitstring,destination_addr_10: bitstring,msg_type_10: bitstring,nonconf_10: bitstring,msg_id_10: nat,auth_ipx_id_6: bitstring,n32f_context_10: bitstring) = dataToIntegrityProtect_8 in
    let modified_message_8: modprins = prins''(jwe_headers_8,iv_8,dataToIntegrityProtect_8,dataToIntegrityProtectAndCipher_8,jwe_tag_26,ipx_b_mods_3,modifications_8) in
    event ipxRecvR3(n32f_context_10,msg_id_10,jwe_tag_26,modifications_8);
    out(n32f_a, (sepp_a_addr_6,modified_message_8))
) | (
    sync 3[@_3428, a_13, c_13, ()];
    !
    in(n32f_a, (=sepp_a_addr,prins_messsage: modprins));
    let prins''(jwe_headers_9: bitstring,nonce_18: bitstring,dataToIntegrityProtect_9: aad,dataToIntegrityProtectAndCipher_9: bitstring,jwe_tag_27: mac,ipx_b_mods_4: ipxmod,ipx_a_mods_2: ipxmod) = prins_messsage in
    let combineAAD(source_addr_11: bitstring,destination_addr_11: bitstring,msg_type_11: bitstring,nonconf_11: bitstring,msg_id_11: nat,auth_ipx_id_7: bitstring,n32f_context': bitstring) = dataToIntegrityProtect_9 in
    event recvN32fMsgSeppA(n32f_context',msg_id_11,dataToIntegrityProtectAndCipher_9,dataToIntegrityProtect_9);
    get storeSeppA(sepp_b_plmn_2: bitstring,sepp_b_addr_6: bitstring,n32f_context_11: bitstring,msg_cnt_a_3: nat,par_req_key_a_4: key,par_res_key_a_4: key,rev_req_key_a_4: key,rev_res_key_a_4: key,par_req_iv_a_3: bitstring,par_res_iv_a_3: bitstring,rev_req_iv_a_3: bitstring,rev_res_iv_a_3: bitstring,ciphers_a_2: bitstring,encp_a_1: bitstring,modp_a_5: bitstring,modp_b_5: bitstring,ipx_a_id_5: bitstring,ipx_a_key_4: pubkey,ipx_b_id_5: bitstring,ipx_b_key_4: pubkey) suchthat (n32f_context' = n32f_context_11) in
    let v_8: bool = (msg_type_11 = REQ) in
    (
        if v_8 then
        (
            let key_7: key = rev_req_key_a_4 in
            let v_9: bool = (msg_type_11 = REQ) in
            (
                if v_9 then
                (
                    let nonce_19: bitstring = deriveNonce(rev_req_iv_a_3,msg_id_11) in
                    let conf_3: bitstring = aeadDecrypt(key_7,nonce_19,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                    let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws: bitstring) = ipx_b_mods_4 in
                    if not(validPrinsSign(ipx_b_jws,ipx_b_key_4)) then
                        event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        out(err_a, (n32f_context_11,msg_id_11))
                    else
                        event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws: bitstring) = ipx_a_mods_2 in
                        if not(validPrinsModSign(ipx_a_jws,ipx_a_key_4)) then
                            event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            out(err_a, (n32f_context_11,msg_id_11))
                        else
                            event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            if (validPrinsModSign(ipx_a_jws,ipx_a_key_4) && (validPrinsSign(ipx_b_jws,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                            let msg_body_4: bitstring = applyPatches((conf_3,nonconf_11),modp_b_5,modp_a_5) in
                            let http_message_4: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_4) in
                            event sendHttpMsgSeppA(msg_type_11,msg_body_4);
                            out(plmn_a, (RECV,http_message_4))
                )
                else
                    let nonce_20: bitstring = deriveNonce(rev_res_iv_a_3,msg_id_11) in
                    let conf_4: bitstring = aeadDecrypt(key_7,nonce_20,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                    let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_1: bitstring) = ipx_b_mods_4 in
                    if not(validPrinsSign(ipx_b_jws_1,ipx_b_key_4)) then
                        event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        out(err_a, (n32f_context_11,msg_id_11))
                    else
                        event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_1: bitstring) = ipx_a_mods_2 in
                        if not(validPrinsModSign(ipx_a_jws_1,ipx_a_key_4)) then
                            event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            out(err_a, (n32f_context_11,msg_id_11))
                        else
                            event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            if (validPrinsModSign(ipx_a_jws_1,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_1,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                            let msg_body_5: bitstring = applyPatches((conf_4,nonconf_11),modp_b_5,modp_a_5) in
                            let http_message_5: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_5) in
                            event sendHttpMsgSeppA(msg_type_11,msg_body_5);
                            out(plmn_a, (RECV,http_message_5))
            )
            else
                let nonce_21: bitstring = fail-any in
                let conf_5: bitstring = aeadDecrypt(key_7,nonce_21,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_2: bitstring) = ipx_b_mods_4 in
                if not(validPrinsSign(ipx_b_jws_2,ipx_b_key_4)) then
                    event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    out(err_a, (n32f_context_11,msg_id_11))
                else
                    event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_2: bitstring) = ipx_a_mods_2 in
                    if not(validPrinsModSign(ipx_a_jws_2,ipx_a_key_4)) then
                        event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        out(err_a, (n32f_context_11,msg_id_11))
                    else
                        event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        if (validPrinsModSign(ipx_a_jws_2,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_2,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                        let msg_body_6: bitstring = applyPatches((conf_5,nonconf_11),modp_b_5,modp_a_5) in
                        let http_message_6: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_6) in
                        event sendHttpMsgSeppA(msg_type_11,msg_body_6);
                        out(plmn_a, (RECV,http_message_6))
        )
        else
            let key_8: key = rev_res_key_a_4 in
            let v_10: bool = (msg_type_11 = REQ) in
            (
                if v_10 then
                (
                    let nonce_22: bitstring = deriveNonce(rev_req_iv_a_3,msg_id_11) in
                    let conf_6: bitstring = aeadDecrypt(key_8,nonce_22,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                    let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_3: bitstring) = ipx_b_mods_4 in
                    if not(validPrinsSign(ipx_b_jws_3,ipx_b_key_4)) then
                        event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        out(err_a, (n32f_context_11,msg_id_11))
                    else
                        event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_3: bitstring) = ipx_a_mods_2 in
                        if not(validPrinsModSign(ipx_a_jws_3,ipx_a_key_4)) then
                            event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            out(err_a, (n32f_context_11,msg_id_11))
                        else
                            event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            if (validPrinsModSign(ipx_a_jws_3,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_3,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                            let msg_body_7: bitstring = applyPatches((conf_6,nonconf_11),modp_b_5,modp_a_5) in
                            let http_message_7: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_7) in
                            event sendHttpMsgSeppA(msg_type_11,msg_body_7);
                            out(plmn_a, (RECV,http_message_7))
                )
                else
                    let nonce_23: bitstring = deriveNonce(rev_res_iv_a_3,msg_id_11) in
                    let conf_7: bitstring = aeadDecrypt(key_8,nonce_23,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                    let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_4: bitstring) = ipx_b_mods_4 in
                    if not(validPrinsSign(ipx_b_jws_4,ipx_b_key_4)) then
                        event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        out(err_a, (n32f_context_11,msg_id_11))
                    else
                        event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_4: bitstring) = ipx_a_mods_2 in
                        if not(validPrinsModSign(ipx_a_jws_4,ipx_a_key_4)) then
                            event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            out(err_a, (n32f_context_11,msg_id_11))
                        else
                            event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            if (validPrinsModSign(ipx_a_jws_4,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_4,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                            let msg_body_8: bitstring = applyPatches((conf_7,nonconf_11),modp_b_5,modp_a_5) in
                            let http_message_8: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_8) in
                            event sendHttpMsgSeppA(msg_type_11,msg_body_8);
                            out(plmn_a, (RECV,http_message_8))
            )
            else
                let nonce_24: bitstring = fail-any in
                let conf_8: bitstring = aeadDecrypt(key_8,nonce_24,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_5: bitstring) = ipx_b_mods_4 in
                if not(validPrinsSign(ipx_b_jws_5,ipx_b_key_4)) then
                    event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    out(err_a, (n32f_context_11,msg_id_11))
                else
                    event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_5: bitstring) = ipx_a_mods_2 in
                    if not(validPrinsModSign(ipx_a_jws_5,ipx_a_key_4)) then
                        event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        out(err_a, (n32f_context_11,msg_id_11))
                    else
                        event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        if (validPrinsModSign(ipx_a_jws_5,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_5,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                        let msg_body_9: bitstring = applyPatches((conf_8,nonconf_11),modp_b_5,modp_a_5) in
                        let http_message_9: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_9) in
                        event sendHttpMsgSeppA(msg_type_11,msg_body_9);
                        out(plmn_a, (RECV,http_message_9))
    )
    else
        let key_9: key = fail-any in
        let v_11: bool = (msg_type_11 = REQ) in
        (
            if v_11 then
            (
                let nonce_25: bitstring = deriveNonce(rev_req_iv_a_3,msg_id_11) in
                let conf_9: bitstring = aeadDecrypt(key_9,nonce_25,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_6: bitstring) = ipx_b_mods_4 in
                if not(validPrinsSign(ipx_b_jws_6,ipx_b_key_4)) then
                    event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    out(err_a, (n32f_context_11,msg_id_11))
                else
                    event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_6: bitstring) = ipx_a_mods_2 in
                    if not(validPrinsModSign(ipx_a_jws_6,ipx_a_key_4)) then
                        event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        out(err_a, (n32f_context_11,msg_id_11))
                    else
                        event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        if (validPrinsModSign(ipx_a_jws_6,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_6,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                        let msg_body_10: bitstring = applyPatches((conf_9,nonconf_11),modp_b_5,modp_a_5) in
                        let http_message_10: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_10) in
                        event sendHttpMsgSeppA(msg_type_11,msg_body_10);
                        out(plmn_a, (RECV,http_message_10))
            )
            else
                let nonce_26: bitstring = deriveNonce(rev_res_iv_a_3,msg_id_11) in
                let conf_10: bitstring = aeadDecrypt(key_9,nonce_26,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_7: bitstring) = ipx_b_mods_4 in
                if not(validPrinsSign(ipx_b_jws_7,ipx_b_key_4)) then
                    event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    out(err_a, (n32f_context_11,msg_id_11))
                else
                    event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_7: bitstring) = ipx_a_mods_2 in
                    if not(validPrinsModSign(ipx_a_jws_7,ipx_a_key_4)) then
                        event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        out(err_a, (n32f_context_11,msg_id_11))
                    else
                        event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        if (validPrinsModSign(ipx_a_jws_7,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_7,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                        let msg_body_11: bitstring = applyPatches((conf_10,nonconf_11),modp_b_5,modp_a_5) in
                        let http_message_11: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_11) in
                        event sendHttpMsgSeppA(msg_type_11,msg_body_11);
                        out(plmn_a, (RECV,http_message_11))
        )
        else
            let nonce_27: bitstring = fail-any in
            let conf_11: bitstring = aeadDecrypt(key_9,nonce_27,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
            let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_8: bitstring) = ipx_b_mods_4 in
            if not(validPrinsSign(ipx_b_jws_8,ipx_b_key_4)) then
                event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                out(err_a, (n32f_context_11,msg_id_11))
            else
                event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_8: bitstring) = ipx_a_mods_2 in
                if not(validPrinsModSign(ipx_a_jws_8,ipx_a_key_4)) then
                    event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                    out(err_a, (n32f_context_11,msg_id_11))
                else
                    event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                    if (validPrinsModSign(ipx_a_jws_8,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_8,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                    let msg_body_12: bitstring = applyPatches((conf_11,nonconf_11),modp_b_5,modp_a_5) in
                    let http_message_12: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_12) in
                    event sendHttpMsgSeppA(msg_type_11,msg_body_12);
                    out(plmn_a, (RECV,http_message_12))
) | (
    sync 3[@_3425, a_14, c_14, ()];
    !
    in(n32f_b, (=sepp_b_addr,prins_messsage_1: modprins));
    let prins''(jwe_headers_10: bitstring,nonce_28: bitstring,dataToIntegrityProtect_10: aad,dataToIntegrityProtectAndCipher_10: bitstring,jwe_tag_28: mac,ipx_a_mods_3: ipxmod,ipx_b_mods_5: ipxmod) = prins_messsage_1 in
    let combineAAD(source_addr_12: bitstring,destination_addr_12: bitstring,msg_type_12: bitstring,nonconf_12: bitstring,msg_id_12: nat,auth_ipx_id_8: bitstring,n32f_context'_1: bitstring) = dataToIntegrityProtect_10 in
    event recvN32fMsgSeppB(n32f_context'_1,msg_id_12,dataToIntegrityProtectAndCipher_10,dataToIntegrityProtect_10);
    get storeSeppB(sepp_a_plmn_2: bitstring,sepp_a_addr_7: bitstring,n32f_context_12: bitstring,msg_cnt_b_3: nat,par_req_key_b_4: key,par_res_key_b_4: key,rev_req_key_b_4: key,rev_res_key_b_4: key,par_req_iv_b_3: bitstring,par_res_iv_b_3: bitstring,rev_req_iv_b_3: bitstring,rev_res_iv_b_3: bitstring,ciphers_b_2: bitstring,encp_b_1: bitstring,modp_b_6: bitstring,modp_a_6: bitstring,ipx_b_id_6: bitstring,ipx_b_key_5: pubkey,ipx_a_id_6: bitstring,ipx_a_key_5: pubkey) suchthat (n32f_context'_1 = n32f_context_12) in
    let v_12: bool = (msg_type_12 = REQ) in
    (
        if v_12 then
        (
            let key_10: key = rev_req_key_b_4 in
            let v_13: bool = (msg_type_12 = REQ) in
            (
                if v_13 then
                (
                    let nonce_29: bitstring = deriveNonce(rev_req_iv_b_3,msg_id_12) in
                    let conf_12: bitstring = aeadDecrypt(key_10,nonce_29,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                    let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_9: bitstring) = ipx_a_mods_3 in
                    if not(validPrinsSign(ipx_a_jws_9,ipx_a_key_5)) then
                        event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        out(err_b, (n32f_context_12,msg_id_12))
                    else
                        event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_9: bitstring) = ipx_b_mods_5 in
                        if not(validPrinsModSign(ipx_b_jws_9,ipx_b_key_5)) then
                            event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            out(err_b, (n32f_context_12,msg_id_12))
                        else
                            event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            if (validPrinsSign(ipx_a_jws_9,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_9,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                            let msg_body_13: bitstring = applyPatches((conf_12,nonconf_12),modp_a_6,modp_b_6) in
                            let http_message_13: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_13) in
                            event sendHttpMsgSeppB(msg_type_12,msg_body_13);
                            out(plmn_b, (RECV,http_message_13))
                )
                else
                    let nonce_30: bitstring = deriveNonce(rev_res_iv_b_3,msg_id_12) in
                    let conf_13: bitstring = aeadDecrypt(key_10,nonce_30,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                    let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_10: bitstring) = ipx_a_mods_3 in
                    if not(validPrinsSign(ipx_a_jws_10,ipx_a_key_5)) then
                        event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        out(err_b, (n32f_context_12,msg_id_12))
                    else
                        event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_10: bitstring) = ipx_b_mods_5 in
                        if not(validPrinsModSign(ipx_b_jws_10,ipx_b_key_5)) then
                            event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            out(err_b, (n32f_context_12,msg_id_12))
                        else
                            event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            if (validPrinsSign(ipx_a_jws_10,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_10,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                            let msg_body_14: bitstring = applyPatches((conf_13,nonconf_12),modp_a_6,modp_b_6) in
                            let http_message_14: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_14) in
                            event sendHttpMsgSeppB(msg_type_12,msg_body_14);
                            out(plmn_b, (RECV,http_message_14))
            )
            else
                let nonce_31: bitstring = fail-any in
                let conf_14: bitstring = aeadDecrypt(key_10,nonce_31,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_11: bitstring) = ipx_a_mods_3 in
                if not(validPrinsSign(ipx_a_jws_11,ipx_a_key_5)) then
                    event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    out(err_b, (n32f_context_12,msg_id_12))
                else
                    event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_11: bitstring) = ipx_b_mods_5 in
                    if not(validPrinsModSign(ipx_b_jws_11,ipx_b_key_5)) then
                        event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        out(err_b, (n32f_context_12,msg_id_12))
                    else
                        event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        if (validPrinsSign(ipx_a_jws_11,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_11,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                        let msg_body_15: bitstring = applyPatches((conf_14,nonconf_12),modp_a_6,modp_b_6) in
                        let http_message_15: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_15) in
                        event sendHttpMsgSeppB(msg_type_12,msg_body_15);
                        out(plmn_b, (RECV,http_message_15))
        )
        else
            let key_11: key = rev_res_key_b_4 in
            let v_14: bool = (msg_type_12 = REQ) in
            (
                if v_14 then
                (
                    let nonce_32: bitstring = deriveNonce(rev_req_iv_b_3,msg_id_12) in
                    let conf_15: bitstring = aeadDecrypt(key_11,nonce_32,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                    let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_12: bitstring) = ipx_a_mods_3 in
                    if not(validPrinsSign(ipx_a_jws_12,ipx_a_key_5)) then
                        event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        out(err_b, (n32f_context_12,msg_id_12))
                    else
                        event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_12: bitstring) = ipx_b_mods_5 in
                        if not(validPrinsModSign(ipx_b_jws_12,ipx_b_key_5)) then
                            event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            out(err_b, (n32f_context_12,msg_id_12))
                        else
                            event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            if (validPrinsSign(ipx_a_jws_12,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_12,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                            let msg_body_16: bitstring = applyPatches((conf_15,nonconf_12),modp_a_6,modp_b_6) in
                            let http_message_16: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_16) in
                            event sendHttpMsgSeppB(msg_type_12,msg_body_16);
                            out(plmn_b, (RECV,http_message_16))
                )
                else
                    let nonce_33: bitstring = deriveNonce(rev_res_iv_b_3,msg_id_12) in
                    let conf_16: bitstring = aeadDecrypt(key_11,nonce_33,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                    let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_13: bitstring) = ipx_a_mods_3 in
                    if not(validPrinsSign(ipx_a_jws_13,ipx_a_key_5)) then
                        event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        out(err_b, (n32f_context_12,msg_id_12))
                    else
                        event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_13: bitstring) = ipx_b_mods_5 in
                        if not(validPrinsModSign(ipx_b_jws_13,ipx_b_key_5)) then
                            event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            out(err_b, (n32f_context_12,msg_id_12))
                        else
                            event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            if (validPrinsSign(ipx_a_jws_13,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_13,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                            let msg_body_17: bitstring = applyPatches((conf_16,nonconf_12),modp_a_6,modp_b_6) in
                            let http_message_17: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_17) in
                            event sendHttpMsgSeppB(msg_type_12,msg_body_17);
                            out(plmn_b, (RECV,http_message_17))
            )
            else
                let nonce_34: bitstring = fail-any in
                let conf_17: bitstring = aeadDecrypt(key_11,nonce_34,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_14: bitstring) = ipx_a_mods_3 in
                if not(validPrinsSign(ipx_a_jws_14,ipx_a_key_5)) then
                    event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    out(err_b, (n32f_context_12,msg_id_12))
                else
                    event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_14: bitstring) = ipx_b_mods_5 in
                    if not(validPrinsModSign(ipx_b_jws_14,ipx_b_key_5)) then
                        event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        out(err_b, (n32f_context_12,msg_id_12))
                    else
                        event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        if (validPrinsSign(ipx_a_jws_14,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_14,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                        let msg_body_18: bitstring = applyPatches((conf_17,nonconf_12),modp_a_6,modp_b_6) in
                        let http_message_18: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_18) in
                        event sendHttpMsgSeppB(msg_type_12,msg_body_18);
                        out(plmn_b, (RECV,http_message_18))
    )
    else
        let key_12: key = fail-any in
        let v_15: bool = (msg_type_12 = REQ) in
        (
            if v_15 then
            (
                let nonce_35: bitstring = deriveNonce(rev_req_iv_b_3,msg_id_12) in
                let conf_18: bitstring = aeadDecrypt(key_12,nonce_35,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_15: bitstring) = ipx_a_mods_3 in
                if not(validPrinsSign(ipx_a_jws_15,ipx_a_key_5)) then
                    event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    out(err_b, (n32f_context_12,msg_id_12))
                else
                    event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_15: bitstring) = ipx_b_mods_5 in
                    if not(validPrinsModSign(ipx_b_jws_15,ipx_b_key_5)) then
                        event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        out(err_b, (n32f_context_12,msg_id_12))
                    else
                        event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        if (validPrinsSign(ipx_a_jws_15,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_15,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                        let msg_body_19: bitstring = applyPatches((conf_18,nonconf_12),modp_a_6,modp_b_6) in
                        let http_message_19: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_19) in
                        event sendHttpMsgSeppB(msg_type_12,msg_body_19);
                        out(plmn_b, (RECV,http_message_19))
            )
            else
                let nonce_36: bitstring = deriveNonce(rev_res_iv_b_3,msg_id_12) in
                let conf_19: bitstring = aeadDecrypt(key_12,nonce_36,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_16: bitstring) = ipx_a_mods_3 in
                if not(validPrinsSign(ipx_a_jws_16,ipx_a_key_5)) then
                    event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    out(err_b, (n32f_context_12,msg_id_12))
                else
                    event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_16: bitstring) = ipx_b_mods_5 in
                    if not(validPrinsModSign(ipx_b_jws_16,ipx_b_key_5)) then
                        event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        out(err_b, (n32f_context_12,msg_id_12))
                    else
                        event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        if (validPrinsSign(ipx_a_jws_16,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_16,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                        let msg_body_20: bitstring = applyPatches((conf_19,nonconf_12),modp_a_6,modp_b_6) in
                        let http_message_20: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_20) in
                        event sendHttpMsgSeppB(msg_type_12,msg_body_20);
                        out(plmn_b, (RECV,http_message_20))
        )
        else
            let nonce_37: bitstring = fail-any in
            let conf_20: bitstring = aeadDecrypt(key_12,nonce_37,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
            let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_17: bitstring) = ipx_a_mods_3 in
            if not(validPrinsSign(ipx_a_jws_17,ipx_a_key_5)) then
                event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                out(err_b, (n32f_context_12,msg_id_12))
            else
                event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_17: bitstring) = ipx_b_mods_5 in
                if not(validPrinsModSign(ipx_b_jws_17,ipx_b_key_5)) then
                    event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                    out(err_b, (n32f_context_12,msg_id_12))
                else
                    event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                    if (validPrinsSign(ipx_a_jws_17,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_17,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                    let msg_body_21: bitstring = applyPatches((conf_20,nonconf_12),modp_a_6,modp_b_6) in
                    let http_message_21: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_21) in
                    event sendHttpMsgSeppB(msg_type_12,msg_body_21);
                    out(plmn_b, (RECV,http_message_21))
) | (
    sync 3[@_3422, a_15, c_15, ()];
    !
    in(plmn_a, (=RECV,msg: http));
    let createHttp(nf_b_addr_1: bitstring,=nf_a_addr,msg_type_13: bitstring,msg_body_22: bitstring) = msg in
    if (msg_type_13 = REQ) then
        event sendHttpMsgNfA(RES,msg_body_22);
        out(plmn_a, (SEND,createHttp(nf_a_addr,nf_b_addr_1,RES,msg_body_22)))
    else
        event recvHttpMsgNfA(RES,msg_body_22)
) | (
    sync 3[@_3419, a_16, c_16, ()];
    !
    in(plmn_b, (=RECV,msg_1: http));
    let createHttp(nf_a_addr_1: bitstring,=nf_b_addr,msg_type_14: bitstring,msg_body_23: bitstring) = msg_1 in
    if (msg_type_14 = REQ) then
        event sendHttpMsgNfB(RES,msg_body_23);
        out(plmn_b, (SEND,createHttp(nf_b_addr,nf_a_addr_1,RES,msg_body_23)))
    else
        event recvHttpMsgNfB(RES,msg_body_23)
) | (
    sync 3[@_3416, a_17, c_17, ()];
    !
    in(err_a, (n32f_context'_2: bitstring,msg_id_13: nat));
    get storeSeppA(sepp_b_plmn_3: bitstring,sepp_b_addr_7: bitstring,n32f_context_13: bitstring,msg_cnt_a_4: nat,par_req_key_a_5: key,par_res_key_a_5: key,rev_req_key_a_5: key,rev_res_key_a_5: key,par_req_iv_a_4: bitstring,par_res_iv_a_4: bitstring,rev_req_iv_a_4: bitstring,rev_res_iv_a_4: bitstring,ciphers_a_3: bitstring,encp_a_2: bitstring,modp_a_7: bitstring,modp_b_7: bitstring,ipx_a_id_7: bitstring,ipx_a_key_6: pubkey,ipx_b_id_7: bitstring,ipx_b_key_6: pubkey) suchthat (n32f_context'_2 = n32f_context_13) in
    out(n32c_a, (sepp_b_addr_7,n32f_context_13,msg_id_13));
    in(n32c_a, (=sepp_a_addr,=n32f_context_13,=msg_id_13,status_code: bitstring));
    event sendErrorSeppA(n32f_context_13,msg_id_13,status_code)
) | (
    sync 3[@_3413, a_18, c_18, ()];
    !
    in(n32c_b, (=sepp_a_addr,n32f_context'_3: bitstring,msg_id_14: nat));
    get storeSeppA(sepp_b_plmn_4: bitstring,sepp_b_addr_8: bitstring,n32f_context_14: bitstring,msg_cnt_a_5: nat,par_req_key_a_6: key,par_res_key_a_6: key,rev_req_key_a_6: key,rev_res_key_a_6: key,par_req_iv_a_5: bitstring,par_res_iv_a_5: bitstring,rev_req_iv_a_5: bitstring,rev_res_iv_a_5: bitstring,ciphers_a_4: bitstring,encp_a_3: bitstring,modp_a_8: bitstring,modp_b_8: bitstring,ipx_a_id_8: bitstring,ipx_a_key_7: pubkey,ipx_b_id_8: bitstring,ipx_b_key_7: pubkey) suchthat (n32f_context'_3 = n32f_context_14) in
    if (msg_id_14 ≤ msg_cnt_a_5) then
        out(n32c_b, (sepp_b_addr_8,n32f_context_14,msg_id_14,SUCC));
        event recvErrorSeppA(n32f_context_14,msg_id_14,SUCC)
    else
        out(n32c_b, (sepp_b_addr_8,n32f_context_14,msg_id_14,FAIL));
        event recvErrorSeppA(n32f_context_14,msg_id_14,FAIL)
) | (
    sync 3[@_3410, a_19, c_19, ()];
    !
    in(err_b, (n32f_context'_4: bitstring,msg_id_15: nat));
    get storeSeppB(sepp_a_plmn_3: bitstring,sepp_a_addr_8: bitstring,n32f_context_15: bitstring,msg_cnt_b_4: nat,par_req_key_b_5: key,par_res_key_b_5: key,rev_req_key_b_5: key,rev_res_key_b_5: key,par_req_iv_b_4: bitstring,par_res_iv_b_4: bitstring,rev_req_iv_b_4: bitstring,rev_res_iv_b_4: bitstring,ciphers_b_3: bitstring,encp_b_2: bitstring,modp_b_9: bitstring,modp_a_9: bitstring,ipx_b_id_9: bitstring,ipx_b_key_8: pubkey,ipx_a_id_9: bitstring,ipx_a_key_8: pubkey) suchthat (n32f_context'_4 = n32f_context_15) in
    out(n32c_b, (sepp_a_addr_8,n32f_context_15,msg_id_15));
    in(n32c_b, (=sepp_b_addr,=n32f_context_15,=msg_id_15,status_code_1: bitstring));
    event sendErrorSeppB(n32f_context_15,msg_id_15,status_code_1)
) | (
    sync 3[@_3407, a_20, c_20, ()];
    !
    in(n32c_a, (=sepp_b_addr,n32f_context'_5: bitstring,msg_id_16: nat));
    get storeSeppB(sepp_a_plmn_4: bitstring,sepp_a_addr_9: bitstring,n32f_context_16: bitstring,msg_cnt_b_5: nat,par_req_key_b_6: key,par_res_key_b_6: key,rev_req_key_b_6: key,rev_res_key_b_6: key,par_req_iv_b_5: bitstring,par_res_iv_b_5: bitstring,rev_req_iv_b_5: bitstring,rev_res_iv_b_5: bitstring,ciphers_b_4: bitstring,encp_b_3: bitstring,modp_b_10: bitstring,modp_a_10: bitstring,ipx_b_id_10: bitstring,ipx_b_key_9: pubkey,ipx_a_id_10: bitstring,ipx_a_key_9: pubkey) suchthat (n32f_context'_5 = n32f_context_16) in
    if (msg_id_16 ≤ msg_cnt_b_5) then
        out(n32c_a, (sepp_a_addr_9,n32f_context_16,msg_id_16,SUCC));
        event recvErrorSeppB(n32f_context_16,msg_id_16,SUCC)
    else
        out(n32c_a, (sepp_a_addr_9,n32f_context_16,msg_id_16,FAIL));
        event recvErrorSeppB(n32f_context_16,msg_id_16,FAIL)
) | (
    sync 3[@_3404, a_21, c_21, ()];
    !
    in(plmn_a, (=SEND,http_message_22: http));
    get storeSeppA(sepp_b_plmn_5: bitstring,sepp_b_addr_9: bitstring,n32f_context_17: bitstring,msg_cnt_a_6: nat,par_req_key_a_7: key,par_res_key_a_7: key,rev_req_key_a_7: key,rev_res_key_a_7: key,par_req_iv_a_6: bitstring,par_res_iv_a_6: bitstring,rev_req_iv_a_6: bitstring,rev_res_iv_a_6: bitstring,ciphers_a_5: bitstring,encp_a_4: bitstring,modp_a_11: bitstring,modp_b_11: bitstring,ipx_a_id_11: bitstring,ipx_a_key_10: pubkey,ipx_b_id_11: bitstring,ipx_b_key_10: pubkey) in
    let createHttp(source_addr_13: bitstring,destination_addr_13: bitstring,msg_type_15: bitstring,msg_body_24: bitstring) = http_message_22 in
    event recvHttpMsgSeppA(msg_type_15,msg_body_24);
    let conf_21: bitstring = getConf(msg_body_24,encp_a_4) in
    let nonconf_13: bitstring = getNonconf(msg_body_24,encp_a_4) in
    let msg_id_17: nat = msg_cnt_a_6 + 1 in
    let associated_data_2: aad = combineAAD(source_addr_13,destination_addr_13,msg_type_15,nonconf_13,msg_id_17,ipx_a_id_11,n32f_context_17) in
    let v_16: bool = (msg_type_15 = REQ) in
    (
        if v_16 then
        (
            let key_13: key = par_req_key_a_7 in
            let v_17: bool = (msg_type_15 = REQ) in
            (
                if v_17 then
                (
                    let nonce_38: bitstring = deriveNonce(par_req_iv_a_6,msg_id_17) in
                    let (payload_18: bitstring,jwe_tag_29: mac) = aeadEncrypt(key_13,nonce_38,conf_21,associated_data_2) in
                    event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_18,associated_data_2);
                    out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_38,associated_data_2,payload_18,jwe_tag_29)));
                    insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
                )
                else
                    let nonce_39: bitstring = deriveNonce(par_res_iv_a_6,msg_id_17) in
                    let (payload_19: bitstring,jwe_tag_30: mac) = aeadEncrypt(key_13,nonce_39,conf_21,associated_data_2) in
                    event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_19,associated_data_2);
                    out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_39,associated_data_2,payload_19,jwe_tag_30)));
                    insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
            )
            else
                let nonce_40: bitstring = fail-any in
                let (payload_20: bitstring,jwe_tag_31: mac) = aeadEncrypt(key_13,nonce_40,conf_21,associated_data_2) in
                event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_20,associated_data_2);
                out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_40,associated_data_2,payload_20,jwe_tag_31)));
                insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
        )
        else
            let key_14: key = par_res_key_a_7 in
            let v_18: bool = (msg_type_15 = REQ) in
            (
                if v_18 then
                (
                    let nonce_41: bitstring = deriveNonce(par_req_iv_a_6,msg_id_17) in
                    let (payload_21: bitstring,jwe_tag_32: mac) = aeadEncrypt(key_14,nonce_41,conf_21,associated_data_2) in
                    event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_21,associated_data_2);
                    out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_41,associated_data_2,payload_21,jwe_tag_32)));
                    insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
                )
                else
                    let nonce_42: bitstring = deriveNonce(par_res_iv_a_6,msg_id_17) in
                    let (payload_22: bitstring,jwe_tag_33: mac) = aeadEncrypt(key_14,nonce_42,conf_21,associated_data_2) in
                    event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_22,associated_data_2);
                    out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_42,associated_data_2,payload_22,jwe_tag_33)));
                    insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
            )
            else
                let nonce_43: bitstring = fail-any in
                let (payload_23: bitstring,jwe_tag_34: mac) = aeadEncrypt(key_14,nonce_43,conf_21,associated_data_2) in
                event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_23,associated_data_2);
                out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_43,associated_data_2,payload_23,jwe_tag_34)));
                insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
    )
    else
        let key_15: key = fail-any in
        let v_19: bool = (msg_type_15 = REQ) in
        (
            if v_19 then
            (
                let nonce_44: bitstring = deriveNonce(par_req_iv_a_6,msg_id_17) in
                let (payload_24: bitstring,jwe_tag_35: mac) = aeadEncrypt(key_15,nonce_44,conf_21,associated_data_2) in
                event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_24,associated_data_2);
                out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_44,associated_data_2,payload_24,jwe_tag_35)));
                insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
            )
            else
                let nonce_45: bitstring = deriveNonce(par_res_iv_a_6,msg_id_17) in
                let (payload_25: bitstring,jwe_tag_36: mac) = aeadEncrypt(key_15,nonce_45,conf_21,associated_data_2) in
                event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_25,associated_data_2);
                out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_45,associated_data_2,payload_25,jwe_tag_36)));
                insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
        )
        else
            let nonce_46: bitstring = fail-any in
            let (payload_26: bitstring,jwe_tag_37: mac) = aeadEncrypt(key_15,nonce_46,conf_21,associated_data_2) in
            event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_26,associated_data_2);
            out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_46,associated_data_2,payload_26,jwe_tag_37)));
            insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
) | (
    sync 3[@_3401, a_22, c_22, ()];
    !
    in(plmn_b, (=SEND,http_message_23: http));
    get storeSeppB(sepp_a_plmn_5: bitstring,sepp_a_addr_10: bitstring,n32f_context_18: bitstring,msg_cnt_b_6: nat,par_req_key_b_7: key,par_res_key_b_7: key,rev_req_key_b_7: key,rev_res_key_b_7: key,par_req_iv_b_6: bitstring,par_res_iv_b_6: bitstring,rev_req_iv_b_6: bitstring,rev_res_iv_b_6: bitstring,ciphers_b_5: bitstring,encp_b_4: bitstring,modp_b_12: bitstring,modp_a_12: bitstring,ipx_b_id_12: bitstring,ipx_b_key_11: pubkey,ipx_a_id_12: bitstring,ipx_a_key_11: pubkey) in
    let createHttp(source_addr_14: bitstring,destination_addr_14: bitstring,msg_type_16: bitstring,msg_body_25: bitstring) = http_message_23 in
    event recvHttpMsgSeppB(msg_type_16,msg_body_25);
    let conf_22: bitstring = getConf(msg_body_25,encp_b_4) in
    let nonconf_14: bitstring = getNonconf(msg_body_25,encp_b_4) in
    let msg_id_18: nat = msg_cnt_b_6 + 1 in
    let associated_data_3: aad = combineAAD(source_addr_14,destination_addr_14,msg_type_16,nonconf_14,msg_id_18,ipx_b_id_12,n32f_context_18) in
    let v_20: bool = (msg_type_16 = REQ) in
    (
        if v_20 then
        (
            let key_16: key = par_req_key_b_7 in
            let v_21: bool = (msg_type_16 = REQ) in
            (
                if v_21 then
                (
                    let nonce_47: bitstring = deriveNonce(par_req_iv_b_6,msg_id_18) in
                    let (payload_27: bitstring,jwe_tag_38: mac) = aeadEncrypt(key_16,nonce_47,conf_22,associated_data_3) in
                    event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_27,associated_data_3);
                    out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_47,associated_data_3,payload_27,jwe_tag_38)));
                    insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
                )
                else
                    let nonce_48: bitstring = deriveNonce(par_res_iv_b_6,msg_id_18) in
                    let (payload_28: bitstring,jwe_tag_39: mac) = aeadEncrypt(key_16,nonce_48,conf_22,associated_data_3) in
                    event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_28,associated_data_3);
                    out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_48,associated_data_3,payload_28,jwe_tag_39)));
                    insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
            )
            else
                let nonce_49: bitstring = fail-any in
                let (payload_29: bitstring,jwe_tag_40: mac) = aeadEncrypt(key_16,nonce_49,conf_22,associated_data_3) in
                event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_29,associated_data_3);
                out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_49,associated_data_3,payload_29,jwe_tag_40)));
                insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
        )
        else
            let key_17: key = par_res_key_b_7 in
            let v_22: bool = (msg_type_16 = REQ) in
            (
                if v_22 then
                (
                    let nonce_50: bitstring = deriveNonce(par_req_iv_b_6,msg_id_18) in
                    let (payload_30: bitstring,jwe_tag_41: mac) = aeadEncrypt(key_17,nonce_50,conf_22,associated_data_3) in
                    event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_30,associated_data_3);
                    out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_50,associated_data_3,payload_30,jwe_tag_41)));
                    insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
                )
                else
                    let nonce_51: bitstring = deriveNonce(par_res_iv_b_6,msg_id_18) in
                    let (payload_31: bitstring,jwe_tag_42: mac) = aeadEncrypt(key_17,nonce_51,conf_22,associated_data_3) in
                    event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_31,associated_data_3);
                    out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_51,associated_data_3,payload_31,jwe_tag_42)));
                    insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
            )
            else
                let nonce_52: bitstring = fail-any in
                let (payload_32: bitstring,jwe_tag_43: mac) = aeadEncrypt(key_17,nonce_52,conf_22,associated_data_3) in
                event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_32,associated_data_3);
                out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_52,associated_data_3,payload_32,jwe_tag_43)));
                insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
    )
    else
        let key_18: key = fail-any in
        let v_23: bool = (msg_type_16 = REQ) in
        (
            if v_23 then
            (
                let nonce_53: bitstring = deriveNonce(par_req_iv_b_6,msg_id_18) in
                let (payload_33: bitstring,jwe_tag_44: mac) = aeadEncrypt(key_18,nonce_53,conf_22,associated_data_3) in
                event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_33,associated_data_3);
                out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_53,associated_data_3,payload_33,jwe_tag_44)));
                insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
            )
            else
                let nonce_54: bitstring = deriveNonce(par_res_iv_b_6,msg_id_18) in
                let (payload_34: bitstring,jwe_tag_45: mac) = aeadEncrypt(key_18,nonce_54,conf_22,associated_data_3) in
                event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_34,associated_data_3);
                out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_54,associated_data_3,payload_34,jwe_tag_45)));
                insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
        )
        else
            let nonce_55: bitstring = fail-any in
            let (payload_35: bitstring,jwe_tag_46: mac) = aeadEncrypt(key_18,nonce_55,conf_22,associated_data_3) in
            event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_35,associated_data_3);
            out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_55,associated_data_3,payload_35,jwe_tag_46)));
            insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
) | (
    sync 4[@_3398, a_23, c_23, ()];
    !
    in(n32f_i, (sepp_a_addr_11: bitstring,prins_message_9: modprins));
    let prins''(jwe_headers_11: bitstring,iv_9: bitstring,dataToIntegrityProtect_11: aad,dataToIntegrityProtectAndCipher_11: bitstring,jwe_tag_47: mac,ipx_b_mods_6: ipxmod,=EMPTY) = prins_message_9 in
    let modifications_9: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_47,signPrinsMod(prins_message_9,modp_a,ipx_a_id,jwe_tag_47,ipx_a_privkey)) in
    let combineAAD(source_addr_15: bitstring,destination_addr_15: bitstring,msg_type_17: bitstring,nonconf_15: bitstring,msg_id_19: nat,auth_ipx_id_9: bitstring,n32f_context_19: bitstring) = dataToIntegrityProtect_11 in
    let modified_message_9: modprins = prins''(jwe_headers_11,iv_9,dataToIntegrityProtect_11,dataToIntegrityProtectAndCipher_11,jwe_tag_47,ipx_b_mods_6,modifications_9) in
    event ipxRecvA(n32f_context_19,msg_id_19,jwe_tag_47,modifications_9);
    out(n32f_a, (sepp_a_addr_11,modified_message_9))
) | (
    sync 4[@_3395, a_24, c_24, ()];
    !
    in(n32f_a, (sepp_b_addr_10: bitstring,prins_message_10: prins));
    let prins'(jwe_headers_12: bitstring,iv_10: bitstring,dataToIntegrityProtect_12: aad,dataToIntegrityProtectAndCipher_12: bitstring,jwe_tag_48: mac) = prins_message_10 in
    let modifications_10: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_48,signPrins(prins_message_10,modp_a,ipx_a_id,jwe_tag_48,ipx_a_privkey)) in
    let combineAAD(source_addr_16: bitstring,destination_addr_16: bitstring,msg_type_18: bitstring,nonconf_16: bitstring,msg_id_20: nat,=ipx_a_id,n32f_context_20: bitstring) = dataToIntegrityProtect_12 in
    let modified_message_10: modprins = prins''(jwe_headers_12,iv_10,dataToIntegrityProtect_12,dataToIntegrityProtectAndCipher_12,jwe_tag_48,modifications_10,EMPTY) in
    event ipxSendA(n32f_context_20,msg_id_20,jwe_tag_48,modifications_10);
    out(n32f_i, (sepp_b_addr_10,modified_message_10))
) | (
    sync 4[@_3392, a_25, c_25, ()];
    !
    in(n32f_i, (sepp_b_addr_11: bitstring,prins_message_11: modprins));
    let prins''(jwe_headers_13: bitstring,iv_11: bitstring,dataToIntegrityProtect_13: aad,dataToIntegrityProtectAndCipher_13: bitstring,jwe_tag_49: mac,ipx_a_mods_4: ipxmod,=EMPTY) = prins_message_11 in
    let modifications_11: ipxmod = jsonPatch(modp_b,ipx_b_id,jwe_tag_49,signPrinsMod(prins_message_11,modp_b,ipx_b_id,jwe_tag_49,ipx_b_privkey)) in
    let combineAAD(source_addr_17: bitstring,destination_addr_17: bitstring,msg_type_19: bitstring,nonconf_17: bitstring,msg_id_21: nat,auth_ipx_id_10: bitstring,n32f_context_21: bitstring) = dataToIntegrityProtect_13 in
    let modified_message_11: modprins = prins''(jwe_headers_13,iv_11,dataToIntegrityProtect_13,dataToIntegrityProtectAndCipher_13,jwe_tag_49,ipx_a_mods_4,modifications_11) in
    event ipxRecvB(n32f_context_21,msg_id_21,jwe_tag_49,modifications_11);
    out(n32f_b, (sepp_b_addr_11,modified_message_11))
) | (
    sync 4[@_3389, a_26, c_26, ()];
    !
    in(n32f_b, (sepp_a_addr_12: bitstring,prins_message_12: prins));
    let prins'(jwe_headers_14: bitstring,iv_12: bitstring,dataToIntegrityProtect_14: aad,dataToIntegrityProtectAndCipher_14: bitstring,jwe_tag_50: mac) = prins_message_12 in
    let modifications_12: ipxmod = jsonPatch(modp_b,ipx_b_id,jwe_tag_50,signPrins(prins_message_12,modp_b,ipx_b_id,jwe_tag_50,ipx_b_privkey)) in
    let combineAAD(source_addr_18: bitstring,destination_addr_18: bitstring,msg_type_20: bitstring,nonconf_18: bitstring,msg_id_22: nat,=ipx_b_id,n32f_context_22: bitstring) = dataToIntegrityProtect_14 in
    let modified_message_12: modprins = prins''(jwe_headers_14,iv_12,dataToIntegrityProtect_14,dataToIntegrityProtectAndCipher_14,jwe_tag_50,modifications_12,EMPTY) in
    event ipxSendB(n32f_context_22,msg_id_22,jwe_tag_50,modifications_12);
    out(n32f_i, (sepp_a_addr_12,modified_message_12));
    out(n32f_i, modifications_12)
) | (
    sync 4[@_3386, a_27, c_27, ()];
    !
    in(n32f_i, (sepp_a_addr_13: bitstring,prins_message_13: modprins));
    let prins''(jwe_headers_15: bitstring,iv_13: bitstring,dataToIntegrityProtect_15: aad,dataToIntegrityProtectAndCipher_15: bitstring,jwe_tag_51: mac,ipx_b_mods_7: ipxmod,=EMPTY) = prins_message_13 in
    let modifications_13: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_51,signPrinsMod(prins_message_13,modp_a,ipx_a_id,jwe_tag_51,ipx_a_privkey)) in
    let combineAAD(source_addr_19: bitstring,destination_addr_19: bitstring,msg_type_21: bitstring,nonconf_19: bitstring,msg_id_23: nat,auth_ipx_id_11: bitstring,n32f_context_23: bitstring) = dataToIntegrityProtect_15 in
    let modified_message_13: modprins = prins''(jwe_headers_15,iv_13,dataToIntegrityProtect_15,dataToIntegrityProtectAndCipher_15,jwe_tag_51,EMPTY,modifications_13) in
    event ipxRecvR1(n32f_context_23,msg_id_23,jwe_tag_51,modifications_13);
    out(n32f_a, (sepp_a_addr_13,modified_message_13))
) | (
    sync 4[@_3383, a_28, c_28, ()];
    !
    in(n32f_a, (sepp_b_addr_12: bitstring,prins_message_14: prins));
    let prins'(jwe_headers_16: bitstring,iv_14: bitstring,dataToIntegrityProtect_16: aad,dataToIntegrityProtectAndCipher_16: bitstring,jwe_tag_52: mac) = prins_message_14 in
    let modifications_14: ipxmod = jsonPatch(modp_r1,ipx_a_id,jwe_tag_52,signPrins(prins_message_14,modp_r1,ipx_a_id,jwe_tag_52,ipx_a_privkey)) in
    let combineAAD(source_addr_20: bitstring,destination_addr_20: bitstring,msg_type_22: bitstring,nonconf_20: bitstring,msg_id_24: nat,auth_ipx_id_12: bitstring,n32f_context_24: bitstring) = dataToIntegrityProtect_16 in
    let modified_message_14: modprins = prins''(jwe_headers_16,iv_14,dataToIntegrityProtect_16,dataToIntegrityProtectAndCipher_16,jwe_tag_52,modifications_14,EMPTY) in
    event ipxSendR1(n32f_context_24,msg_id_24,jwe_tag_52,modifications_14);
    out(n32f_i, (sepp_b_addr_12,modified_message_14))
) | (
    sync 4[@_3380, a_29, c_29, ()];
    !
    in(n32f_i, (sepp_a_addr_14: bitstring,prins_message_15: modprins));
    let prins''(jwe_headers_17: bitstring,iv_15: bitstring,dataToIntegrityProtect_17: aad,dataToIntegrityProtectAndCipher_17: bitstring,jwe_tag_53: mac,ipx_b_mods_8: ipxmod,=EMPTY) = prins_message_15 in
    let modifications_15: ipxmod = jsonPatch(modp_a,ipx_r2_id,jwe_tag_53,signPrinsMod(prins_message_15,modp_a,ipx_r2_id,jwe_tag_53,ipx_r2_privkey)) in
    let combineAAD(source_addr_21: bitstring,destination_addr_21: bitstring,msg_type_23: bitstring,nonconf_21: bitstring,msg_id_25: nat,auth_ipx_id_13: bitstring,n32f_context_25: bitstring) = dataToIntegrityProtect_17 in
    let modified_message_15: modprins = prins''(jwe_headers_17,iv_15,dataToIntegrityProtect_17,dataToIntegrityProtectAndCipher_17,jwe_tag_53,EMPTY,modifications_15) in
    event ipxRecvR2(n32f_context_25,msg_id_25,jwe_tag_53,modifications_15);
    out(n32f_a, (sepp_a_addr_14,modified_message_15))
) | (
    sync 4[@_3377, a_30, c_30, ()];
    !
    in(n32f_a, (sepp_b_addr_13: bitstring,prins_message_16: prins));
    let prins'(jwe_headers_18: bitstring,iv_16: bitstring,dataToIntegrityProtect_18: aad,dataToIntegrityProtectAndCipher_18: bitstring,jwe_tag_54: mac) = prins_message_16 in
    let modifications_16: ipxmod = jsonPatch(modp_a,ipx_r2_id,jwe_tag_54,signPrins(prins_message_16,modp_a,ipx_r2_id,jwe_tag_54,ipx_r2_privkey)) in
    let combineAAD(source_addr_22: bitstring,destination_addr_22: bitstring,msg_type_24: bitstring,nonconf_22: bitstring,msg_id_26: nat,auth_ipx_id_14: bitstring,n32f_context_26: bitstring) = dataToIntegrityProtect_18 in
    let modified_message_16: modprins = prins''(jwe_headers_18,iv_16,dataToIntegrityProtect_18,dataToIntegrityProtectAndCipher_18,jwe_tag_54,modifications_16,EMPTY) in
    event ipxSendR2(n32f_context_26,msg_id_26,jwe_tag_54,modifications_16);
    out(n32f_i, (sepp_b_addr_13,modified_message_16))
) | (
    sync 4[@_3374, a_31, c_31, ()];
    !
    in(n32f_i, (sepp_a_addr_15: bitstring,prins_message_17: modprins));
    in(n32f_i, modifications_17: ipxmod);
    let prins''(jwe_headers_19: bitstring,iv_17: bitstring,dataToIntegrityProtect_19: aad,dataToIntegrityProtectAndCipher_19: bitstring,jwe_tag_55: mac,ipx_b_mods_9: ipxmod,ipx_a_mods_5: ipxmod) = prins_message_17 in
    let combineAAD(source_addr_23: bitstring,destination_addr_23: bitstring,msg_type_25: bitstring,nonconf_23: bitstring,msg_id_27: nat,auth_ipx_id_15: bitstring,n32f_context_27: bitstring) = dataToIntegrityProtect_19 in
    let modified_message_17: modprins = prins''(jwe_headers_19,iv_17,dataToIntegrityProtect_19,dataToIntegrityProtectAndCipher_19,jwe_tag_55,ipx_b_mods_9,modifications_17) in
    event ipxRecvR3(n32f_context_27,msg_id_27,jwe_tag_55,modifications_17);
    out(n32f_a, (sepp_a_addr_15,modified_message_17))
) | (
    sync 5[@_3371, a_32, c_32, ()];
    !
    in(n32f_a, (=sepp_a_addr,prins_messsage_2: modprins));
    let prins''(jwe_headers_20: bitstring,nonce_56: bitstring,dataToIntegrityProtect_20: aad,dataToIntegrityProtectAndCipher_20: bitstring,jwe_tag_56: mac,ipx_b_mods_10: ipxmod,ipx_a_mods_6: ipxmod) = prins_messsage_2 in
    let combineAAD(source_addr_24: bitstring,destination_addr_24: bitstring,msg_type_26: bitstring,nonconf_24: bitstring,msg_id_28: nat,auth_ipx_id_16: bitstring,n32f_context'_6: bitstring) = dataToIntegrityProtect_20 in
    event recvN32fMsgSeppA(n32f_context'_6,msg_id_28,dataToIntegrityProtectAndCipher_20,dataToIntegrityProtect_20);
    get storeSeppA(sepp_b_plmn_6: bitstring,sepp_b_addr_14: bitstring,n32f_context_28: bitstring,msg_cnt_a_7: nat,par_req_key_a_8: key,par_res_key_a_8: key,rev_req_key_a_8: key,rev_res_key_a_8: key,par_req_iv_a_7: bitstring,par_res_iv_a_7: bitstring,rev_req_iv_a_7: bitstring,rev_res_iv_a_7: bitstring,ciphers_a_6: bitstring,encp_a_5: bitstring,modp_a_13: bitstring,modp_b_13: bitstring,ipx_a_id_13: bitstring,ipx_a_key_12: pubkey,ipx_b_id_13: bitstring,ipx_b_key_12: pubkey) suchthat (n32f_context'_6 = n32f_context_28) in
    let v_24: bool = (msg_type_26 = REQ) in
    (
        if v_24 then
        (
            let key_19: key = rev_req_key_a_8 in
            let v_25: bool = (msg_type_26 = REQ) in
            (
                if v_25 then
                (
                    let nonce_57: bitstring = deriveNonce(rev_req_iv_a_7,msg_id_28) in
                    let conf_23: bitstring = aeadDecrypt(key_19,nonce_57,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                    let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_18: bitstring) = ipx_b_mods_10 in
                    if not(validPrinsSign(ipx_b_jws_18,ipx_b_key_12)) then
                        event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        out(err_a, (n32f_context_28,msg_id_28))
                    else
                        event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_18: bitstring) = ipx_a_mods_6 in
                        if not(validPrinsModSign(ipx_a_jws_18,ipx_a_key_12)) then
                            event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            out(err_a, (n32f_context_28,msg_id_28))
                        else
                            event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            if (validPrinsModSign(ipx_a_jws_18,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_18,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                            let msg_body_26: bitstring = applyPatches((conf_23,nonconf_24),modp_b_13,modp_a_13) in
                            let http_message_24: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_26) in
                            event sendHttpMsgSeppA(msg_type_26,msg_body_26);
                            out(plmn_a, (RECV,http_message_24))
                )
                else
                    let nonce_58: bitstring = deriveNonce(rev_res_iv_a_7,msg_id_28) in
                    let conf_24: bitstring = aeadDecrypt(key_19,nonce_58,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                    let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_19: bitstring) = ipx_b_mods_10 in
                    if not(validPrinsSign(ipx_b_jws_19,ipx_b_key_12)) then
                        event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        out(err_a, (n32f_context_28,msg_id_28))
                    else
                        event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_19: bitstring) = ipx_a_mods_6 in
                        if not(validPrinsModSign(ipx_a_jws_19,ipx_a_key_12)) then
                            event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            out(err_a, (n32f_context_28,msg_id_28))
                        else
                            event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            if (validPrinsModSign(ipx_a_jws_19,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_19,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                            let msg_body_27: bitstring = applyPatches((conf_24,nonconf_24),modp_b_13,modp_a_13) in
                            let http_message_25: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_27) in
                            event sendHttpMsgSeppA(msg_type_26,msg_body_27);
                            out(plmn_a, (RECV,http_message_25))
            )
            else
                let nonce_59: bitstring = fail-any in
                let conf_25: bitstring = aeadDecrypt(key_19,nonce_59,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_20: bitstring) = ipx_b_mods_10 in
                if not(validPrinsSign(ipx_b_jws_20,ipx_b_key_12)) then
                    event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    out(err_a, (n32f_context_28,msg_id_28))
                else
                    event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_20: bitstring) = ipx_a_mods_6 in
                    if not(validPrinsModSign(ipx_a_jws_20,ipx_a_key_12)) then
                        event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        out(err_a, (n32f_context_28,msg_id_28))
                    else
                        event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        if (validPrinsModSign(ipx_a_jws_20,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_20,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                        let msg_body_28: bitstring = applyPatches((conf_25,nonconf_24),modp_b_13,modp_a_13) in
                        let http_message_26: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_28) in
                        event sendHttpMsgSeppA(msg_type_26,msg_body_28);
                        out(plmn_a, (RECV,http_message_26))
        )
        else
            let key_20: key = rev_res_key_a_8 in
            let v_26: bool = (msg_type_26 = REQ) in
            (
                if v_26 then
                (
                    let nonce_60: bitstring = deriveNonce(rev_req_iv_a_7,msg_id_28) in
                    let conf_26: bitstring = aeadDecrypt(key_20,nonce_60,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                    let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_21: bitstring) = ipx_b_mods_10 in
                    if not(validPrinsSign(ipx_b_jws_21,ipx_b_key_12)) then
                        event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        out(err_a, (n32f_context_28,msg_id_28))
                    else
                        event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_21: bitstring) = ipx_a_mods_6 in
                        if not(validPrinsModSign(ipx_a_jws_21,ipx_a_key_12)) then
                            event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            out(err_a, (n32f_context_28,msg_id_28))
                        else
                            event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            if (validPrinsModSign(ipx_a_jws_21,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_21,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                            let msg_body_29: bitstring = applyPatches((conf_26,nonconf_24),modp_b_13,modp_a_13) in
                            let http_message_27: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_29) in
                            event sendHttpMsgSeppA(msg_type_26,msg_body_29);
                            out(plmn_a, (RECV,http_message_27))
                )
                else
                    let nonce_61: bitstring = deriveNonce(rev_res_iv_a_7,msg_id_28) in
                    let conf_27: bitstring = aeadDecrypt(key_20,nonce_61,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                    let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_22: bitstring) = ipx_b_mods_10 in
                    if not(validPrinsSign(ipx_b_jws_22,ipx_b_key_12)) then
                        event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        out(err_a, (n32f_context_28,msg_id_28))
                    else
                        event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_22: bitstring) = ipx_a_mods_6 in
                        if not(validPrinsModSign(ipx_a_jws_22,ipx_a_key_12)) then
                            event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            out(err_a, (n32f_context_28,msg_id_28))
                        else
                            event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            if (validPrinsModSign(ipx_a_jws_22,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_22,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                            let msg_body_30: bitstring = applyPatches((conf_27,nonconf_24),modp_b_13,modp_a_13) in
                            let http_message_28: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_30) in
                            event sendHttpMsgSeppA(msg_type_26,msg_body_30);
                            out(plmn_a, (RECV,http_message_28))
            )
            else
                let nonce_62: bitstring = fail-any in
                let conf_28: bitstring = aeadDecrypt(key_20,nonce_62,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_23: bitstring) = ipx_b_mods_10 in
                if not(validPrinsSign(ipx_b_jws_23,ipx_b_key_12)) then
                    event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    out(err_a, (n32f_context_28,msg_id_28))
                else
                    event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_23: bitstring) = ipx_a_mods_6 in
                    if not(validPrinsModSign(ipx_a_jws_23,ipx_a_key_12)) then
                        event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        out(err_a, (n32f_context_28,msg_id_28))
                    else
                        event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        if (validPrinsModSign(ipx_a_jws_23,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_23,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                        let msg_body_31: bitstring = applyPatches((conf_28,nonconf_24),modp_b_13,modp_a_13) in
                        let http_message_29: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_31) in
                        event sendHttpMsgSeppA(msg_type_26,msg_body_31);
                        out(plmn_a, (RECV,http_message_29))
    )
    else
        let key_21: key = fail-any in
        let v_27: bool = (msg_type_26 = REQ) in
        (
            if v_27 then
            (
                let nonce_63: bitstring = deriveNonce(rev_req_iv_a_7,msg_id_28) in
                let conf_29: bitstring = aeadDecrypt(key_21,nonce_63,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_24: bitstring) = ipx_b_mods_10 in
                if not(validPrinsSign(ipx_b_jws_24,ipx_b_key_12)) then
                    event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    out(err_a, (n32f_context_28,msg_id_28))
                else
                    event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_24: bitstring) = ipx_a_mods_6 in
                    if not(validPrinsModSign(ipx_a_jws_24,ipx_a_key_12)) then
                        event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        out(err_a, (n32f_context_28,msg_id_28))
                    else
                        event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        if (validPrinsModSign(ipx_a_jws_24,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_24,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                        let msg_body_32: bitstring = applyPatches((conf_29,nonconf_24),modp_b_13,modp_a_13) in
                        let http_message_30: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_32) in
                        event sendHttpMsgSeppA(msg_type_26,msg_body_32);
                        out(plmn_a, (RECV,http_message_30))
            )
            else
                let nonce_64: bitstring = deriveNonce(rev_res_iv_a_7,msg_id_28) in
                let conf_30: bitstring = aeadDecrypt(key_21,nonce_64,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_25: bitstring) = ipx_b_mods_10 in
                if not(validPrinsSign(ipx_b_jws_25,ipx_b_key_12)) then
                    event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    out(err_a, (n32f_context_28,msg_id_28))
                else
                    event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_25: bitstring) = ipx_a_mods_6 in
                    if not(validPrinsModSign(ipx_a_jws_25,ipx_a_key_12)) then
                        event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        out(err_a, (n32f_context_28,msg_id_28))
                    else
                        event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        if (validPrinsModSign(ipx_a_jws_25,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_25,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                        let msg_body_33: bitstring = applyPatches((conf_30,nonconf_24),modp_b_13,modp_a_13) in
                        let http_message_31: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_33) in
                        event sendHttpMsgSeppA(msg_type_26,msg_body_33);
                        out(plmn_a, (RECV,http_message_31))
        )
        else
            let nonce_65: bitstring = fail-any in
            let conf_31: bitstring = aeadDecrypt(key_21,nonce_65,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
            let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_26: bitstring) = ipx_b_mods_10 in
            if not(validPrinsSign(ipx_b_jws_26,ipx_b_key_12)) then
                event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                out(err_a, (n32f_context_28,msg_id_28))
            else
                event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_26: bitstring) = ipx_a_mods_6 in
                if not(validPrinsModSign(ipx_a_jws_26,ipx_a_key_12)) then
                    event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                    out(err_a, (n32f_context_28,msg_id_28))
                else
                    event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                    if (validPrinsModSign(ipx_a_jws_26,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_26,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                    let msg_body_34: bitstring = applyPatches((conf_31,nonconf_24),modp_b_13,modp_a_13) in
                    let http_message_32: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_34) in
                    event sendHttpMsgSeppA(msg_type_26,msg_body_34);
                    out(plmn_a, (RECV,http_message_32))
) | (
    sync 5[@_3368, a_33, c_33, ()];
    !
    in(n32f_b, (=sepp_b_addr,prins_messsage_3: modprins));
    let prins''(jwe_headers_21: bitstring,nonce_66: bitstring,dataToIntegrityProtect_21: aad,dataToIntegrityProtectAndCipher_21: bitstring,jwe_tag_57: mac,ipx_a_mods_7: ipxmod,ipx_b_mods_11: ipxmod) = prins_messsage_3 in
    let combineAAD(source_addr_25: bitstring,destination_addr_25: bitstring,msg_type_27: bitstring,nonconf_25: bitstring,msg_id_29: nat,auth_ipx_id_17: bitstring,n32f_context'_7: bitstring) = dataToIntegrityProtect_21 in
    event recvN32fMsgSeppB(n32f_context'_7,msg_id_29,dataToIntegrityProtectAndCipher_21,dataToIntegrityProtect_21);
    get storeSeppB(sepp_a_plmn_6: bitstring,sepp_a_addr_16: bitstring,n32f_context_29: bitstring,msg_cnt_b_7: nat,par_req_key_b_8: key,par_res_key_b_8: key,rev_req_key_b_8: key,rev_res_key_b_8: key,par_req_iv_b_7: bitstring,par_res_iv_b_7: bitstring,rev_req_iv_b_7: bitstring,rev_res_iv_b_7: bitstring,ciphers_b_6: bitstring,encp_b_5: bitstring,modp_b_14: bitstring,modp_a_14: bitstring,ipx_b_id_14: bitstring,ipx_b_key_13: pubkey,ipx_a_id_14: bitstring,ipx_a_key_13: pubkey) suchthat (n32f_context'_7 = n32f_context_29) in
    let v_28: bool = (msg_type_27 = REQ) in
    (
        if v_28 then
        (
            let key_22: key = rev_req_key_b_8 in
            let v_29: bool = (msg_type_27 = REQ) in
            (
                if v_29 then
                (
                    let nonce_67: bitstring = deriveNonce(rev_req_iv_b_7,msg_id_29) in
                    let conf_32: bitstring = aeadDecrypt(key_22,nonce_67,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                    let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_27: bitstring) = ipx_a_mods_7 in
                    if not(validPrinsSign(ipx_a_jws_27,ipx_a_key_13)) then
                        event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        out(err_b, (n32f_context_29,msg_id_29))
                    else
                        event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_27: bitstring) = ipx_b_mods_11 in
                        if not(validPrinsModSign(ipx_b_jws_27,ipx_b_key_13)) then
                            event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            out(err_b, (n32f_context_29,msg_id_29))
                        else
                            event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            if (validPrinsSign(ipx_a_jws_27,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_27,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                            let msg_body_35: bitstring = applyPatches((conf_32,nonconf_25),modp_a_14,modp_b_14) in
                            let http_message_33: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_35) in
                            event sendHttpMsgSeppB(msg_type_27,msg_body_35);
                            out(plmn_b, (RECV,http_message_33))
                )
                else
                    let nonce_68: bitstring = deriveNonce(rev_res_iv_b_7,msg_id_29) in
                    let conf_33: bitstring = aeadDecrypt(key_22,nonce_68,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                    let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_28: bitstring) = ipx_a_mods_7 in
                    if not(validPrinsSign(ipx_a_jws_28,ipx_a_key_13)) then
                        event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        out(err_b, (n32f_context_29,msg_id_29))
                    else
                        event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_28: bitstring) = ipx_b_mods_11 in
                        if not(validPrinsModSign(ipx_b_jws_28,ipx_b_key_13)) then
                            event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            out(err_b, (n32f_context_29,msg_id_29))
                        else
                            event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            if (validPrinsSign(ipx_a_jws_28,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_28,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                            let msg_body_36: bitstring = applyPatches((conf_33,nonconf_25),modp_a_14,modp_b_14) in
                            let http_message_34: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_36) in
                            event sendHttpMsgSeppB(msg_type_27,msg_body_36);
                            out(plmn_b, (RECV,http_message_34))
            )
            else
                let nonce_69: bitstring = fail-any in
                let conf_34: bitstring = aeadDecrypt(key_22,nonce_69,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_29: bitstring) = ipx_a_mods_7 in
                if not(validPrinsSign(ipx_a_jws_29,ipx_a_key_13)) then
                    event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    out(err_b, (n32f_context_29,msg_id_29))
                else
                    event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_29: bitstring) = ipx_b_mods_11 in
                    if not(validPrinsModSign(ipx_b_jws_29,ipx_b_key_13)) then
                        event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        out(err_b, (n32f_context_29,msg_id_29))
                    else
                        event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        if (validPrinsSign(ipx_a_jws_29,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_29,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                        let msg_body_37: bitstring = applyPatches((conf_34,nonconf_25),modp_a_14,modp_b_14) in
                        let http_message_35: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_37) in
                        event sendHttpMsgSeppB(msg_type_27,msg_body_37);
                        out(plmn_b, (RECV,http_message_35))
        )
        else
            let key_23: key = rev_res_key_b_8 in
            let v_30: bool = (msg_type_27 = REQ) in
            (
                if v_30 then
                (
                    let nonce_70: bitstring = deriveNonce(rev_req_iv_b_7,msg_id_29) in
                    let conf_35: bitstring = aeadDecrypt(key_23,nonce_70,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                    let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_30: bitstring) = ipx_a_mods_7 in
                    if not(validPrinsSign(ipx_a_jws_30,ipx_a_key_13)) then
                        event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        out(err_b, (n32f_context_29,msg_id_29))
                    else
                        event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_30: bitstring) = ipx_b_mods_11 in
                        if not(validPrinsModSign(ipx_b_jws_30,ipx_b_key_13)) then
                            event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            out(err_b, (n32f_context_29,msg_id_29))
                        else
                            event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            if (validPrinsSign(ipx_a_jws_30,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_30,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                            let msg_body_38: bitstring = applyPatches((conf_35,nonconf_25),modp_a_14,modp_b_14) in
                            let http_message_36: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_38) in
                            event sendHttpMsgSeppB(msg_type_27,msg_body_38);
                            out(plmn_b, (RECV,http_message_36))
                )
                else
                    let nonce_71: bitstring = deriveNonce(rev_res_iv_b_7,msg_id_29) in
                    let conf_36: bitstring = aeadDecrypt(key_23,nonce_71,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                    let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_31: bitstring) = ipx_a_mods_7 in
                    if not(validPrinsSign(ipx_a_jws_31,ipx_a_key_13)) then
                        event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        out(err_b, (n32f_context_29,msg_id_29))
                    else
                        event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_31: bitstring) = ipx_b_mods_11 in
                        if not(validPrinsModSign(ipx_b_jws_31,ipx_b_key_13)) then
                            event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            out(err_b, (n32f_context_29,msg_id_29))
                        else
                            event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            if (validPrinsSign(ipx_a_jws_31,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_31,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                            let msg_body_39: bitstring = applyPatches((conf_36,nonconf_25),modp_a_14,modp_b_14) in
                            let http_message_37: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_39) in
                            event sendHttpMsgSeppB(msg_type_27,msg_body_39);
                            out(plmn_b, (RECV,http_message_37))
            )
            else
                let nonce_72: bitstring = fail-any in
                let conf_37: bitstring = aeadDecrypt(key_23,nonce_72,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_32: bitstring) = ipx_a_mods_7 in
                if not(validPrinsSign(ipx_a_jws_32,ipx_a_key_13)) then
                    event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    out(err_b, (n32f_context_29,msg_id_29))
                else
                    event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_32: bitstring) = ipx_b_mods_11 in
                    if not(validPrinsModSign(ipx_b_jws_32,ipx_b_key_13)) then
                        event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        out(err_b, (n32f_context_29,msg_id_29))
                    else
                        event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        if (validPrinsSign(ipx_a_jws_32,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_32,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                        let msg_body_40: bitstring = applyPatches((conf_37,nonconf_25),modp_a_14,modp_b_14) in
                        let http_message_38: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_40) in
                        event sendHttpMsgSeppB(msg_type_27,msg_body_40);
                        out(plmn_b, (RECV,http_message_38))
    )
    else
        let key_24: key = fail-any in
        let v_31: bool = (msg_type_27 = REQ) in
        (
            if v_31 then
            (
                let nonce_73: bitstring = deriveNonce(rev_req_iv_b_7,msg_id_29) in
                let conf_38: bitstring = aeadDecrypt(key_24,nonce_73,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_33: bitstring) = ipx_a_mods_7 in
                if not(validPrinsSign(ipx_a_jws_33,ipx_a_key_13)) then
                    event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    out(err_b, (n32f_context_29,msg_id_29))
                else
                    event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_33: bitstring) = ipx_b_mods_11 in
                    if not(validPrinsModSign(ipx_b_jws_33,ipx_b_key_13)) then
                        event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        out(err_b, (n32f_context_29,msg_id_29))
                    else
                        event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        if (validPrinsSign(ipx_a_jws_33,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_33,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                        let msg_body_41: bitstring = applyPatches((conf_38,nonconf_25),modp_a_14,modp_b_14) in
                        let http_message_39: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_41) in
                        event sendHttpMsgSeppB(msg_type_27,msg_body_41);
                        out(plmn_b, (RECV,http_message_39))
            )
            else
                let nonce_74: bitstring = deriveNonce(rev_res_iv_b_7,msg_id_29) in
                let conf_39: bitstring = aeadDecrypt(key_24,nonce_74,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_34: bitstring) = ipx_a_mods_7 in
                if not(validPrinsSign(ipx_a_jws_34,ipx_a_key_13)) then
                    event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    out(err_b, (n32f_context_29,msg_id_29))
                else
                    event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_34: bitstring) = ipx_b_mods_11 in
                    if not(validPrinsModSign(ipx_b_jws_34,ipx_b_key_13)) then
                        event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        out(err_b, (n32f_context_29,msg_id_29))
                    else
                        event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        if (validPrinsSign(ipx_a_jws_34,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_34,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                        let msg_body_42: bitstring = applyPatches((conf_39,nonconf_25),modp_a_14,modp_b_14) in
                        let http_message_40: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_42) in
                        event sendHttpMsgSeppB(msg_type_27,msg_body_42);
                        out(plmn_b, (RECV,http_message_40))
        )
        else
            let nonce_75: bitstring = fail-any in
            let conf_40: bitstring = aeadDecrypt(key_24,nonce_75,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
            let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_35: bitstring) = ipx_a_mods_7 in
            if not(validPrinsSign(ipx_a_jws_35,ipx_a_key_13)) then
                event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                out(err_b, (n32f_context_29,msg_id_29))
            else
                event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_35: bitstring) = ipx_b_mods_11 in
                if not(validPrinsModSign(ipx_b_jws_35,ipx_b_key_13)) then
                    event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                    out(err_b, (n32f_context_29,msg_id_29))
                else
                    event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                    if (validPrinsSign(ipx_a_jws_35,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_35,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                    let msg_body_43: bitstring = applyPatches((conf_40,nonconf_25),modp_a_14,modp_b_14) in
                    let http_message_41: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_43) in
                    event sendHttpMsgSeppB(msg_type_27,msg_body_43);
                    out(plmn_b, (RECV,http_message_41))
) | (
    sync 5[@_3365, a_34, c_34, ()];
    !
    in(plmn_a, (=RECV,msg_2: http));
    let createHttp(nf_b_addr_2: bitstring,=nf_a_addr,msg_type_28: bitstring,msg_body_44: bitstring) = msg_2 in
    if (msg_type_28 = REQ) then
        event sendHttpMsgNfA(RES,msg_body_44);
        out(plmn_a, (SEND,createHttp(nf_a_addr,nf_b_addr_2,RES,msg_body_44)))
    else
        event recvHttpMsgNfA(RES,msg_body_44)
) | (
    sync 5[@_3362, a_35, c_35, ()];
    !
    in(plmn_b, (=RECV,msg_3: http));
    let createHttp(nf_a_addr_2: bitstring,=nf_b_addr,msg_type_29: bitstring,msg_body_45: bitstring) = msg_3 in
    if (msg_type_29 = REQ) then
        event sendHttpMsgNfB(RES,msg_body_45);
        out(plmn_b, (SEND,createHttp(nf_b_addr,nf_a_addr_2,RES,msg_body_45)))
    else
        event recvHttpMsgNfB(RES,msg_body_45)
) | (
    sync 5[@_3359, a_36, c_36, ()];
    !
    in(err_a, (n32f_context'_8: bitstring,msg_id_30: nat));
    get storeSeppA(sepp_b_plmn_7: bitstring,sepp_b_addr_15: bitstring,n32f_context_30: bitstring,msg_cnt_a_8: nat,par_req_key_a_9: key,par_res_key_a_9: key,rev_req_key_a_9: key,rev_res_key_a_9: key,par_req_iv_a_8: bitstring,par_res_iv_a_8: bitstring,rev_req_iv_a_8: bitstring,rev_res_iv_a_8: bitstring,ciphers_a_7: bitstring,encp_a_6: bitstring,modp_a_15: bitstring,modp_b_15: bitstring,ipx_a_id_15: bitstring,ipx_a_key_14: pubkey,ipx_b_id_15: bitstring,ipx_b_key_14: pubkey) suchthat (n32f_context'_8 = n32f_context_30) in
    out(n32c_a, (sepp_b_addr_15,n32f_context_30,msg_id_30));
    in(n32c_a, (=sepp_a_addr,=n32f_context_30,=msg_id_30,status_code_2: bitstring));
    event sendErrorSeppA(n32f_context_30,msg_id_30,status_code_2)
) | (
    sync 5[@_3356, a_37, c_37, ()];
    !
    in(n32c_b, (=sepp_a_addr,n32f_context'_9: bitstring,msg_id_31: nat));
    get storeSeppA(sepp_b_plmn_8: bitstring,sepp_b_addr_16: bitstring,n32f_context_31: bitstring,msg_cnt_a_9: nat,par_req_key_a_10: key,par_res_key_a_10: key,rev_req_key_a_10: key,rev_res_key_a_10: key,par_req_iv_a_9: bitstring,par_res_iv_a_9: bitstring,rev_req_iv_a_9: bitstring,rev_res_iv_a_9: bitstring,ciphers_a_8: bitstring,encp_a_7: bitstring,modp_a_16: bitstring,modp_b_16: bitstring,ipx_a_id_16: bitstring,ipx_a_key_15: pubkey,ipx_b_id_16: bitstring,ipx_b_key_15: pubkey) suchthat (n32f_context'_9 = n32f_context_31) in
    if (msg_id_31 ≤ msg_cnt_a_9) then
        out(n32c_b, (sepp_b_addr_16,n32f_context_31,msg_id_31,SUCC));
        event recvErrorSeppA(n32f_context_31,msg_id_31,SUCC)
    else
        out(n32c_b, (sepp_b_addr_16,n32f_context_31,msg_id_31,FAIL));
        event recvErrorSeppA(n32f_context_31,msg_id_31,FAIL)
) | (
    sync 5[@_3353, a_38, c_38, ()];
    !
    in(err_b, (n32f_context'_10: bitstring,msg_id_32: nat));
    get storeSeppB(sepp_a_plmn_7: bitstring,sepp_a_addr_17: bitstring,n32f_context_32: bitstring,msg_cnt_b_8: nat,par_req_key_b_9: key,par_res_key_b_9: key,rev_req_key_b_9: key,rev_res_key_b_9: key,par_req_iv_b_8: bitstring,par_res_iv_b_8: bitstring,rev_req_iv_b_8: bitstring,rev_res_iv_b_8: bitstring,ciphers_b_7: bitstring,encp_b_6: bitstring,modp_b_17: bitstring,modp_a_17: bitstring,ipx_b_id_17: bitstring,ipx_b_key_16: pubkey,ipx_a_id_17: bitstring,ipx_a_key_16: pubkey) suchthat (n32f_context'_10 = n32f_context_32) in
    out(n32c_b, (sepp_a_addr_17,n32f_context_32,msg_id_32));
    in(n32c_b, (=sepp_b_addr,=n32f_context_32,=msg_id_32,status_code_3: bitstring));
    event sendErrorSeppB(n32f_context_32,msg_id_32,status_code_3)
) | (
    sync 5[@_3350, a_39, c_39, ()];
    !
    in(n32c_a, (=sepp_b_addr,n32f_context'_11: bitstring,msg_id_33: nat));
    get storeSeppB(sepp_a_plmn_8: bitstring,sepp_a_addr_18: bitstring,n32f_context_33: bitstring,msg_cnt_b_9: nat,par_req_key_b_10: key,par_res_key_b_10: key,rev_req_key_b_10: key,rev_res_key_b_10: key,par_req_iv_b_9: bitstring,par_res_iv_b_9: bitstring,rev_req_iv_b_9: bitstring,rev_res_iv_b_9: bitstring,ciphers_b_8: bitstring,encp_b_7: bitstring,modp_b_18: bitstring,modp_a_18: bitstring,ipx_b_id_18: bitstring,ipx_b_key_17: pubkey,ipx_a_id_18: bitstring,ipx_a_key_17: pubkey) suchthat (n32f_context'_11 = n32f_context_33) in
    if (msg_id_33 ≤ msg_cnt_b_9) then
        out(n32c_a, (sepp_a_addr_18,n32f_context_33,msg_id_33,SUCC));
        event recvErrorSeppB(n32f_context_33,msg_id_33,SUCC)
    else
        out(n32c_a, (sepp_a_addr_18,n32f_context_33,msg_id_33,FAIL));
        event recvErrorSeppB(n32f_context_33,msg_id_33,FAIL)
)
-- After compilation of barriers
Process 1 (that is, process 0, with barriers compiled without swapping):
(
    {1}new ciphersuites: bitstring;
    {2}new encp: bitstring;
    {3}out(n32f_i, encp);
    {4}new modp_a: bitstring;
    {5}out(n32f_i, modp_a);
    {6}new modp_b: bitstring;
    {7}out(n32f_i, modp_b);
    {8}new modp_r1: bitstring;
    {9}out(n32f_i, modp_r1);
    {10}new nf_a_addr: bitstring;
    {11}out(n32f_i, nf_a_addr);
    {12}new nf_b_addr: bitstring;
    {13}out(n32f_i, nf_b_addr);
    {14}new sepp_a_plmn: bitstring;
    {15}out(n32f_i, sepp_a_plmn);
    {16}new sepp_b_plmn: bitstring;
    {17}out(n32f_i, sepp_b_plmn);
    {18}new sepp_a_addr: bitstring;
    {19}out(n32f_i, sepp_a_addr);
    {20}new sepp_b_addr: bitstring;
    {21}out(n32f_i, sepp_b_addr);
    {22}new ipx_a_id: bitstring;
    {23}out(n32f_i, ipx_a_id);
    {24}new ipx_b_id: bitstring;
    {25}out(n32f_i, ipx_b_id);
    {26}new ipx_r2_id: bitstring;
    {27}out(n32f_i, ipx_r2_id);
    {28}new ipx_a_privkey: privkey;
    {29}new ipx_b_privkey: privkey;
    {30}new ipx_r2_privkey: privkey;
    {31}let ipx_a_pubkey: pubkey = pk(ipx_a_privkey) in
    {32}out(n32f_a, ipx_a_pubkey);
    {33}let ipx_b_pubkey: pubkey = pk(ipx_b_privkey) in
    {34}out(n32f_b, ipx_b_pubkey);
    {35}let ipx_r2_pubkey: pubkey = pk(ipx_r2_privkey) in
    {36}out(n32f_a, ipx_r2_pubkey);
    (
        {37}new n32f_pid: bitstring;
        {38}out(n32c_a, (sepp_b_addr,ciphersuites,n32f_pid));
        {39}in(n32c_a, (=sepp_a_addr,ciphers_b: bitstring,n32f_pid_b: bitstring));
        {40}let n32f_cid: bitstring = deriveContextId(n32f_pid,n32f_pid_b) in
        {41}event sendN32fContext(sepp_a_addr,n32f_pid,n32f_pid_b,n32f_cid);
        {42}out(n32c_a, (sepp_b_addr,n32f_cid,encp,modp_a));
        {43}in(n32c_a, (=sepp_a_addr,=n32f_cid,=encp,modp_b_1: bitstring));
        {44}out(n32c_a, (sepp_b_addr,n32f_cid,ipx_a_id,ipx_a_pubkey));
        {45}in(n32c_a, (=sepp_a_addr,=n32f_cid,ipx_b_id_1: bitstring,ipx_b_key: pubkey));
        {46}let msg_cnt_a: nat = 0 in
        {47}let master_key_a_1: key = deriveMasterKey(n32f_cid) in
        {48}event sendMasterKey(sepp_a_addr,n32f_cid,master_key_a_1);
        {49}let par_req_key_a_1: key = deriveSessionKey(SEND,REQ,master_key_a_1) in
        {50}let rev_req_key_a_1: key = deriveSessionKey(RECV,REQ,master_key_a_1) in
        {51}let par_res_key_a_1: key = deriveSessionKey(SEND,RES,master_key_a_1) in
        {52}let rev_res_key_a_1: key = deriveSessionKey(RECV,RES,master_key_a_1) in
        {53}let par_req_iv_a: bitstring = deriveIV(SEND,REQ,master_key_a_1) in
        {54}let rev_req_iv_a: bitstring = deriveIV(RECV,REQ,master_key_a_1) in
        {55}let par_res_iv_a: bitstring = deriveIV(SEND,RES,master_key_a_1) in
        {56}let rev_res_iv_a: bitstring = deriveIV(RECV,RES,master_key_a_1) in
        {57}insert storeSeppA(sepp_b_plmn,sepp_b_addr,n32f_cid,msg_cnt_a,par_req_key_a_1,par_res_key_a_1,rev_req_key_a_1,rev_res_key_a_1,par_req_iv_a,par_res_iv_a,rev_req_iv_a,rev_res_iv_a,ciphersuites,encp,modp_a,modp_b_1,ipx_a_id,ipx_a_pubkey,ipx_b_id_1,ipx_b_key)
    ) | (
        {58}new n32f_pid_1: bitstring;
        {59}in(n32c_a, (=sepp_b_addr,=ciphersuites,n32f_pid_a: bitstring));
        {60}out(n32c_a, (sepp_a_addr,ciphersuites,n32f_pid_1));
        {61}let n32f_cid_1: bitstring = deriveContextId(n32f_pid_a,n32f_pid_1) in
        {62}event recvN32fContext(sepp_b_addr,n32f_pid_a,n32f_pid_1,n32f_cid_1);
        {63}in(n32c_a, (=sepp_b_addr,=n32f_cid_1,=encp,modp_a_1: bitstring));
        {64}out(n32c_a, (sepp_a_addr,n32f_cid_1,encp,modp_b));
        {65}in(n32c_a, (=sepp_b_addr,=n32f_cid_1,ipx_a_id_1: bitstring,ipx_a_key: pubkey));
        {66}out(n32c_a, (sepp_a_addr,n32f_cid_1,ipx_b_id,ipx_b_pubkey));
        {67}let msg_cnt_b: nat = 0 in
        {68}let master_key_b_1: key = deriveMasterKey(n32f_cid_1) in
        {69}event recvMasterKey(sepp_b_addr,n32f_cid_1,master_key_b_1);
        {70}let par_req_key_b_1: key = deriveSessionKey(RECV,REQ,master_key_b_1) in
        {71}let rev_req_key_b_1: key = deriveSessionKey(SEND,REQ,master_key_b_1) in
        {72}let par_res_key_b_1: key = deriveSessionKey(RECV,RES,master_key_b_1) in
        {73}let rev_res_key_b_1: key = deriveSessionKey(SEND,RES,master_key_b_1) in
        {74}let par_req_iv_b: bitstring = deriveIV(RECV,REQ,master_key_b_1) in
        {75}let rev_req_iv_b: bitstring = deriveIV(SEND,REQ,master_key_b_1) in
        {76}let par_res_iv_b: bitstring = deriveIV(RECV,RES,master_key_b_1) in
        {77}let rev_res_iv_b: bitstring = deriveIV(SEND,RES,master_key_b_1) in
        {78}insert storeSeppB(sepp_a_plmn,sepp_a_addr,n32f_cid_1,msg_cnt_b,par_req_key_b_1,par_res_key_b_1,rev_req_key_b_1,rev_res_key_b_1,par_req_iv_b,par_res_iv_b,rev_req_iv_b,rev_res_iv_b,ciphersuites,encp,modp_b,modp_a_1,ipx_b_id,ipx_b_pubkey,ipx_a_id_1,ipx_a_key)
    ) | (
        {79}new n32f_pid_2: bitstring;
        {80}out(n32c_b, (sepp_a_addr,ciphersuites,n32f_pid_2));
        {81}in(n32c_b, (=sepp_b_addr,ciphers_a: bitstring,n32f_pid_a_1: bitstring));
        {82}let n32f_cid_2: bitstring = deriveContextId(n32f_pid_2,n32f_pid_a_1) in
        {83}event sendN32fContext(sepp_b_addr,n32f_pid_2,n32f_pid_a_1,n32f_cid_2);
        {84}out(n32c_b, (sepp_a_addr,n32f_cid_2,encp,modp_b));
        {85}in(n32c_b, (=sepp_b_addr,=n32f_cid_2,=encp,modp_a_2: bitstring));
        {86}out(n32c_b, (sepp_a_addr,n32f_cid_2,ipx_b_id,ipx_b_pubkey));
        {87}in(n32c_b, (=sepp_b_addr,=n32f_cid_2,ipx_a_id_2: bitstring,ipx_a_key_1: pubkey));
        {88}let msg_cnt_b_1: nat = 0 in
        {89}let master_key_b_2: key = deriveMasterKey(n32f_cid_2) in
        {90}event sendMasterKey(sepp_b_addr,n32f_cid_2,master_key_b_2);
        {91}let par_req_key_b_2: key = deriveSessionKey(SEND,REQ,master_key_b_2) in
        {92}let rev_req_key_b_2: key = deriveSessionKey(RECV,REQ,master_key_b_2) in
        {93}let par_res_key_b_2: key = deriveSessionKey(SEND,RES,master_key_b_2) in
        {94}let rev_res_key_b_2: key = deriveSessionKey(RECV,RES,master_key_b_2) in
        {95}let par_req_iv_b_1: bitstring = deriveIV(SEND,REQ,master_key_b_2) in
        {96}let rev_req_iv_b_1: bitstring = deriveIV(RECV,REQ,master_key_b_2) in
        {97}let par_res_iv_b_1: bitstring = deriveIV(SEND,RES,master_key_b_2) in
        {98}let rev_res_iv_b_1: bitstring = deriveIV(RECV,RES,master_key_b_2) in
        {99}insert storeSeppB(sepp_a_plmn,sepp_a_addr,n32f_cid_2,msg_cnt_b_1,par_req_key_b_2,par_res_key_b_2,rev_req_key_b_2,rev_res_key_b_2,par_req_iv_b_1,par_res_iv_b_1,rev_req_iv_b_1,rev_res_iv_b_1,ciphersuites,encp,modp_b,modp_a_2,ipx_b_id,ipx_b_pubkey,ipx_a_id_2,ipx_a_key_1)
    ) | (
        {100}new n32f_pid_3: bitstring;
        {101}in(n32c_b, (=sepp_a_addr,=ciphersuites,n32f_pid_b_1: bitstring));
        {102}out(n32c_b, (sepp_b_addr,ciphersuites,n32f_pid_3));
        {103}let n32f_cid_3: bitstring = deriveContextId(n32f_pid_b_1,n32f_pid_3) in
        {104}event recvN32fContext(sepp_a_addr,n32f_pid_b_1,n32f_pid_3,n32f_cid_3);
        {105}in(n32c_b, (=sepp_a_addr,=n32f_cid_3,=encp,modp_b_2: bitstring));
        {106}out(n32c_b, (sepp_b_addr,n32f_cid_3,encp,modp_a));
        {107}in(n32c_b, (=sepp_a_addr,=n32f_cid_3,ipx_b_id_2: bitstring,ipx_b_key_1: pubkey));
        {108}out(n32c_b, (sepp_b_addr,n32f_cid_3,ipx_a_id,ipx_a_pubkey));
        {109}let msg_cnt_a_1: nat = 0 in
        {110}let master_key_a_2: key = deriveMasterKey(n32f_cid_3) in
        {111}event recvMasterKey(sepp_a_addr,n32f_cid_3,master_key_a_2);
        {112}let par_req_key_a_2: key = deriveSessionKey(RECV,REQ,master_key_a_2) in
        {113}let rev_req_key_a_2: key = deriveSessionKey(SEND,REQ,master_key_a_2) in
        {114}let par_res_key_a_2: key = deriveSessionKey(RECV,RES,master_key_a_2) in
        {115}let rev_res_key_a_2: key = deriveSessionKey(SEND,RES,master_key_a_2) in
        {116}let par_req_iv_a_1: bitstring = deriveIV(RECV,REQ,master_key_a_2) in
        {117}let rev_req_iv_a_1: bitstring = deriveIV(SEND,REQ,master_key_a_2) in
        {118}let par_res_iv_a_1: bitstring = deriveIV(RECV,RES,master_key_a_2) in
        {119}let rev_res_iv_a_1: bitstring = deriveIV(SEND,RES,master_key_a_2) in
        {120}insert storeSeppA(sepp_b_plmn,sepp_b_addr,n32f_cid_3,msg_cnt_a_1,par_req_key_a_2,par_res_key_a_2,rev_req_key_a_2,rev_res_key_a_2,par_req_iv_a_1,par_res_iv_a_1,rev_req_iv_a_1,rev_res_iv_a_1,ciphersuites,encp,modp_a,modp_b_2,ipx_a_id,ipx_a_pubkey,ipx_b_id_2,ipx_b_key_1)
    ) | (
        {1420}out(a, ());
        {1419}in(c, ());
        {122}!
        {123}new msg_body: bitstring;
        {124}let http_message: http = createHttp(nf_a_addr,nf_b_addr,REQ,msg_body) in
        {125}event sendHttpMsgNfA(REQ,msg_body);
        {126}out(plmn_a, (SEND,http_message))
    ) | (
        {1418}out(a_1, ());
        {1417}in(c_1, ());
        {128}!
        {129}new msg_body_1: bitstring;
        {130}let http_message_1: http = createHttp(nf_b_addr,nf_a_addr,REQ,msg_body_1) in
        {131}event sendHttpMsgNfB(REQ,msg_body_1);
        {132}out(plmn_b, (SEND,http_message_1))
    ) | (
        {1416}out(a_2, ());
        {1415}in(c_2, ());
        {134}!
        {135}in(plmn_a, (=SEND,http_message_2: http));
        {198}get storeSeppA(sepp_b_plmn_1: bitstring,sepp_b_addr_1: bitstring,n32f_context: bitstring,msg_cnt_a_2: nat,par_req_key_a_3: key,par_res_key_a_3: key,rev_req_key_a_3: key,rev_res_key_a_3: key,par_req_iv_a_2: bitstring,par_res_iv_a_2: bitstring,rev_req_iv_a_2: bitstring,rev_res_iv_a_2: bitstring,ciphers_a_1: bitstring,encp_a: bitstring,modp_a_3: bitstring,modp_b_3: bitstring,ipx_a_id_3: bitstring,ipx_a_key_2: pubkey,ipx_b_id_3: bitstring,ipx_b_key_2: pubkey) in
        {136}let createHttp(source_addr: bitstring,destination_addr: bitstring,msg_type: bitstring,msg_body_2: bitstring) = http_message_2 in
        {137}event recvHttpMsgSeppA(msg_type,msg_body_2);
        {138}let conf_1: bitstring = getConf(msg_body_2,encp_a) in
        {139}let nonconf: bitstring = getNonconf(msg_body_2,encp_a) in
        {140}let msg_id: nat = msg_cnt_a_2 + 1 in
        {141}let associated_data: aad = combineAAD(source_addr,destination_addr,msg_type,nonconf,msg_id,ipx_a_id_3,n32f_context) in
        {142}let v: bool = (msg_type = REQ) in
        (
            {143}if v then
            (
                {144}let key_1: key = par_req_key_a_3 in
                {145}let v_1: bool = (msg_type = REQ) in
                (
                    {146}if v_1 then
                    (
                        {147}let nonce: bitstring = deriveNonce(par_req_iv_a_2,msg_id) in
                        {148}let (payload: bitstring,jwe_tag: mac) = aeadEncrypt(key_1,nonce,conf_1,associated_data) in
                        {149}event sendN32fMsgSeppA(n32f_context,msg_id,payload,associated_data);
                        {150}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce,associated_data,payload,jwe_tag)));
                        {151}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
                    )
                    else
                        {152}let nonce_1: bitstring = deriveNonce(par_res_iv_a_2,msg_id) in
                        {153}let (payload_1: bitstring,jwe_tag_1: mac) = aeadEncrypt(key_1,nonce_1,conf_1,associated_data) in
                        {154}event sendN32fMsgSeppA(n32f_context,msg_id,payload_1,associated_data);
                        {155}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_1,associated_data,payload_1,jwe_tag_1)));
                        {156}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
                )
                else
                    {157}let nonce_2: bitstring = fail-any in
                    {158}let (payload_2: bitstring,jwe_tag_2: mac) = aeadEncrypt(key_1,nonce_2,conf_1,associated_data) in
                    {159}event sendN32fMsgSeppA(n32f_context,msg_id,payload_2,associated_data);
                    {160}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_2,associated_data,payload_2,jwe_tag_2)));
                    {161}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
            )
            else
                {162}let key_2: key = par_res_key_a_3 in
                {163}let v_2: bool = (msg_type = REQ) in
                (
                    {164}if v_2 then
                    (
                        {165}let nonce_3: bitstring = deriveNonce(par_req_iv_a_2,msg_id) in
                        {166}let (payload_3: bitstring,jwe_tag_3: mac) = aeadEncrypt(key_2,nonce_3,conf_1,associated_data) in
                        {167}event sendN32fMsgSeppA(n32f_context,msg_id,payload_3,associated_data);
                        {168}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_3,associated_data,payload_3,jwe_tag_3)));
                        {169}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
                    )
                    else
                        {170}let nonce_4: bitstring = deriveNonce(par_res_iv_a_2,msg_id) in
                        {171}let (payload_4: bitstring,jwe_tag_4: mac) = aeadEncrypt(key_2,nonce_4,conf_1,associated_data) in
                        {172}event sendN32fMsgSeppA(n32f_context,msg_id,payload_4,associated_data);
                        {173}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_4,associated_data,payload_4,jwe_tag_4)));
                        {174}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
                )
                else
                    {175}let nonce_5: bitstring = fail-any in
                    {176}let (payload_5: bitstring,jwe_tag_5: mac) = aeadEncrypt(key_2,nonce_5,conf_1,associated_data) in
                    {177}event sendN32fMsgSeppA(n32f_context,msg_id,payload_5,associated_data);
                    {178}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_5,associated_data,payload_5,jwe_tag_5)));
                    {179}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
        )
        else
            {180}let key_3: key = fail-any in
            {181}let v_3: bool = (msg_type = REQ) in
            (
                {182}if v_3 then
                (
                    {183}let nonce_6: bitstring = deriveNonce(par_req_iv_a_2,msg_id) in
                    {184}let (payload_6: bitstring,jwe_tag_6: mac) = aeadEncrypt(key_3,nonce_6,conf_1,associated_data) in
                    {185}event sendN32fMsgSeppA(n32f_context,msg_id,payload_6,associated_data);
                    {186}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_6,associated_data,payload_6,jwe_tag_6)));
                    {187}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
                )
                else
                    {188}let nonce_7: bitstring = deriveNonce(par_res_iv_a_2,msg_id) in
                    {189}let (payload_7: bitstring,jwe_tag_7: mac) = aeadEncrypt(key_3,nonce_7,conf_1,associated_data) in
                    {190}event sendN32fMsgSeppA(n32f_context,msg_id,payload_7,associated_data);
                    {191}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_7,associated_data,payload_7,jwe_tag_7)));
                    {192}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
            )
            else
                {193}let nonce_8: bitstring = fail-any in
                {194}let (payload_8: bitstring,jwe_tag_8: mac) = aeadEncrypt(key_3,nonce_8,conf_1,associated_data) in
                {195}event sendN32fMsgSeppA(n32f_context,msg_id,payload_8,associated_data);
                {196}out(n32f_a, (sepp_b_addr_1,prins'(ciphers_a_1,nonce_8,associated_data,payload_8,jwe_tag_8)));
                {197}insert storeSeppA(sepp_b_plmn_1,sepp_b_addr_1,n32f_context,msg_cnt_a_2,par_req_key_a_3,par_res_key_a_3,rev_req_key_a_3,rev_res_key_a_3,par_req_iv_a_2,par_res_iv_a_2,rev_req_iv_a_2,rev_res_iv_a_2,ciphers_a_1,encp_a,modp_a_3,modp_b_3,ipx_a_id_3,ipx_a_key_2,ipx_b_id_3,ipx_b_key_2)
    ) | (
        {1414}out(a_3, ());
        {1413}in(c_3, ());
        {200}!
        {201}in(plmn_b, (=SEND,http_message_3: http));
        {264}get storeSeppB(sepp_a_plmn_1: bitstring,sepp_a_addr_1: bitstring,n32f_context_1: bitstring,msg_cnt_b_2: nat,par_req_key_b_3: key,par_res_key_b_3: key,rev_req_key_b_3: key,rev_res_key_b_3: key,par_req_iv_b_2: bitstring,par_res_iv_b_2: bitstring,rev_req_iv_b_2: bitstring,rev_res_iv_b_2: bitstring,ciphers_b_1: bitstring,encp_b: bitstring,modp_b_4: bitstring,modp_a_4: bitstring,ipx_b_id_4: bitstring,ipx_b_key_3: pubkey,ipx_a_id_4: bitstring,ipx_a_key_3: pubkey) in
        {202}let createHttp(source_addr_1: bitstring,destination_addr_1: bitstring,msg_type_1: bitstring,msg_body_3: bitstring) = http_message_3 in
        {203}event recvHttpMsgSeppB(msg_type_1,msg_body_3);
        {204}let conf_2: bitstring = getConf(msg_body_3,encp_b) in
        {205}let nonconf_1: bitstring = getNonconf(msg_body_3,encp_b) in
        {206}let msg_id_1: nat = msg_cnt_b_2 + 1 in
        {207}let associated_data_1: aad = combineAAD(source_addr_1,destination_addr_1,msg_type_1,nonconf_1,msg_id_1,ipx_b_id_4,n32f_context_1) in
        {208}let v_4: bool = (msg_type_1 = REQ) in
        (
            {209}if v_4 then
            (
                {210}let key_4: key = par_req_key_b_3 in
                {211}let v_5: bool = (msg_type_1 = REQ) in
                (
                    {212}if v_5 then
                    (
                        {213}let nonce_9: bitstring = deriveNonce(par_req_iv_b_2,msg_id_1) in
                        {214}let (payload_9: bitstring,jwe_tag_9: mac) = aeadEncrypt(key_4,nonce_9,conf_2,associated_data_1) in
                        {215}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_9,associated_data_1);
                        {216}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_9,associated_data_1,payload_9,jwe_tag_9)));
                        {217}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
                    )
                    else
                        {218}let nonce_10: bitstring = deriveNonce(par_res_iv_b_2,msg_id_1) in
                        {219}let (payload_10: bitstring,jwe_tag_10: mac) = aeadEncrypt(key_4,nonce_10,conf_2,associated_data_1) in
                        {220}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_10,associated_data_1);
                        {221}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_10,associated_data_1,payload_10,jwe_tag_10)));
                        {222}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
                )
                else
                    {223}let nonce_11: bitstring = fail-any in
                    {224}let (payload_11: bitstring,jwe_tag_11: mac) = aeadEncrypt(key_4,nonce_11,conf_2,associated_data_1) in
                    {225}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_11,associated_data_1);
                    {226}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_11,associated_data_1,payload_11,jwe_tag_11)));
                    {227}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
            )
            else
                {228}let key_5: key = par_res_key_b_3 in
                {229}let v_6: bool = (msg_type_1 = REQ) in
                (
                    {230}if v_6 then
                    (
                        {231}let nonce_12: bitstring = deriveNonce(par_req_iv_b_2,msg_id_1) in
                        {232}let (payload_12: bitstring,jwe_tag_12: mac) = aeadEncrypt(key_5,nonce_12,conf_2,associated_data_1) in
                        {233}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_12,associated_data_1);
                        {234}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_12,associated_data_1,payload_12,jwe_tag_12)));
                        {235}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
                    )
                    else
                        {236}let nonce_13: bitstring = deriveNonce(par_res_iv_b_2,msg_id_1) in
                        {237}let (payload_13: bitstring,jwe_tag_13: mac) = aeadEncrypt(key_5,nonce_13,conf_2,associated_data_1) in
                        {238}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_13,associated_data_1);
                        {239}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_13,associated_data_1,payload_13,jwe_tag_13)));
                        {240}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
                )
                else
                    {241}let nonce_14: bitstring = fail-any in
                    {242}let (payload_14: bitstring,jwe_tag_14: mac) = aeadEncrypt(key_5,nonce_14,conf_2,associated_data_1) in
                    {243}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_14,associated_data_1);
                    {244}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_14,associated_data_1,payload_14,jwe_tag_14)));
                    {245}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
        )
        else
            {246}let key_6: key = fail-any in
            {247}let v_7: bool = (msg_type_1 = REQ) in
            (
                {248}if v_7 then
                (
                    {249}let nonce_15: bitstring = deriveNonce(par_req_iv_b_2,msg_id_1) in
                    {250}let (payload_15: bitstring,jwe_tag_15: mac) = aeadEncrypt(key_6,nonce_15,conf_2,associated_data_1) in
                    {251}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_15,associated_data_1);
                    {252}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_15,associated_data_1,payload_15,jwe_tag_15)));
                    {253}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
                )
                else
                    {254}let nonce_16: bitstring = deriveNonce(par_res_iv_b_2,msg_id_1) in
                    {255}let (payload_16: bitstring,jwe_tag_16: mac) = aeadEncrypt(key_6,nonce_16,conf_2,associated_data_1) in
                    {256}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_16,associated_data_1);
                    {257}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_16,associated_data_1,payload_16,jwe_tag_16)));
                    {258}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
            )
            else
                {259}let nonce_17: bitstring = fail-any in
                {260}let (payload_17: bitstring,jwe_tag_17: mac) = aeadEncrypt(key_6,nonce_17,conf_2,associated_data_1) in
                {261}event sendN32fMsgSeppB(n32f_context_1,msg_id_1,payload_17,associated_data_1);
                {262}out(n32f_b, (sepp_a_addr_1,prins'(ciphers_b_1,nonce_17,associated_data_1,payload_17,jwe_tag_17)));
                {263}insert storeSeppB(sepp_a_plmn_1,sepp_a_addr_1,n32f_context_1,msg_cnt_b_2,par_req_key_b_3,par_res_key_b_3,rev_req_key_b_3,rev_res_key_b_3,par_req_iv_b_2,par_res_iv_b_2,rev_req_iv_b_2,rev_res_iv_b_2,ciphers_b_1,encp_b,modp_b_4,modp_a_4,ipx_b_id_4,ipx_b_key_3,ipx_a_id_4,ipx_a_key_3)
    ) | (
        {1412}out(a_4, ());
        {1411}in(c_4, ());
        {266}!
        {267}in(n32f_i, (sepp_a_addr_2: bitstring,prins_message: modprins));
        {268}let prins''(jwe_headers: bitstring,iv: bitstring,dataToIntegrityProtect: aad,dataToIntegrityProtectAndCipher: bitstring,jwe_tag_18: mac,ipx_b_mods: ipxmod,=EMPTY) = prins_message in
        {269}let modifications: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_18,signPrinsMod(prins_message,modp_a,ipx_a_id,jwe_tag_18,ipx_a_privkey)) in
        {270}let combineAAD(source_addr_2: bitstring,destination_addr_2: bitstring,msg_type_2: bitstring,nonconf_2: bitstring,msg_id_2: nat,auth_ipx_id: bitstring,n32f_context_2: bitstring) = dataToIntegrityProtect in
        {271}let modified_message: modprins = prins''(jwe_headers,iv,dataToIntegrityProtect,dataToIntegrityProtectAndCipher,jwe_tag_18,ipx_b_mods,modifications) in
        {272}event ipxRecvA(n32f_context_2,msg_id_2,jwe_tag_18,modifications);
        {273}out(n32f_a, (sepp_a_addr_2,modified_message))
    ) | (
        {1410}out(a_5, ());
        {1409}in(c_5, ());
        {275}!
        {276}in(n32f_a, (sepp_b_addr_2: bitstring,prins_message_1: prins));
        {277}let prins'(jwe_headers_1: bitstring,iv_1: bitstring,dataToIntegrityProtect_1: aad,dataToIntegrityProtectAndCipher_1: bitstring,jwe_tag_19: mac) = prins_message_1 in
        {278}let modifications_1: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_19,signPrins(prins_message_1,modp_a,ipx_a_id,jwe_tag_19,ipx_a_privkey)) in
        {279}let combineAAD(source_addr_3: bitstring,destination_addr_3: bitstring,msg_type_3: bitstring,nonconf_3: bitstring,msg_id_3: nat,=ipx_a_id,n32f_context_3: bitstring) = dataToIntegrityProtect_1 in
        {280}let modified_message_1: modprins = prins''(jwe_headers_1,iv_1,dataToIntegrityProtect_1,dataToIntegrityProtectAndCipher_1,jwe_tag_19,modifications_1,EMPTY) in
        {281}event ipxSendA(n32f_context_3,msg_id_3,jwe_tag_19,modifications_1);
        {282}out(n32f_i, (sepp_b_addr_2,modified_message_1))
    ) | (
        {1408}out(a_6, ());
        {1407}in(c_6, ());
        {284}!
        {285}in(n32f_i, (sepp_b_addr_3: bitstring,prins_message_2: modprins));
        {286}let prins''(jwe_headers_2: bitstring,iv_2: bitstring,dataToIntegrityProtect_2: aad,dataToIntegrityProtectAndCipher_2: bitstring,jwe_tag_20: mac,ipx_a_mods: ipxmod,=EMPTY) = prins_message_2 in
        {287}let modifications_2: ipxmod = jsonPatch(modp_b,ipx_b_id,jwe_tag_20,signPrinsMod(prins_message_2,modp_b,ipx_b_id,jwe_tag_20,ipx_b_privkey)) in
        {288}let combineAAD(source_addr_4: bitstring,destination_addr_4: bitstring,msg_type_4: bitstring,nonconf_4: bitstring,msg_id_4: nat,auth_ipx_id_1: bitstring,n32f_context_4: bitstring) = dataToIntegrityProtect_2 in
        {289}let modified_message_2: modprins = prins''(jwe_headers_2,iv_2,dataToIntegrityProtect_2,dataToIntegrityProtectAndCipher_2,jwe_tag_20,ipx_a_mods,modifications_2) in
        {290}event ipxRecvB(n32f_context_4,msg_id_4,jwe_tag_20,modifications_2);
        {291}out(n32f_b, (sepp_b_addr_3,modified_message_2))
    ) | (
        {1406}out(a_7, ());
        {1405}in(c_7, ());
        {293}!
        {294}in(n32f_b, (sepp_a_addr_3: bitstring,prins_message_3: prins));
        {295}let prins'(jwe_headers_3: bitstring,iv_3: bitstring,dataToIntegrityProtect_3: aad,dataToIntegrityProtectAndCipher_3: bitstring,jwe_tag_21: mac) = prins_message_3 in
        {296}let modifications_3: ipxmod = jsonPatch(modp_b,ipx_b_id,jwe_tag_21,signPrins(prins_message_3,modp_b,ipx_b_id,jwe_tag_21,ipx_b_privkey)) in
        {297}let combineAAD(source_addr_5: bitstring,destination_addr_5: bitstring,msg_type_5: bitstring,nonconf_5: bitstring,msg_id_5: nat,=ipx_b_id,n32f_context_5: bitstring) = dataToIntegrityProtect_3 in
        {298}let modified_message_3: modprins = prins''(jwe_headers_3,iv_3,dataToIntegrityProtect_3,dataToIntegrityProtectAndCipher_3,jwe_tag_21,modifications_3,EMPTY) in
        {299}event ipxSendB(n32f_context_5,msg_id_5,jwe_tag_21,modifications_3);
        {300}out(n32f_i, (sepp_a_addr_3,modified_message_3));
        {301}out(n32f_i, modifications_3)
    ) | (
        {1404}out(a_8, ());
        {1403}in(c_8, ());
        {303}!
        {304}in(n32f_i, (sepp_a_addr_4: bitstring,prins_message_4: modprins));
        {305}let prins''(jwe_headers_4: bitstring,iv_4: bitstring,dataToIntegrityProtect_4: aad,dataToIntegrityProtectAndCipher_4: bitstring,jwe_tag_22: mac,ipx_b_mods_1: ipxmod,=EMPTY) = prins_message_4 in
        {306}let modifications_4: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_22,signPrinsMod(prins_message_4,modp_a,ipx_a_id,jwe_tag_22,ipx_a_privkey)) in
        {307}let combineAAD(source_addr_6: bitstring,destination_addr_6: bitstring,msg_type_6: bitstring,nonconf_6: bitstring,msg_id_6: nat,auth_ipx_id_2: bitstring,n32f_context_6: bitstring) = dataToIntegrityProtect_4 in
        {308}let modified_message_4: modprins = prins''(jwe_headers_4,iv_4,dataToIntegrityProtect_4,dataToIntegrityProtectAndCipher_4,jwe_tag_22,EMPTY,modifications_4) in
        {309}event ipxRecvR1(n32f_context_6,msg_id_6,jwe_tag_22,modifications_4);
        {310}out(n32f_a, (sepp_a_addr_4,modified_message_4))
    ) | (
        {1402}out(a_9, ());
        {1401}in(c_9, ());
        {312}!
        {313}in(n32f_a, (sepp_b_addr_4: bitstring,prins_message_5: prins));
        {314}let prins'(jwe_headers_5: bitstring,iv_5: bitstring,dataToIntegrityProtect_5: aad,dataToIntegrityProtectAndCipher_5: bitstring,jwe_tag_23: mac) = prins_message_5 in
        {315}let modifications_5: ipxmod = jsonPatch(modp_r1,ipx_a_id,jwe_tag_23,signPrins(prins_message_5,modp_r1,ipx_a_id,jwe_tag_23,ipx_a_privkey)) in
        {316}let combineAAD(source_addr_7: bitstring,destination_addr_7: bitstring,msg_type_7: bitstring,nonconf_7: bitstring,msg_id_7: nat,auth_ipx_id_3: bitstring,n32f_context_7: bitstring) = dataToIntegrityProtect_5 in
        {317}let modified_message_5: modprins = prins''(jwe_headers_5,iv_5,dataToIntegrityProtect_5,dataToIntegrityProtectAndCipher_5,jwe_tag_23,modifications_5,EMPTY) in
        {318}event ipxSendR1(n32f_context_7,msg_id_7,jwe_tag_23,modifications_5);
        {319}out(n32f_i, (sepp_b_addr_4,modified_message_5))
    ) | (
        {1400}out(a_10, ());
        {1399}in(c_10, ());
        {321}!
        {322}in(n32f_i, (sepp_a_addr_5: bitstring,prins_message_6: modprins));
        {323}let prins''(jwe_headers_6: bitstring,iv_6: bitstring,dataToIntegrityProtect_6: aad,dataToIntegrityProtectAndCipher_6: bitstring,jwe_tag_24: mac,ipx_b_mods_2: ipxmod,=EMPTY) = prins_message_6 in
        {324}let modifications_6: ipxmod = jsonPatch(modp_a,ipx_r2_id,jwe_tag_24,signPrinsMod(prins_message_6,modp_a,ipx_r2_id,jwe_tag_24,ipx_r2_privkey)) in
        {325}let combineAAD(source_addr_8: bitstring,destination_addr_8: bitstring,msg_type_8: bitstring,nonconf_8: bitstring,msg_id_8: nat,auth_ipx_id_4: bitstring,n32f_context_8: bitstring) = dataToIntegrityProtect_6 in
        {326}let modified_message_6: modprins = prins''(jwe_headers_6,iv_6,dataToIntegrityProtect_6,dataToIntegrityProtectAndCipher_6,jwe_tag_24,EMPTY,modifications_6) in
        {327}event ipxRecvR2(n32f_context_8,msg_id_8,jwe_tag_24,modifications_6);
        {328}out(n32f_a, (sepp_a_addr_5,modified_message_6))
    ) | (
        {1398}out(a_11, ());
        {1397}in(c_11, ());
        {330}!
        {331}in(n32f_a, (sepp_b_addr_5: bitstring,prins_message_7: prins));
        {332}let prins'(jwe_headers_7: bitstring,iv_7: bitstring,dataToIntegrityProtect_7: aad,dataToIntegrityProtectAndCipher_7: bitstring,jwe_tag_25: mac) = prins_message_7 in
        {333}let modifications_7: ipxmod = jsonPatch(modp_a,ipx_r2_id,jwe_tag_25,signPrins(prins_message_7,modp_a,ipx_r2_id,jwe_tag_25,ipx_r2_privkey)) in
        {334}let combineAAD(source_addr_9: bitstring,destination_addr_9: bitstring,msg_type_9: bitstring,nonconf_9: bitstring,msg_id_9: nat,auth_ipx_id_5: bitstring,n32f_context_9: bitstring) = dataToIntegrityProtect_7 in
        {335}let modified_message_7: modprins = prins''(jwe_headers_7,iv_7,dataToIntegrityProtect_7,dataToIntegrityProtectAndCipher_7,jwe_tag_25,modifications_7,EMPTY) in
        {336}event ipxSendR2(n32f_context_9,msg_id_9,jwe_tag_25,modifications_7);
        {337}out(n32f_i, (sepp_b_addr_5,modified_message_7))
    ) | (
        {1396}out(a_12, ());
        {1395}in(c_12, ());
        {339}!
        {340}in(n32f_i, (sepp_a_addr_6: bitstring,prins_message_8: modprins));
        {341}in(n32f_i, modifications_8: ipxmod);
        {342}let prins''(jwe_headers_8: bitstring,iv_8: bitstring,dataToIntegrityProtect_8: aad,dataToIntegrityProtectAndCipher_8: bitstring,jwe_tag_26: mac,ipx_b_mods_3: ipxmod,ipx_a_mods_1: ipxmod) = prins_message_8 in
        {343}let combineAAD(source_addr_10: bitstring,destination_addr_10: bitstring,msg_type_10: bitstring,nonconf_10: bitstring,msg_id_10: nat,auth_ipx_id_6: bitstring,n32f_context_10: bitstring) = dataToIntegrityProtect_8 in
        {344}let modified_message_8: modprins = prins''(jwe_headers_8,iv_8,dataToIntegrityProtect_8,dataToIntegrityProtectAndCipher_8,jwe_tag_26,ipx_b_mods_3,modifications_8) in
        {345}event ipxRecvR3(n32f_context_10,msg_id_10,jwe_tag_26,modifications_8);
        {346}out(n32f_a, (sepp_a_addr_6,modified_message_8))
    ) | (
        {1394}out(a_13, ());
        {1393}in(c_13, ());
        {348}!
        {349}in(n32f_a, (=sepp_a_addr,prins_messsage: modprins));
        {350}let prins''(jwe_headers_9: bitstring,nonce_18: bitstring,dataToIntegrityProtect_9: aad,dataToIntegrityProtectAndCipher_9: bitstring,jwe_tag_27: mac,ipx_b_mods_4: ipxmod,ipx_a_mods_2: ipxmod) = prins_messsage in
        {351}let combineAAD(source_addr_11: bitstring,destination_addr_11: bitstring,msg_type_11: bitstring,nonconf_11: bitstring,msg_id_11: nat,auth_ipx_id_7: bitstring,n32f_context': bitstring) = dataToIntegrityProtect_9 in
        {352}event recvN32fMsgSeppA(n32f_context',msg_id_11,dataToIntegrityProtectAndCipher_9,dataToIntegrityProtect_9);
        {517}get storeSeppA(sepp_b_plmn_2: bitstring,sepp_b_addr_6: bitstring,n32f_context_11: bitstring,msg_cnt_a_3: nat,par_req_key_a_4: key,par_res_key_a_4: key,rev_req_key_a_4: key,rev_res_key_a_4: key,par_req_iv_a_3: bitstring,par_res_iv_a_3: bitstring,rev_req_iv_a_3: bitstring,rev_res_iv_a_3: bitstring,ciphers_a_2: bitstring,encp_a_1: bitstring,modp_a_5: bitstring,modp_b_5: bitstring,ipx_a_id_5: bitstring,ipx_a_key_4: pubkey,ipx_b_id_5: bitstring,ipx_b_key_4: pubkey) suchthat (n32f_context' = n32f_context_11) in
        {353}let v_8: bool = (msg_type_11 = REQ) in
        (
            {354}if v_8 then
            (
                {355}let key_7: key = rev_req_key_a_4 in
                {356}let v_9: bool = (msg_type_11 = REQ) in
                (
                    {357}if v_9 then
                    (
                        {358}let nonce_19: bitstring = deriveNonce(rev_req_iv_a_3,msg_id_11) in
                        {359}let conf_3: bitstring = aeadDecrypt(key_7,nonce_19,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                        {360}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws: bitstring) = ipx_b_mods_4 in
                        {361}if not(validPrinsSign(ipx_b_jws,ipx_b_key_4)) then
                            {362}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                            {363}out(err_a, (n32f_context_11,msg_id_11))
                        else
                            {364}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                            {365}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws: bitstring) = ipx_a_mods_2 in
                            {366}if not(validPrinsModSign(ipx_a_jws,ipx_a_key_4)) then
                                {367}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                                {368}out(err_a, (n32f_context_11,msg_id_11))
                            else
                                {369}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                                {370}if (validPrinsModSign(ipx_a_jws,ipx_a_key_4) && (validPrinsSign(ipx_b_jws,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                                {371}let msg_body_4: bitstring = applyPatches((conf_3,nonconf_11),modp_b_5,modp_a_5) in
                                {372}let http_message_4: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_4) in
                                {373}event sendHttpMsgSeppA(msg_type_11,msg_body_4);
                                {374}out(plmn_a, (RECV,http_message_4))
                    )
                    else
                        {375}let nonce_20: bitstring = deriveNonce(rev_res_iv_a_3,msg_id_11) in
                        {376}let conf_4: bitstring = aeadDecrypt(key_7,nonce_20,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                        {377}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_1: bitstring) = ipx_b_mods_4 in
                        {378}if not(validPrinsSign(ipx_b_jws_1,ipx_b_key_4)) then
                            {379}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                            {380}out(err_a, (n32f_context_11,msg_id_11))
                        else
                            {381}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                            {382}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_1: bitstring) = ipx_a_mods_2 in
                            {383}if not(validPrinsModSign(ipx_a_jws_1,ipx_a_key_4)) then
                                {384}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                                {385}out(err_a, (n32f_context_11,msg_id_11))
                            else
                                {386}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                                {387}if (validPrinsModSign(ipx_a_jws_1,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_1,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                                {388}let msg_body_5: bitstring = applyPatches((conf_4,nonconf_11),modp_b_5,modp_a_5) in
                                {389}let http_message_5: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_5) in
                                {390}event sendHttpMsgSeppA(msg_type_11,msg_body_5);
                                {391}out(plmn_a, (RECV,http_message_5))
                )
                else
                    {392}let nonce_21: bitstring = fail-any in
                    {393}let conf_5: bitstring = aeadDecrypt(key_7,nonce_21,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                    {394}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_2: bitstring) = ipx_b_mods_4 in
                    {395}if not(validPrinsSign(ipx_b_jws_2,ipx_b_key_4)) then
                        {396}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {397}out(err_a, (n32f_context_11,msg_id_11))
                    else
                        {398}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {399}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_2: bitstring) = ipx_a_mods_2 in
                        {400}if not(validPrinsModSign(ipx_a_jws_2,ipx_a_key_4)) then
                            {401}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {402}out(err_a, (n32f_context_11,msg_id_11))
                        else
                            {403}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {404}if (validPrinsModSign(ipx_a_jws_2,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_2,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                            {405}let msg_body_6: bitstring = applyPatches((conf_5,nonconf_11),modp_b_5,modp_a_5) in
                            {406}let http_message_6: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_6) in
                            {407}event sendHttpMsgSeppA(msg_type_11,msg_body_6);
                            {408}out(plmn_a, (RECV,http_message_6))
            )
            else
                {409}let key_8: key = rev_res_key_a_4 in
                {410}let v_10: bool = (msg_type_11 = REQ) in
                (
                    {411}if v_10 then
                    (
                        {412}let nonce_22: bitstring = deriveNonce(rev_req_iv_a_3,msg_id_11) in
                        {413}let conf_6: bitstring = aeadDecrypt(key_8,nonce_22,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                        {414}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_3: bitstring) = ipx_b_mods_4 in
                        {415}if not(validPrinsSign(ipx_b_jws_3,ipx_b_key_4)) then
                            {416}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                            {417}out(err_a, (n32f_context_11,msg_id_11))
                        else
                            {418}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                            {419}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_3: bitstring) = ipx_a_mods_2 in
                            {420}if not(validPrinsModSign(ipx_a_jws_3,ipx_a_key_4)) then
                                {421}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                                {422}out(err_a, (n32f_context_11,msg_id_11))
                            else
                                {423}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                                {424}if (validPrinsModSign(ipx_a_jws_3,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_3,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                                {425}let msg_body_7: bitstring = applyPatches((conf_6,nonconf_11),modp_b_5,modp_a_5) in
                                {426}let http_message_7: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_7) in
                                {427}event sendHttpMsgSeppA(msg_type_11,msg_body_7);
                                {428}out(plmn_a, (RECV,http_message_7))
                    )
                    else
                        {429}let nonce_23: bitstring = deriveNonce(rev_res_iv_a_3,msg_id_11) in
                        {430}let conf_7: bitstring = aeadDecrypt(key_8,nonce_23,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                        {431}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_4: bitstring) = ipx_b_mods_4 in
                        {432}if not(validPrinsSign(ipx_b_jws_4,ipx_b_key_4)) then
                            {433}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                            {434}out(err_a, (n32f_context_11,msg_id_11))
                        else
                            {435}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                            {436}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_4: bitstring) = ipx_a_mods_2 in
                            {437}if not(validPrinsModSign(ipx_a_jws_4,ipx_a_key_4)) then
                                {438}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                                {439}out(err_a, (n32f_context_11,msg_id_11))
                            else
                                {440}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                                {441}if (validPrinsModSign(ipx_a_jws_4,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_4,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                                {442}let msg_body_8: bitstring = applyPatches((conf_7,nonconf_11),modp_b_5,modp_a_5) in
                                {443}let http_message_8: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_8) in
                                {444}event sendHttpMsgSeppA(msg_type_11,msg_body_8);
                                {445}out(plmn_a, (RECV,http_message_8))
                )
                else
                    {446}let nonce_24: bitstring = fail-any in
                    {447}let conf_8: bitstring = aeadDecrypt(key_8,nonce_24,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                    {448}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_5: bitstring) = ipx_b_mods_4 in
                    {449}if not(validPrinsSign(ipx_b_jws_5,ipx_b_key_4)) then
                        {450}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {451}out(err_a, (n32f_context_11,msg_id_11))
                    else
                        {452}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {453}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_5: bitstring) = ipx_a_mods_2 in
                        {454}if not(validPrinsModSign(ipx_a_jws_5,ipx_a_key_4)) then
                            {455}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {456}out(err_a, (n32f_context_11,msg_id_11))
                        else
                            {457}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {458}if (validPrinsModSign(ipx_a_jws_5,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_5,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                            {459}let msg_body_9: bitstring = applyPatches((conf_8,nonconf_11),modp_b_5,modp_a_5) in
                            {460}let http_message_9: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_9) in
                            {461}event sendHttpMsgSeppA(msg_type_11,msg_body_9);
                            {462}out(plmn_a, (RECV,http_message_9))
        )
        else
            {463}let key_9: key = fail-any in
            {464}let v_11: bool = (msg_type_11 = REQ) in
            (
                {465}if v_11 then
                (
                    {466}let nonce_25: bitstring = deriveNonce(rev_req_iv_a_3,msg_id_11) in
                    {467}let conf_9: bitstring = aeadDecrypt(key_9,nonce_25,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                    {468}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_6: bitstring) = ipx_b_mods_4 in
                    {469}if not(validPrinsSign(ipx_b_jws_6,ipx_b_key_4)) then
                        {470}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {471}out(err_a, (n32f_context_11,msg_id_11))
                    else
                        {472}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {473}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_6: bitstring) = ipx_a_mods_2 in
                        {474}if not(validPrinsModSign(ipx_a_jws_6,ipx_a_key_4)) then
                            {475}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {476}out(err_a, (n32f_context_11,msg_id_11))
                        else
                            {477}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {478}if (validPrinsModSign(ipx_a_jws_6,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_6,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                            {479}let msg_body_10: bitstring = applyPatches((conf_9,nonconf_11),modp_b_5,modp_a_5) in
                            {480}let http_message_10: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_10) in
                            {481}event sendHttpMsgSeppA(msg_type_11,msg_body_10);
                            {482}out(plmn_a, (RECV,http_message_10))
                )
                else
                    {483}let nonce_26: bitstring = deriveNonce(rev_res_iv_a_3,msg_id_11) in
                    {484}let conf_10: bitstring = aeadDecrypt(key_9,nonce_26,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                    {485}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_7: bitstring) = ipx_b_mods_4 in
                    {486}if not(validPrinsSign(ipx_b_jws_7,ipx_b_key_4)) then
                        {487}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {488}out(err_a, (n32f_context_11,msg_id_11))
                    else
                        {489}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                        {490}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_7: bitstring) = ipx_a_mods_2 in
                        {491}if not(validPrinsModSign(ipx_a_jws_7,ipx_a_key_4)) then
                            {492}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {493}out(err_a, (n32f_context_11,msg_id_11))
                        else
                            {494}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                            {495}if (validPrinsModSign(ipx_a_jws_7,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_7,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                            {496}let msg_body_11: bitstring = applyPatches((conf_10,nonconf_11),modp_b_5,modp_a_5) in
                            {497}let http_message_11: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_11) in
                            {498}event sendHttpMsgSeppA(msg_type_11,msg_body_11);
                            {499}out(plmn_a, (RECV,http_message_11))
            )
            else
                {500}let nonce_27: bitstring = fail-any in
                {501}let conf_11: bitstring = aeadDecrypt(key_9,nonce_27,(dataToIntegrityProtectAndCipher_9,jwe_tag_27),dataToIntegrityProtect_9) in
                {502}let jsonPatch(=modp_b_5,=auth_ipx_id_7,=jwe_tag_27,ipx_b_jws_8: bitstring) = ipx_b_mods_4 in
                {503}if not(validPrinsSign(ipx_b_jws_8,ipx_b_key_4)) then
                    {504}event recvInvalIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    {505}out(err_a, (n32f_context_11,msg_id_11))
                else
                    {506}event recvValidIpxPatchSeppA(auth_ipx_id_7,n32f_context_11,msg_id_11,jwe_tag_27,ipx_b_mods_4);
                    {507}let jsonPatch(=modp_a_5,=ipx_a_id_5,=jwe_tag_27,ipx_a_jws_8: bitstring) = ipx_a_mods_2 in
                    {508}if not(validPrinsModSign(ipx_a_jws_8,ipx_a_key_4)) then
                        {509}event recvInvalIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        {510}out(err_a, (n32f_context_11,msg_id_11))
                    else
                        {511}event recvValidIpxPatchSeppA(ipx_a_id_5,n32f_context_11,msg_id_11,jwe_tag_27,ipx_a_mods_2);
                        {512}if (validPrinsModSign(ipx_a_jws_8,ipx_a_key_4) && (validPrinsSign(ipx_b_jws_8,ipx_b_key_4) && policyValidation(nonconf_11,encp_a_1))) then
                        {513}let msg_body_12: bitstring = applyPatches((conf_11,nonconf_11),modp_b_5,modp_a_5) in
                        {514}let http_message_12: http = createHttp(source_addr_11,destination_addr_11,msg_type_11,msg_body_12) in
                        {515}event sendHttpMsgSeppA(msg_type_11,msg_body_12);
                        {516}out(plmn_a, (RECV,http_message_12))
    ) | (
        {1392}out(a_14, ());
        {1391}in(c_14, ());
        {519}!
        {520}in(n32f_b, (=sepp_b_addr,prins_messsage_1: modprins));
        {521}let prins''(jwe_headers_10: bitstring,nonce_28: bitstring,dataToIntegrityProtect_10: aad,dataToIntegrityProtectAndCipher_10: bitstring,jwe_tag_28: mac,ipx_a_mods_3: ipxmod,ipx_b_mods_5: ipxmod) = prins_messsage_1 in
        {522}let combineAAD(source_addr_12: bitstring,destination_addr_12: bitstring,msg_type_12: bitstring,nonconf_12: bitstring,msg_id_12: nat,auth_ipx_id_8: bitstring,n32f_context'_1: bitstring) = dataToIntegrityProtect_10 in
        {523}event recvN32fMsgSeppB(n32f_context'_1,msg_id_12,dataToIntegrityProtectAndCipher_10,dataToIntegrityProtect_10);
        {688}get storeSeppB(sepp_a_plmn_2: bitstring,sepp_a_addr_7: bitstring,n32f_context_12: bitstring,msg_cnt_b_3: nat,par_req_key_b_4: key,par_res_key_b_4: key,rev_req_key_b_4: key,rev_res_key_b_4: key,par_req_iv_b_3: bitstring,par_res_iv_b_3: bitstring,rev_req_iv_b_3: bitstring,rev_res_iv_b_3: bitstring,ciphers_b_2: bitstring,encp_b_1: bitstring,modp_b_6: bitstring,modp_a_6: bitstring,ipx_b_id_6: bitstring,ipx_b_key_5: pubkey,ipx_a_id_6: bitstring,ipx_a_key_5: pubkey) suchthat (n32f_context'_1 = n32f_context_12) in
        {524}let v_12: bool = (msg_type_12 = REQ) in
        (
            {525}if v_12 then
            (
                {526}let key_10: key = rev_req_key_b_4 in
                {527}let v_13: bool = (msg_type_12 = REQ) in
                (
                    {528}if v_13 then
                    (
                        {529}let nonce_29: bitstring = deriveNonce(rev_req_iv_b_3,msg_id_12) in
                        {530}let conf_12: bitstring = aeadDecrypt(key_10,nonce_29,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                        {531}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_9: bitstring) = ipx_a_mods_3 in
                        {532}if not(validPrinsSign(ipx_a_jws_9,ipx_a_key_5)) then
                            {533}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                            {534}out(err_b, (n32f_context_12,msg_id_12))
                        else
                            {535}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                            {536}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_9: bitstring) = ipx_b_mods_5 in
                            {537}if not(validPrinsModSign(ipx_b_jws_9,ipx_b_key_5)) then
                                {538}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                                {539}out(err_b, (n32f_context_12,msg_id_12))
                            else
                                {540}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                                {541}if (validPrinsSign(ipx_a_jws_9,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_9,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                                {542}let msg_body_13: bitstring = applyPatches((conf_12,nonconf_12),modp_a_6,modp_b_6) in
                                {543}let http_message_13: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_13) in
                                {544}event sendHttpMsgSeppB(msg_type_12,msg_body_13);
                                {545}out(plmn_b, (RECV,http_message_13))
                    )
                    else
                        {546}let nonce_30: bitstring = deriveNonce(rev_res_iv_b_3,msg_id_12) in
                        {547}let conf_13: bitstring = aeadDecrypt(key_10,nonce_30,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                        {548}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_10: bitstring) = ipx_a_mods_3 in
                        {549}if not(validPrinsSign(ipx_a_jws_10,ipx_a_key_5)) then
                            {550}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                            {551}out(err_b, (n32f_context_12,msg_id_12))
                        else
                            {552}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                            {553}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_10: bitstring) = ipx_b_mods_5 in
                            {554}if not(validPrinsModSign(ipx_b_jws_10,ipx_b_key_5)) then
                                {555}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                                {556}out(err_b, (n32f_context_12,msg_id_12))
                            else
                                {557}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                                {558}if (validPrinsSign(ipx_a_jws_10,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_10,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                                {559}let msg_body_14: bitstring = applyPatches((conf_13,nonconf_12),modp_a_6,modp_b_6) in
                                {560}let http_message_14: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_14) in
                                {561}event sendHttpMsgSeppB(msg_type_12,msg_body_14);
                                {562}out(plmn_b, (RECV,http_message_14))
                )
                else
                    {563}let nonce_31: bitstring = fail-any in
                    {564}let conf_14: bitstring = aeadDecrypt(key_10,nonce_31,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                    {565}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_11: bitstring) = ipx_a_mods_3 in
                    {566}if not(validPrinsSign(ipx_a_jws_11,ipx_a_key_5)) then
                        {567}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {568}out(err_b, (n32f_context_12,msg_id_12))
                    else
                        {569}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {570}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_11: bitstring) = ipx_b_mods_5 in
                        {571}if not(validPrinsModSign(ipx_b_jws_11,ipx_b_key_5)) then
                            {572}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {573}out(err_b, (n32f_context_12,msg_id_12))
                        else
                            {574}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {575}if (validPrinsSign(ipx_a_jws_11,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_11,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                            {576}let msg_body_15: bitstring = applyPatches((conf_14,nonconf_12),modp_a_6,modp_b_6) in
                            {577}let http_message_15: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_15) in
                            {578}event sendHttpMsgSeppB(msg_type_12,msg_body_15);
                            {579}out(plmn_b, (RECV,http_message_15))
            )
            else
                {580}let key_11: key = rev_res_key_b_4 in
                {581}let v_14: bool = (msg_type_12 = REQ) in
                (
                    {582}if v_14 then
                    (
                        {583}let nonce_32: bitstring = deriveNonce(rev_req_iv_b_3,msg_id_12) in
                        {584}let conf_15: bitstring = aeadDecrypt(key_11,nonce_32,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                        {585}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_12: bitstring) = ipx_a_mods_3 in
                        {586}if not(validPrinsSign(ipx_a_jws_12,ipx_a_key_5)) then
                            {587}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                            {588}out(err_b, (n32f_context_12,msg_id_12))
                        else
                            {589}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                            {590}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_12: bitstring) = ipx_b_mods_5 in
                            {591}if not(validPrinsModSign(ipx_b_jws_12,ipx_b_key_5)) then
                                {592}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                                {593}out(err_b, (n32f_context_12,msg_id_12))
                            else
                                {594}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                                {595}if (validPrinsSign(ipx_a_jws_12,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_12,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                                {596}let msg_body_16: bitstring = applyPatches((conf_15,nonconf_12),modp_a_6,modp_b_6) in
                                {597}let http_message_16: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_16) in
                                {598}event sendHttpMsgSeppB(msg_type_12,msg_body_16);
                                {599}out(plmn_b, (RECV,http_message_16))
                    )
                    else
                        {600}let nonce_33: bitstring = deriveNonce(rev_res_iv_b_3,msg_id_12) in
                        {601}let conf_16: bitstring = aeadDecrypt(key_11,nonce_33,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                        {602}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_13: bitstring) = ipx_a_mods_3 in
                        {603}if not(validPrinsSign(ipx_a_jws_13,ipx_a_key_5)) then
                            {604}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                            {605}out(err_b, (n32f_context_12,msg_id_12))
                        else
                            {606}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                            {607}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_13: bitstring) = ipx_b_mods_5 in
                            {608}if not(validPrinsModSign(ipx_b_jws_13,ipx_b_key_5)) then
                                {609}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                                {610}out(err_b, (n32f_context_12,msg_id_12))
                            else
                                {611}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                                {612}if (validPrinsSign(ipx_a_jws_13,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_13,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                                {613}let msg_body_17: bitstring = applyPatches((conf_16,nonconf_12),modp_a_6,modp_b_6) in
                                {614}let http_message_17: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_17) in
                                {615}event sendHttpMsgSeppB(msg_type_12,msg_body_17);
                                {616}out(plmn_b, (RECV,http_message_17))
                )
                else
                    {617}let nonce_34: bitstring = fail-any in
                    {618}let conf_17: bitstring = aeadDecrypt(key_11,nonce_34,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                    {619}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_14: bitstring) = ipx_a_mods_3 in
                    {620}if not(validPrinsSign(ipx_a_jws_14,ipx_a_key_5)) then
                        {621}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {622}out(err_b, (n32f_context_12,msg_id_12))
                    else
                        {623}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {624}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_14: bitstring) = ipx_b_mods_5 in
                        {625}if not(validPrinsModSign(ipx_b_jws_14,ipx_b_key_5)) then
                            {626}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {627}out(err_b, (n32f_context_12,msg_id_12))
                        else
                            {628}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {629}if (validPrinsSign(ipx_a_jws_14,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_14,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                            {630}let msg_body_18: bitstring = applyPatches((conf_17,nonconf_12),modp_a_6,modp_b_6) in
                            {631}let http_message_18: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_18) in
                            {632}event sendHttpMsgSeppB(msg_type_12,msg_body_18);
                            {633}out(plmn_b, (RECV,http_message_18))
        )
        else
            {634}let key_12: key = fail-any in
            {635}let v_15: bool = (msg_type_12 = REQ) in
            (
                {636}if v_15 then
                (
                    {637}let nonce_35: bitstring = deriveNonce(rev_req_iv_b_3,msg_id_12) in
                    {638}let conf_18: bitstring = aeadDecrypt(key_12,nonce_35,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                    {639}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_15: bitstring) = ipx_a_mods_3 in
                    {640}if not(validPrinsSign(ipx_a_jws_15,ipx_a_key_5)) then
                        {641}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {642}out(err_b, (n32f_context_12,msg_id_12))
                    else
                        {643}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {644}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_15: bitstring) = ipx_b_mods_5 in
                        {645}if not(validPrinsModSign(ipx_b_jws_15,ipx_b_key_5)) then
                            {646}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {647}out(err_b, (n32f_context_12,msg_id_12))
                        else
                            {648}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {649}if (validPrinsSign(ipx_a_jws_15,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_15,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                            {650}let msg_body_19: bitstring = applyPatches((conf_18,nonconf_12),modp_a_6,modp_b_6) in
                            {651}let http_message_19: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_19) in
                            {652}event sendHttpMsgSeppB(msg_type_12,msg_body_19);
                            {653}out(plmn_b, (RECV,http_message_19))
                )
                else
                    {654}let nonce_36: bitstring = deriveNonce(rev_res_iv_b_3,msg_id_12) in
                    {655}let conf_19: bitstring = aeadDecrypt(key_12,nonce_36,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                    {656}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_16: bitstring) = ipx_a_mods_3 in
                    {657}if not(validPrinsSign(ipx_a_jws_16,ipx_a_key_5)) then
                        {658}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {659}out(err_b, (n32f_context_12,msg_id_12))
                    else
                        {660}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                        {661}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_16: bitstring) = ipx_b_mods_5 in
                        {662}if not(validPrinsModSign(ipx_b_jws_16,ipx_b_key_5)) then
                            {663}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {664}out(err_b, (n32f_context_12,msg_id_12))
                        else
                            {665}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                            {666}if (validPrinsSign(ipx_a_jws_16,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_16,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                            {667}let msg_body_20: bitstring = applyPatches((conf_19,nonconf_12),modp_a_6,modp_b_6) in
                            {668}let http_message_20: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_20) in
                            {669}event sendHttpMsgSeppB(msg_type_12,msg_body_20);
                            {670}out(plmn_b, (RECV,http_message_20))
            )
            else
                {671}let nonce_37: bitstring = fail-any in
                {672}let conf_20: bitstring = aeadDecrypt(key_12,nonce_37,(dataToIntegrityProtectAndCipher_10,jwe_tag_28),dataToIntegrityProtect_10) in
                {673}let jsonPatch(=modp_a_6,=auth_ipx_id_8,=jwe_tag_28,ipx_a_jws_17: bitstring) = ipx_a_mods_3 in
                {674}if not(validPrinsSign(ipx_a_jws_17,ipx_a_key_5)) then
                    {675}event recvInvalIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    {676}out(err_b, (n32f_context_12,msg_id_12))
                else
                    {677}event recvValidIpxPatchSeppB(auth_ipx_id_8,n32f_context_12,msg_id_12,jwe_tag_28,ipx_a_mods_3);
                    {678}let jsonPatch(=modp_b_6,=ipx_b_id_6,=jwe_tag_28,ipx_b_jws_17: bitstring) = ipx_b_mods_5 in
                    {679}if not(validPrinsModSign(ipx_b_jws_17,ipx_b_key_5)) then
                        {680}event recvInvalIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        {681}out(err_b, (n32f_context_12,msg_id_12))
                    else
                        {682}event recvValidIpxPatchSeppB(ipx_b_id_6,n32f_context_12,msg_id_12,jwe_tag_28,ipx_b_mods_5);
                        {683}if (validPrinsSign(ipx_a_jws_17,ipx_a_key_5) && (validPrinsModSign(ipx_b_jws_17,ipx_b_key_5) && policyValidation(nonconf_12,encp_b_1))) then
                        {684}let msg_body_21: bitstring = applyPatches((conf_20,nonconf_12),modp_a_6,modp_b_6) in
                        {685}let http_message_21: http = createHttp(source_addr_12,destination_addr_12,msg_type_12,msg_body_21) in
                        {686}event sendHttpMsgSeppB(msg_type_12,msg_body_21);
                        {687}out(plmn_b, (RECV,http_message_21))
    ) | (
        {1390}out(a_15, ());
        {1389}in(c_15, ());
        {690}!
        {691}in(plmn_a, (=RECV,msg: http));
        {692}let createHttp(nf_b_addr_1: bitstring,=nf_a_addr,msg_type_13: bitstring,msg_body_22: bitstring) = msg in
        {693}if (msg_type_13 = REQ) then
            {694}event sendHttpMsgNfA(RES,msg_body_22);
            {695}out(plmn_a, (SEND,createHttp(nf_a_addr,nf_b_addr_1,RES,msg_body_22)))
        else
            {696}event recvHttpMsgNfA(RES,msg_body_22)
    ) | (
        {1388}out(a_16, ());
        {1387}in(c_16, ());
        {698}!
        {699}in(plmn_b, (=RECV,msg_1: http));
        {700}let createHttp(nf_a_addr_1: bitstring,=nf_b_addr,msg_type_14: bitstring,msg_body_23: bitstring) = msg_1 in
        {701}if (msg_type_14 = REQ) then
            {702}event sendHttpMsgNfB(RES,msg_body_23);
            {703}out(plmn_b, (SEND,createHttp(nf_b_addr,nf_a_addr_1,RES,msg_body_23)))
        else
            {704}event recvHttpMsgNfB(RES,msg_body_23)
    ) | (
        {1386}out(a_17, ());
        {1385}in(c_17, ());
        {706}!
        {707}in(err_a, (n32f_context'_2: bitstring,msg_id_13: nat));
        {711}get storeSeppA(sepp_b_plmn_3: bitstring,sepp_b_addr_7: bitstring,n32f_context_13: bitstring,msg_cnt_a_4: nat,par_req_key_a_5: key,par_res_key_a_5: key,rev_req_key_a_5: key,rev_res_key_a_5: key,par_req_iv_a_4: bitstring,par_res_iv_a_4: bitstring,rev_req_iv_a_4: bitstring,rev_res_iv_a_4: bitstring,ciphers_a_3: bitstring,encp_a_2: bitstring,modp_a_7: bitstring,modp_b_7: bitstring,ipx_a_id_7: bitstring,ipx_a_key_6: pubkey,ipx_b_id_7: bitstring,ipx_b_key_6: pubkey) suchthat (n32f_context'_2 = n32f_context_13) in
        {708}out(n32c_a, (sepp_b_addr_7,n32f_context_13,msg_id_13));
        {709}in(n32c_a, (=sepp_a_addr,=n32f_context_13,=msg_id_13,status_code: bitstring));
        {710}event sendErrorSeppA(n32f_context_13,msg_id_13,status_code)
    ) | (
        {1384}out(a_18, ());
        {1383}in(c_18, ());
        {713}!
        {714}in(n32c_b, (=sepp_a_addr,n32f_context'_3: bitstring,msg_id_14: nat));
        {720}get storeSeppA(sepp_b_plmn_4: bitstring,sepp_b_addr_8: bitstring,n32f_context_14: bitstring,msg_cnt_a_5: nat,par_req_key_a_6: key,par_res_key_a_6: key,rev_req_key_a_6: key,rev_res_key_a_6: key,par_req_iv_a_5: bitstring,par_res_iv_a_5: bitstring,rev_req_iv_a_5: bitstring,rev_res_iv_a_5: bitstring,ciphers_a_4: bitstring,encp_a_3: bitstring,modp_a_8: bitstring,modp_b_8: bitstring,ipx_a_id_8: bitstring,ipx_a_key_7: pubkey,ipx_b_id_8: bitstring,ipx_b_key_7: pubkey) suchthat (n32f_context'_3 = n32f_context_14) in
        {715}if (msg_id_14 ≤ msg_cnt_a_5) then
            {716}out(n32c_b, (sepp_b_addr_8,n32f_context_14,msg_id_14,SUCC));
            {717}event recvErrorSeppA(n32f_context_14,msg_id_14,SUCC)
        else
            {718}out(n32c_b, (sepp_b_addr_8,n32f_context_14,msg_id_14,FAIL));
            {719}event recvErrorSeppA(n32f_context_14,msg_id_14,FAIL)
    ) | (
        {1382}out(a_19, ());
        {1381}in(c_19, ());
        {722}!
        {723}in(err_b, (n32f_context'_4: bitstring,msg_id_15: nat));
        {727}get storeSeppB(sepp_a_plmn_3: bitstring,sepp_a_addr_8: bitstring,n32f_context_15: bitstring,msg_cnt_b_4: nat,par_req_key_b_5: key,par_res_key_b_5: key,rev_req_key_b_5: key,rev_res_key_b_5: key,par_req_iv_b_4: bitstring,par_res_iv_b_4: bitstring,rev_req_iv_b_4: bitstring,rev_res_iv_b_4: bitstring,ciphers_b_3: bitstring,encp_b_2: bitstring,modp_b_9: bitstring,modp_a_9: bitstring,ipx_b_id_9: bitstring,ipx_b_key_8: pubkey,ipx_a_id_9: bitstring,ipx_a_key_8: pubkey) suchthat (n32f_context'_4 = n32f_context_15) in
        {724}out(n32c_b, (sepp_a_addr_8,n32f_context_15,msg_id_15));
        {725}in(n32c_b, (=sepp_b_addr,=n32f_context_15,=msg_id_15,status_code_1: bitstring));
        {726}event sendErrorSeppB(n32f_context_15,msg_id_15,status_code_1)
    ) | (
        {1380}out(a_20, ());
        {1379}in(c_20, ());
        {729}!
        {730}in(n32c_a, (=sepp_b_addr,n32f_context'_5: bitstring,msg_id_16: nat));
        {736}get storeSeppB(sepp_a_plmn_4: bitstring,sepp_a_addr_9: bitstring,n32f_context_16: bitstring,msg_cnt_b_5: nat,par_req_key_b_6: key,par_res_key_b_6: key,rev_req_key_b_6: key,rev_res_key_b_6: key,par_req_iv_b_5: bitstring,par_res_iv_b_5: bitstring,rev_req_iv_b_5: bitstring,rev_res_iv_b_5: bitstring,ciphers_b_4: bitstring,encp_b_3: bitstring,modp_b_10: bitstring,modp_a_10: bitstring,ipx_b_id_10: bitstring,ipx_b_key_9: pubkey,ipx_a_id_10: bitstring,ipx_a_key_9: pubkey) suchthat (n32f_context'_5 = n32f_context_16) in
        {731}if (msg_id_16 ≤ msg_cnt_b_5) then
            {732}out(n32c_a, (sepp_a_addr_9,n32f_context_16,msg_id_16,SUCC));
            {733}event recvErrorSeppB(n32f_context_16,msg_id_16,SUCC)
        else
            {734}out(n32c_a, (sepp_a_addr_9,n32f_context_16,msg_id_16,FAIL));
            {735}event recvErrorSeppB(n32f_context_16,msg_id_16,FAIL)
    ) | (
        {1378}out(a_21, ());
        {1377}in(c_21, ());
        {738}!
        {739}in(plmn_a, (=SEND,http_message_22: http));
        {802}get storeSeppA(sepp_b_plmn_5: bitstring,sepp_b_addr_9: bitstring,n32f_context_17: bitstring,msg_cnt_a_6: nat,par_req_key_a_7: key,par_res_key_a_7: key,rev_req_key_a_7: key,rev_res_key_a_7: key,par_req_iv_a_6: bitstring,par_res_iv_a_6: bitstring,rev_req_iv_a_6: bitstring,rev_res_iv_a_6: bitstring,ciphers_a_5: bitstring,encp_a_4: bitstring,modp_a_11: bitstring,modp_b_11: bitstring,ipx_a_id_11: bitstring,ipx_a_key_10: pubkey,ipx_b_id_11: bitstring,ipx_b_key_10: pubkey) in
        {740}let createHttp(source_addr_13: bitstring,destination_addr_13: bitstring,msg_type_15: bitstring,msg_body_24: bitstring) = http_message_22 in
        {741}event recvHttpMsgSeppA(msg_type_15,msg_body_24);
        {742}let conf_21: bitstring = getConf(msg_body_24,encp_a_4) in
        {743}let nonconf_13: bitstring = getNonconf(msg_body_24,encp_a_4) in
        {744}let msg_id_17: nat = msg_cnt_a_6 + 1 in
        {745}let associated_data_2: aad = combineAAD(source_addr_13,destination_addr_13,msg_type_15,nonconf_13,msg_id_17,ipx_a_id_11,n32f_context_17) in
        {746}let v_16: bool = (msg_type_15 = REQ) in
        (
            {747}if v_16 then
            (
                {748}let key_13: key = par_req_key_a_7 in
                {749}let v_17: bool = (msg_type_15 = REQ) in
                (
                    {750}if v_17 then
                    (
                        {751}let nonce_38: bitstring = deriveNonce(par_req_iv_a_6,msg_id_17) in
                        {752}let (payload_18: bitstring,jwe_tag_29: mac) = aeadEncrypt(key_13,nonce_38,conf_21,associated_data_2) in
                        {753}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_18,associated_data_2);
                        {754}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_38,associated_data_2,payload_18,jwe_tag_29)));
                        {755}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
                    )
                    else
                        {756}let nonce_39: bitstring = deriveNonce(par_res_iv_a_6,msg_id_17) in
                        {757}let (payload_19: bitstring,jwe_tag_30: mac) = aeadEncrypt(key_13,nonce_39,conf_21,associated_data_2) in
                        {758}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_19,associated_data_2);
                        {759}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_39,associated_data_2,payload_19,jwe_tag_30)));
                        {760}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
                )
                else
                    {761}let nonce_40: bitstring = fail-any in
                    {762}let (payload_20: bitstring,jwe_tag_31: mac) = aeadEncrypt(key_13,nonce_40,conf_21,associated_data_2) in
                    {763}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_20,associated_data_2);
                    {764}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_40,associated_data_2,payload_20,jwe_tag_31)));
                    {765}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
            )
            else
                {766}let key_14: key = par_res_key_a_7 in
                {767}let v_18: bool = (msg_type_15 = REQ) in
                (
                    {768}if v_18 then
                    (
                        {769}let nonce_41: bitstring = deriveNonce(par_req_iv_a_6,msg_id_17) in
                        {770}let (payload_21: bitstring,jwe_tag_32: mac) = aeadEncrypt(key_14,nonce_41,conf_21,associated_data_2) in
                        {771}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_21,associated_data_2);
                        {772}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_41,associated_data_2,payload_21,jwe_tag_32)));
                        {773}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
                    )
                    else
                        {774}let nonce_42: bitstring = deriveNonce(par_res_iv_a_6,msg_id_17) in
                        {775}let (payload_22: bitstring,jwe_tag_33: mac) = aeadEncrypt(key_14,nonce_42,conf_21,associated_data_2) in
                        {776}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_22,associated_data_2);
                        {777}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_42,associated_data_2,payload_22,jwe_tag_33)));
                        {778}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
                )
                else
                    {779}let nonce_43: bitstring = fail-any in
                    {780}let (payload_23: bitstring,jwe_tag_34: mac) = aeadEncrypt(key_14,nonce_43,conf_21,associated_data_2) in
                    {781}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_23,associated_data_2);
                    {782}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_43,associated_data_2,payload_23,jwe_tag_34)));
                    {783}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
        )
        else
            {784}let key_15: key = fail-any in
            {785}let v_19: bool = (msg_type_15 = REQ) in
            (
                {786}if v_19 then
                (
                    {787}let nonce_44: bitstring = deriveNonce(par_req_iv_a_6,msg_id_17) in
                    {788}let (payload_24: bitstring,jwe_tag_35: mac) = aeadEncrypt(key_15,nonce_44,conf_21,associated_data_2) in
                    {789}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_24,associated_data_2);
                    {790}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_44,associated_data_2,payload_24,jwe_tag_35)));
                    {791}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
                )
                else
                    {792}let nonce_45: bitstring = deriveNonce(par_res_iv_a_6,msg_id_17) in
                    {793}let (payload_25: bitstring,jwe_tag_36: mac) = aeadEncrypt(key_15,nonce_45,conf_21,associated_data_2) in
                    {794}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_25,associated_data_2);
                    {795}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_45,associated_data_2,payload_25,jwe_tag_36)));
                    {796}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
            )
            else
                {797}let nonce_46: bitstring = fail-any in
                {798}let (payload_26: bitstring,jwe_tag_37: mac) = aeadEncrypt(key_15,nonce_46,conf_21,associated_data_2) in
                {799}event sendN32fMsgSeppA(n32f_context_17,msg_id_17,payload_26,associated_data_2);
                {800}out(n32f_a, (sepp_b_addr_9,prins'(ciphers_a_5,nonce_46,associated_data_2,payload_26,jwe_tag_37)));
                {801}insert storeSeppA(sepp_b_plmn_5,sepp_b_addr_9,n32f_context_17,msg_cnt_a_6,par_req_key_a_7,par_res_key_a_7,rev_req_key_a_7,rev_res_key_a_7,par_req_iv_a_6,par_res_iv_a_6,rev_req_iv_a_6,rev_res_iv_a_6,ciphers_a_5,encp_a_4,modp_a_11,modp_b_11,ipx_a_id_11,ipx_a_key_10,ipx_b_id_11,ipx_b_key_10)
    ) | (
        {1376}out(a_22, ());
        {1375}in(c_22, ());
        {804}!
        {805}in(plmn_b, (=SEND,http_message_23: http));
        {868}get storeSeppB(sepp_a_plmn_5: bitstring,sepp_a_addr_10: bitstring,n32f_context_18: bitstring,msg_cnt_b_6: nat,par_req_key_b_7: key,par_res_key_b_7: key,rev_req_key_b_7: key,rev_res_key_b_7: key,par_req_iv_b_6: bitstring,par_res_iv_b_6: bitstring,rev_req_iv_b_6: bitstring,rev_res_iv_b_6: bitstring,ciphers_b_5: bitstring,encp_b_4: bitstring,modp_b_12: bitstring,modp_a_12: bitstring,ipx_b_id_12: bitstring,ipx_b_key_11: pubkey,ipx_a_id_12: bitstring,ipx_a_key_11: pubkey) in
        {806}let createHttp(source_addr_14: bitstring,destination_addr_14: bitstring,msg_type_16: bitstring,msg_body_25: bitstring) = http_message_23 in
        {807}event recvHttpMsgSeppB(msg_type_16,msg_body_25);
        {808}let conf_22: bitstring = getConf(msg_body_25,encp_b_4) in
        {809}let nonconf_14: bitstring = getNonconf(msg_body_25,encp_b_4) in
        {810}let msg_id_18: nat = msg_cnt_b_6 + 1 in
        {811}let associated_data_3: aad = combineAAD(source_addr_14,destination_addr_14,msg_type_16,nonconf_14,msg_id_18,ipx_b_id_12,n32f_context_18) in
        {812}let v_20: bool = (msg_type_16 = REQ) in
        (
            {813}if v_20 then
            (
                {814}let key_16: key = par_req_key_b_7 in
                {815}let v_21: bool = (msg_type_16 = REQ) in
                (
                    {816}if v_21 then
                    (
                        {817}let nonce_47: bitstring = deriveNonce(par_req_iv_b_6,msg_id_18) in
                        {818}let (payload_27: bitstring,jwe_tag_38: mac) = aeadEncrypt(key_16,nonce_47,conf_22,associated_data_3) in
                        {819}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_27,associated_data_3);
                        {820}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_47,associated_data_3,payload_27,jwe_tag_38)));
                        {821}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
                    )
                    else
                        {822}let nonce_48: bitstring = deriveNonce(par_res_iv_b_6,msg_id_18) in
                        {823}let (payload_28: bitstring,jwe_tag_39: mac) = aeadEncrypt(key_16,nonce_48,conf_22,associated_data_3) in
                        {824}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_28,associated_data_3);
                        {825}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_48,associated_data_3,payload_28,jwe_tag_39)));
                        {826}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
                )
                else
                    {827}let nonce_49: bitstring = fail-any in
                    {828}let (payload_29: bitstring,jwe_tag_40: mac) = aeadEncrypt(key_16,nonce_49,conf_22,associated_data_3) in
                    {829}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_29,associated_data_3);
                    {830}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_49,associated_data_3,payload_29,jwe_tag_40)));
                    {831}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
            )
            else
                {832}let key_17: key = par_res_key_b_7 in
                {833}let v_22: bool = (msg_type_16 = REQ) in
                (
                    {834}if v_22 then
                    (
                        {835}let nonce_50: bitstring = deriveNonce(par_req_iv_b_6,msg_id_18) in
                        {836}let (payload_30: bitstring,jwe_tag_41: mac) = aeadEncrypt(key_17,nonce_50,conf_22,associated_data_3) in
                        {837}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_30,associated_data_3);
                        {838}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_50,associated_data_3,payload_30,jwe_tag_41)));
                        {839}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
                    )
                    else
                        {840}let nonce_51: bitstring = deriveNonce(par_res_iv_b_6,msg_id_18) in
                        {841}let (payload_31: bitstring,jwe_tag_42: mac) = aeadEncrypt(key_17,nonce_51,conf_22,associated_data_3) in
                        {842}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_31,associated_data_3);
                        {843}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_51,associated_data_3,payload_31,jwe_tag_42)));
                        {844}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
                )
                else
                    {845}let nonce_52: bitstring = fail-any in
                    {846}let (payload_32: bitstring,jwe_tag_43: mac) = aeadEncrypt(key_17,nonce_52,conf_22,associated_data_3) in
                    {847}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_32,associated_data_3);
                    {848}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_52,associated_data_3,payload_32,jwe_tag_43)));
                    {849}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
        )
        else
            {850}let key_18: key = fail-any in
            {851}let v_23: bool = (msg_type_16 = REQ) in
            (
                {852}if v_23 then
                (
                    {853}let nonce_53: bitstring = deriveNonce(par_req_iv_b_6,msg_id_18) in
                    {854}let (payload_33: bitstring,jwe_tag_44: mac) = aeadEncrypt(key_18,nonce_53,conf_22,associated_data_3) in
                    {855}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_33,associated_data_3);
                    {856}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_53,associated_data_3,payload_33,jwe_tag_44)));
                    {857}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
                )
                else
                    {858}let nonce_54: bitstring = deriveNonce(par_res_iv_b_6,msg_id_18) in
                    {859}let (payload_34: bitstring,jwe_tag_45: mac) = aeadEncrypt(key_18,nonce_54,conf_22,associated_data_3) in
                    {860}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_34,associated_data_3);
                    {861}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_54,associated_data_3,payload_34,jwe_tag_45)));
                    {862}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
            )
            else
                {863}let nonce_55: bitstring = fail-any in
                {864}let (payload_35: bitstring,jwe_tag_46: mac) = aeadEncrypt(key_18,nonce_55,conf_22,associated_data_3) in
                {865}event sendN32fMsgSeppB(n32f_context_18,msg_id_18,payload_35,associated_data_3);
                {866}out(n32f_b, (sepp_a_addr_10,prins'(ciphers_b_5,nonce_55,associated_data_3,payload_35,jwe_tag_46)));
                {867}insert storeSeppB(sepp_a_plmn_5,sepp_a_addr_10,n32f_context_18,msg_cnt_b_6,par_req_key_b_7,par_res_key_b_7,rev_req_key_b_7,rev_res_key_b_7,par_req_iv_b_6,par_res_iv_b_6,rev_req_iv_b_6,rev_res_iv_b_6,ciphers_b_5,encp_b_4,modp_b_12,modp_a_12,ipx_b_id_12,ipx_b_key_11,ipx_a_id_12,ipx_a_key_11)
    ) | (
        {1374}out(a_23, ());
        {1373}in(c_23, ());
        {870}!
        {871}in(n32f_i, (sepp_a_addr_11: bitstring,prins_message_9: modprins));
        {872}let prins''(jwe_headers_11: bitstring,iv_9: bitstring,dataToIntegrityProtect_11: aad,dataToIntegrityProtectAndCipher_11: bitstring,jwe_tag_47: mac,ipx_b_mods_6: ipxmod,=EMPTY) = prins_message_9 in
        {873}let modifications_9: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_47,signPrinsMod(prins_message_9,modp_a,ipx_a_id,jwe_tag_47,ipx_a_privkey)) in
        {874}let combineAAD(source_addr_15: bitstring,destination_addr_15: bitstring,msg_type_17: bitstring,nonconf_15: bitstring,msg_id_19: nat,auth_ipx_id_9: bitstring,n32f_context_19: bitstring) = dataToIntegrityProtect_11 in
        {875}let modified_message_9: modprins = prins''(jwe_headers_11,iv_9,dataToIntegrityProtect_11,dataToIntegrityProtectAndCipher_11,jwe_tag_47,ipx_b_mods_6,modifications_9) in
        {876}event ipxRecvA(n32f_context_19,msg_id_19,jwe_tag_47,modifications_9);
        {877}out(n32f_a, (sepp_a_addr_11,modified_message_9))
    ) | (
        {1372}out(a_24, ());
        {1371}in(c_24, ());
        {879}!
        {880}in(n32f_a, (sepp_b_addr_10: bitstring,prins_message_10: prins));
        {881}let prins'(jwe_headers_12: bitstring,iv_10: bitstring,dataToIntegrityProtect_12: aad,dataToIntegrityProtectAndCipher_12: bitstring,jwe_tag_48: mac) = prins_message_10 in
        {882}let modifications_10: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_48,signPrins(prins_message_10,modp_a,ipx_a_id,jwe_tag_48,ipx_a_privkey)) in
        {883}let combineAAD(source_addr_16: bitstring,destination_addr_16: bitstring,msg_type_18: bitstring,nonconf_16: bitstring,msg_id_20: nat,=ipx_a_id,n32f_context_20: bitstring) = dataToIntegrityProtect_12 in
        {884}let modified_message_10: modprins = prins''(jwe_headers_12,iv_10,dataToIntegrityProtect_12,dataToIntegrityProtectAndCipher_12,jwe_tag_48,modifications_10,EMPTY) in
        {885}event ipxSendA(n32f_context_20,msg_id_20,jwe_tag_48,modifications_10);
        {886}out(n32f_i, (sepp_b_addr_10,modified_message_10))
    ) | (
        {1370}out(a_25, ());
        {1369}in(c_25, ());
        {888}!
        {889}in(n32f_i, (sepp_b_addr_11: bitstring,prins_message_11: modprins));
        {890}let prins''(jwe_headers_13: bitstring,iv_11: bitstring,dataToIntegrityProtect_13: aad,dataToIntegrityProtectAndCipher_13: bitstring,jwe_tag_49: mac,ipx_a_mods_4: ipxmod,=EMPTY) = prins_message_11 in
        {891}let modifications_11: ipxmod = jsonPatch(modp_b,ipx_b_id,jwe_tag_49,signPrinsMod(prins_message_11,modp_b,ipx_b_id,jwe_tag_49,ipx_b_privkey)) in
        {892}let combineAAD(source_addr_17: bitstring,destination_addr_17: bitstring,msg_type_19: bitstring,nonconf_17: bitstring,msg_id_21: nat,auth_ipx_id_10: bitstring,n32f_context_21: bitstring) = dataToIntegrityProtect_13 in
        {893}let modified_message_11: modprins = prins''(jwe_headers_13,iv_11,dataToIntegrityProtect_13,dataToIntegrityProtectAndCipher_13,jwe_tag_49,ipx_a_mods_4,modifications_11) in
        {894}event ipxRecvB(n32f_context_21,msg_id_21,jwe_tag_49,modifications_11);
        {895}out(n32f_b, (sepp_b_addr_11,modified_message_11))
    ) | (
        {1368}out(a_26, ());
        {1367}in(c_26, ());
        {897}!
        {898}in(n32f_b, (sepp_a_addr_12: bitstring,prins_message_12: prins));
        {899}let prins'(jwe_headers_14: bitstring,iv_12: bitstring,dataToIntegrityProtect_14: aad,dataToIntegrityProtectAndCipher_14: bitstring,jwe_tag_50: mac) = prins_message_12 in
        {900}let modifications_12: ipxmod = jsonPatch(modp_b,ipx_b_id,jwe_tag_50,signPrins(prins_message_12,modp_b,ipx_b_id,jwe_tag_50,ipx_b_privkey)) in
        {901}let combineAAD(source_addr_18: bitstring,destination_addr_18: bitstring,msg_type_20: bitstring,nonconf_18: bitstring,msg_id_22: nat,=ipx_b_id,n32f_context_22: bitstring) = dataToIntegrityProtect_14 in
        {902}let modified_message_12: modprins = prins''(jwe_headers_14,iv_12,dataToIntegrityProtect_14,dataToIntegrityProtectAndCipher_14,jwe_tag_50,modifications_12,EMPTY) in
        {903}event ipxSendB(n32f_context_22,msg_id_22,jwe_tag_50,modifications_12);
        {904}out(n32f_i, (sepp_a_addr_12,modified_message_12));
        {905}out(n32f_i, modifications_12)
    ) | (
        {1366}out(a_27, ());
        {1365}in(c_27, ());
        {907}!
        {908}in(n32f_i, (sepp_a_addr_13: bitstring,prins_message_13: modprins));
        {909}let prins''(jwe_headers_15: bitstring,iv_13: bitstring,dataToIntegrityProtect_15: aad,dataToIntegrityProtectAndCipher_15: bitstring,jwe_tag_51: mac,ipx_b_mods_7: ipxmod,=EMPTY) = prins_message_13 in
        {910}let modifications_13: ipxmod = jsonPatch(modp_a,ipx_a_id,jwe_tag_51,signPrinsMod(prins_message_13,modp_a,ipx_a_id,jwe_tag_51,ipx_a_privkey)) in
        {911}let combineAAD(source_addr_19: bitstring,destination_addr_19: bitstring,msg_type_21: bitstring,nonconf_19: bitstring,msg_id_23: nat,auth_ipx_id_11: bitstring,n32f_context_23: bitstring) = dataToIntegrityProtect_15 in
        {912}let modified_message_13: modprins = prins''(jwe_headers_15,iv_13,dataToIntegrityProtect_15,dataToIntegrityProtectAndCipher_15,jwe_tag_51,EMPTY,modifications_13) in
        {913}event ipxRecvR1(n32f_context_23,msg_id_23,jwe_tag_51,modifications_13);
        {914}out(n32f_a, (sepp_a_addr_13,modified_message_13))
    ) | (
        {1364}out(a_28, ());
        {1363}in(c_28, ());
        {916}!
        {917}in(n32f_a, (sepp_b_addr_12: bitstring,prins_message_14: prins));
        {918}let prins'(jwe_headers_16: bitstring,iv_14: bitstring,dataToIntegrityProtect_16: aad,dataToIntegrityProtectAndCipher_16: bitstring,jwe_tag_52: mac) = prins_message_14 in
        {919}let modifications_14: ipxmod = jsonPatch(modp_r1,ipx_a_id,jwe_tag_52,signPrins(prins_message_14,modp_r1,ipx_a_id,jwe_tag_52,ipx_a_privkey)) in
        {920}let combineAAD(source_addr_20: bitstring,destination_addr_20: bitstring,msg_type_22: bitstring,nonconf_20: bitstring,msg_id_24: nat,auth_ipx_id_12: bitstring,n32f_context_24: bitstring) = dataToIntegrityProtect_16 in
        {921}let modified_message_14: modprins = prins''(jwe_headers_16,iv_14,dataToIntegrityProtect_16,dataToIntegrityProtectAndCipher_16,jwe_tag_52,modifications_14,EMPTY) in
        {922}event ipxSendR1(n32f_context_24,msg_id_24,jwe_tag_52,modifications_14);
        {923}out(n32f_i, (sepp_b_addr_12,modified_message_14))
    ) | (
        {1362}out(a_29, ());
        {1361}in(c_29, ());
        {925}!
        {926}in(n32f_i, (sepp_a_addr_14: bitstring,prins_message_15: modprins));
        {927}let prins''(jwe_headers_17: bitstring,iv_15: bitstring,dataToIntegrityProtect_17: aad,dataToIntegrityProtectAndCipher_17: bitstring,jwe_tag_53: mac,ipx_b_mods_8: ipxmod,=EMPTY) = prins_message_15 in
        {928}let modifications_15: ipxmod = jsonPatch(modp_a,ipx_r2_id,jwe_tag_53,signPrinsMod(prins_message_15,modp_a,ipx_r2_id,jwe_tag_53,ipx_r2_privkey)) in
        {929}let combineAAD(source_addr_21: bitstring,destination_addr_21: bitstring,msg_type_23: bitstring,nonconf_21: bitstring,msg_id_25: nat,auth_ipx_id_13: bitstring,n32f_context_25: bitstring) = dataToIntegrityProtect_17 in
        {930}let modified_message_15: modprins = prins''(jwe_headers_17,iv_15,dataToIntegrityProtect_17,dataToIntegrityProtectAndCipher_17,jwe_tag_53,EMPTY,modifications_15) in
        {931}event ipxRecvR2(n32f_context_25,msg_id_25,jwe_tag_53,modifications_15);
        {932}out(n32f_a, (sepp_a_addr_14,modified_message_15))
    ) | (
        {1360}out(a_30, ());
        {1359}in(c_30, ());
        {934}!
        {935}in(n32f_a, (sepp_b_addr_13: bitstring,prins_message_16: prins));
        {936}let prins'(jwe_headers_18: bitstring,iv_16: bitstring,dataToIntegrityProtect_18: aad,dataToIntegrityProtectAndCipher_18: bitstring,jwe_tag_54: mac) = prins_message_16 in
        {937}let modifications_16: ipxmod = jsonPatch(modp_a,ipx_r2_id,jwe_tag_54,signPrins(prins_message_16,modp_a,ipx_r2_id,jwe_tag_54,ipx_r2_privkey)) in
        {938}let combineAAD(source_addr_22: bitstring,destination_addr_22: bitstring,msg_type_24: bitstring,nonconf_22: bitstring,msg_id_26: nat,auth_ipx_id_14: bitstring,n32f_context_26: bitstring) = dataToIntegrityProtect_18 in
        {939}let modified_message_16: modprins = prins''(jwe_headers_18,iv_16,dataToIntegrityProtect_18,dataToIntegrityProtectAndCipher_18,jwe_tag_54,modifications_16,EMPTY) in
        {940}event ipxSendR2(n32f_context_26,msg_id_26,jwe_tag_54,modifications_16);
        {941}out(n32f_i, (sepp_b_addr_13,modified_message_16))
    ) | (
        {1358}out(a_31, ());
        {1357}in(c_31, ());
        {943}!
        {944}in(n32f_i, (sepp_a_addr_15: bitstring,prins_message_17: modprins));
        {945}in(n32f_i, modifications_17: ipxmod);
        {946}let prins''(jwe_headers_19: bitstring,iv_17: bitstring,dataToIntegrityProtect_19: aad,dataToIntegrityProtectAndCipher_19: bitstring,jwe_tag_55: mac,ipx_b_mods_9: ipxmod,ipx_a_mods_5: ipxmod) = prins_message_17 in
        {947}let combineAAD(source_addr_23: bitstring,destination_addr_23: bitstring,msg_type_25: bitstring,nonconf_23: bitstring,msg_id_27: nat,auth_ipx_id_15: bitstring,n32f_context_27: bitstring) = dataToIntegrityProtect_19 in
        {948}let modified_message_17: modprins = prins''(jwe_headers_19,iv_17,dataToIntegrityProtect_19,dataToIntegrityProtectAndCipher_19,jwe_tag_55,ipx_b_mods_9,modifications_17) in
        {949}event ipxRecvR3(n32f_context_27,msg_id_27,jwe_tag_55,modifications_17);
        {950}out(n32f_a, (sepp_a_addr_15,modified_message_17))
    ) | (
        {1356}out(a_32, ());
        {1355}in(c_32, ());
        {952}!
        {953}in(n32f_a, (=sepp_a_addr,prins_messsage_2: modprins));
        {954}let prins''(jwe_headers_20: bitstring,nonce_56: bitstring,dataToIntegrityProtect_20: aad,dataToIntegrityProtectAndCipher_20: bitstring,jwe_tag_56: mac,ipx_b_mods_10: ipxmod,ipx_a_mods_6: ipxmod) = prins_messsage_2 in
        {955}let combineAAD(source_addr_24: bitstring,destination_addr_24: bitstring,msg_type_26: bitstring,nonconf_24: bitstring,msg_id_28: nat,auth_ipx_id_16: bitstring,n32f_context'_6: bitstring) = dataToIntegrityProtect_20 in
        {956}event recvN32fMsgSeppA(n32f_context'_6,msg_id_28,dataToIntegrityProtectAndCipher_20,dataToIntegrityProtect_20);
        {1121}get storeSeppA(sepp_b_plmn_6: bitstring,sepp_b_addr_14: bitstring,n32f_context_28: bitstring,msg_cnt_a_7: nat,par_req_key_a_8: key,par_res_key_a_8: key,rev_req_key_a_8: key,rev_res_key_a_8: key,par_req_iv_a_7: bitstring,par_res_iv_a_7: bitstring,rev_req_iv_a_7: bitstring,rev_res_iv_a_7: bitstring,ciphers_a_6: bitstring,encp_a_5: bitstring,modp_a_13: bitstring,modp_b_13: bitstring,ipx_a_id_13: bitstring,ipx_a_key_12: pubkey,ipx_b_id_13: bitstring,ipx_b_key_12: pubkey) suchthat (n32f_context'_6 = n32f_context_28) in
        {957}let v_24: bool = (msg_type_26 = REQ) in
        (
            {958}if v_24 then
            (
                {959}let key_19: key = rev_req_key_a_8 in
                {960}let v_25: bool = (msg_type_26 = REQ) in
                (
                    {961}if v_25 then
                    (
                        {962}let nonce_57: bitstring = deriveNonce(rev_req_iv_a_7,msg_id_28) in
                        {963}let conf_23: bitstring = aeadDecrypt(key_19,nonce_57,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                        {964}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_18: bitstring) = ipx_b_mods_10 in
                        {965}if not(validPrinsSign(ipx_b_jws_18,ipx_b_key_12)) then
                            {966}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                            {967}out(err_a, (n32f_context_28,msg_id_28))
                        else
                            {968}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                            {969}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_18: bitstring) = ipx_a_mods_6 in
                            {970}if not(validPrinsModSign(ipx_a_jws_18,ipx_a_key_12)) then
                                {971}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                                {972}out(err_a, (n32f_context_28,msg_id_28))
                            else
                                {973}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                                {974}if (validPrinsModSign(ipx_a_jws_18,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_18,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                                {975}let msg_body_26: bitstring = applyPatches((conf_23,nonconf_24),modp_b_13,modp_a_13) in
                                {976}let http_message_24: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_26) in
                                {977}event sendHttpMsgSeppA(msg_type_26,msg_body_26);
                                {978}out(plmn_a, (RECV,http_message_24))
                    )
                    else
                        {979}let nonce_58: bitstring = deriveNonce(rev_res_iv_a_7,msg_id_28) in
                        {980}let conf_24: bitstring = aeadDecrypt(key_19,nonce_58,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                        {981}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_19: bitstring) = ipx_b_mods_10 in
                        {982}if not(validPrinsSign(ipx_b_jws_19,ipx_b_key_12)) then
                            {983}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                            {984}out(err_a, (n32f_context_28,msg_id_28))
                        else
                            {985}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                            {986}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_19: bitstring) = ipx_a_mods_6 in
                            {987}if not(validPrinsModSign(ipx_a_jws_19,ipx_a_key_12)) then
                                {988}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                                {989}out(err_a, (n32f_context_28,msg_id_28))
                            else
                                {990}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                                {991}if (validPrinsModSign(ipx_a_jws_19,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_19,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                                {992}let msg_body_27: bitstring = applyPatches((conf_24,nonconf_24),modp_b_13,modp_a_13) in
                                {993}let http_message_25: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_27) in
                                {994}event sendHttpMsgSeppA(msg_type_26,msg_body_27);
                                {995}out(plmn_a, (RECV,http_message_25))
                )
                else
                    {996}let nonce_59: bitstring = fail-any in
                    {997}let conf_25: bitstring = aeadDecrypt(key_19,nonce_59,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                    {998}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_20: bitstring) = ipx_b_mods_10 in
                    {999}if not(validPrinsSign(ipx_b_jws_20,ipx_b_key_12)) then
                        {1000}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {1001}out(err_a, (n32f_context_28,msg_id_28))
                    else
                        {1002}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {1003}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_20: bitstring) = ipx_a_mods_6 in
                        {1004}if not(validPrinsModSign(ipx_a_jws_20,ipx_a_key_12)) then
                            {1005}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {1006}out(err_a, (n32f_context_28,msg_id_28))
                        else
                            {1007}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {1008}if (validPrinsModSign(ipx_a_jws_20,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_20,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                            {1009}let msg_body_28: bitstring = applyPatches((conf_25,nonconf_24),modp_b_13,modp_a_13) in
                            {1010}let http_message_26: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_28) in
                            {1011}event sendHttpMsgSeppA(msg_type_26,msg_body_28);
                            {1012}out(plmn_a, (RECV,http_message_26))
            )
            else
                {1013}let key_20: key = rev_res_key_a_8 in
                {1014}let v_26: bool = (msg_type_26 = REQ) in
                (
                    {1015}if v_26 then
                    (
                        {1016}let nonce_60: bitstring = deriveNonce(rev_req_iv_a_7,msg_id_28) in
                        {1017}let conf_26: bitstring = aeadDecrypt(key_20,nonce_60,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                        {1018}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_21: bitstring) = ipx_b_mods_10 in
                        {1019}if not(validPrinsSign(ipx_b_jws_21,ipx_b_key_12)) then
                            {1020}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                            {1021}out(err_a, (n32f_context_28,msg_id_28))
                        else
                            {1022}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                            {1023}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_21: bitstring) = ipx_a_mods_6 in
                            {1024}if not(validPrinsModSign(ipx_a_jws_21,ipx_a_key_12)) then
                                {1025}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                                {1026}out(err_a, (n32f_context_28,msg_id_28))
                            else
                                {1027}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                                {1028}if (validPrinsModSign(ipx_a_jws_21,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_21,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                                {1029}let msg_body_29: bitstring = applyPatches((conf_26,nonconf_24),modp_b_13,modp_a_13) in
                                {1030}let http_message_27: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_29) in
                                {1031}event sendHttpMsgSeppA(msg_type_26,msg_body_29);
                                {1032}out(plmn_a, (RECV,http_message_27))
                    )
                    else
                        {1033}let nonce_61: bitstring = deriveNonce(rev_res_iv_a_7,msg_id_28) in
                        {1034}let conf_27: bitstring = aeadDecrypt(key_20,nonce_61,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                        {1035}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_22: bitstring) = ipx_b_mods_10 in
                        {1036}if not(validPrinsSign(ipx_b_jws_22,ipx_b_key_12)) then
                            {1037}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                            {1038}out(err_a, (n32f_context_28,msg_id_28))
                        else
                            {1039}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                            {1040}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_22: bitstring) = ipx_a_mods_6 in
                            {1041}if not(validPrinsModSign(ipx_a_jws_22,ipx_a_key_12)) then
                                {1042}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                                {1043}out(err_a, (n32f_context_28,msg_id_28))
                            else
                                {1044}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                                {1045}if (validPrinsModSign(ipx_a_jws_22,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_22,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                                {1046}let msg_body_30: bitstring = applyPatches((conf_27,nonconf_24),modp_b_13,modp_a_13) in
                                {1047}let http_message_28: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_30) in
                                {1048}event sendHttpMsgSeppA(msg_type_26,msg_body_30);
                                {1049}out(plmn_a, (RECV,http_message_28))
                )
                else
                    {1050}let nonce_62: bitstring = fail-any in
                    {1051}let conf_28: bitstring = aeadDecrypt(key_20,nonce_62,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                    {1052}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_23: bitstring) = ipx_b_mods_10 in
                    {1053}if not(validPrinsSign(ipx_b_jws_23,ipx_b_key_12)) then
                        {1054}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {1055}out(err_a, (n32f_context_28,msg_id_28))
                    else
                        {1056}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {1057}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_23: bitstring) = ipx_a_mods_6 in
                        {1058}if not(validPrinsModSign(ipx_a_jws_23,ipx_a_key_12)) then
                            {1059}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {1060}out(err_a, (n32f_context_28,msg_id_28))
                        else
                            {1061}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {1062}if (validPrinsModSign(ipx_a_jws_23,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_23,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                            {1063}let msg_body_31: bitstring = applyPatches((conf_28,nonconf_24),modp_b_13,modp_a_13) in
                            {1064}let http_message_29: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_31) in
                            {1065}event sendHttpMsgSeppA(msg_type_26,msg_body_31);
                            {1066}out(plmn_a, (RECV,http_message_29))
        )
        else
            {1067}let key_21: key = fail-any in
            {1068}let v_27: bool = (msg_type_26 = REQ) in
            (
                {1069}if v_27 then
                (
                    {1070}let nonce_63: bitstring = deriveNonce(rev_req_iv_a_7,msg_id_28) in
                    {1071}let conf_29: bitstring = aeadDecrypt(key_21,nonce_63,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                    {1072}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_24: bitstring) = ipx_b_mods_10 in
                    {1073}if not(validPrinsSign(ipx_b_jws_24,ipx_b_key_12)) then
                        {1074}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {1075}out(err_a, (n32f_context_28,msg_id_28))
                    else
                        {1076}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {1077}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_24: bitstring) = ipx_a_mods_6 in
                        {1078}if not(validPrinsModSign(ipx_a_jws_24,ipx_a_key_12)) then
                            {1079}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {1080}out(err_a, (n32f_context_28,msg_id_28))
                        else
                            {1081}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {1082}if (validPrinsModSign(ipx_a_jws_24,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_24,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                            {1083}let msg_body_32: bitstring = applyPatches((conf_29,nonconf_24),modp_b_13,modp_a_13) in
                            {1084}let http_message_30: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_32) in
                            {1085}event sendHttpMsgSeppA(msg_type_26,msg_body_32);
                            {1086}out(plmn_a, (RECV,http_message_30))
                )
                else
                    {1087}let nonce_64: bitstring = deriveNonce(rev_res_iv_a_7,msg_id_28) in
                    {1088}let conf_30: bitstring = aeadDecrypt(key_21,nonce_64,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                    {1089}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_25: bitstring) = ipx_b_mods_10 in
                    {1090}if not(validPrinsSign(ipx_b_jws_25,ipx_b_key_12)) then
                        {1091}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {1092}out(err_a, (n32f_context_28,msg_id_28))
                    else
                        {1093}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                        {1094}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_25: bitstring) = ipx_a_mods_6 in
                        {1095}if not(validPrinsModSign(ipx_a_jws_25,ipx_a_key_12)) then
                            {1096}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {1097}out(err_a, (n32f_context_28,msg_id_28))
                        else
                            {1098}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                            {1099}if (validPrinsModSign(ipx_a_jws_25,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_25,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                            {1100}let msg_body_33: bitstring = applyPatches((conf_30,nonconf_24),modp_b_13,modp_a_13) in
                            {1101}let http_message_31: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_33) in
                            {1102}event sendHttpMsgSeppA(msg_type_26,msg_body_33);
                            {1103}out(plmn_a, (RECV,http_message_31))
            )
            else
                {1104}let nonce_65: bitstring = fail-any in
                {1105}let conf_31: bitstring = aeadDecrypt(key_21,nonce_65,(dataToIntegrityProtectAndCipher_20,jwe_tag_56),dataToIntegrityProtect_20) in
                {1106}let jsonPatch(=modp_b_13,=auth_ipx_id_16,=jwe_tag_56,ipx_b_jws_26: bitstring) = ipx_b_mods_10 in
                {1107}if not(validPrinsSign(ipx_b_jws_26,ipx_b_key_12)) then
                    {1108}event recvInvalIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    {1109}out(err_a, (n32f_context_28,msg_id_28))
                else
                    {1110}event recvValidIpxPatchSeppA(auth_ipx_id_16,n32f_context_28,msg_id_28,jwe_tag_56,ipx_b_mods_10);
                    {1111}let jsonPatch(=modp_a_13,=ipx_a_id_13,=jwe_tag_56,ipx_a_jws_26: bitstring) = ipx_a_mods_6 in
                    {1112}if not(validPrinsModSign(ipx_a_jws_26,ipx_a_key_12)) then
                        {1113}event recvInvalIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        {1114}out(err_a, (n32f_context_28,msg_id_28))
                    else
                        {1115}event recvValidIpxPatchSeppA(ipx_a_id_13,n32f_context_28,msg_id_28,jwe_tag_56,ipx_a_mods_6);
                        {1116}if (validPrinsModSign(ipx_a_jws_26,ipx_a_key_12) && (validPrinsSign(ipx_b_jws_26,ipx_b_key_12) && policyValidation(nonconf_24,encp_a_5))) then
                        {1117}let msg_body_34: bitstring = applyPatches((conf_31,nonconf_24),modp_b_13,modp_a_13) in
                        {1118}let http_message_32: http = createHttp(source_addr_24,destination_addr_24,msg_type_26,msg_body_34) in
                        {1119}event sendHttpMsgSeppA(msg_type_26,msg_body_34);
                        {1120}out(plmn_a, (RECV,http_message_32))
    ) | (
        {1354}out(a_33, ());
        {1353}in(c_33, ());
        {1123}!
        {1124}in(n32f_b, (=sepp_b_addr,prins_messsage_3: modprins));
        {1125}let prins''(jwe_headers_21: bitstring,nonce_66: bitstring,dataToIntegrityProtect_21: aad,dataToIntegrityProtectAndCipher_21: bitstring,jwe_tag_57: mac,ipx_a_mods_7: ipxmod,ipx_b_mods_11: ipxmod) = prins_messsage_3 in
        {1126}let combineAAD(source_addr_25: bitstring,destination_addr_25: bitstring,msg_type_27: bitstring,nonconf_25: bitstring,msg_id_29: nat,auth_ipx_id_17: bitstring,n32f_context'_7: bitstring) = dataToIntegrityProtect_21 in
        {1127}event recvN32fMsgSeppB(n32f_context'_7,msg_id_29,dataToIntegrityProtectAndCipher_21,dataToIntegrityProtect_21);
        {1292}get storeSeppB(sepp_a_plmn_6: bitstring,sepp_a_addr_16: bitstring,n32f_context_29: bitstring,msg_cnt_b_7: nat,par_req_key_b_8: key,par_res_key_b_8: key,rev_req_key_b_8: key,rev_res_key_b_8: key,par_req_iv_b_7: bitstring,par_res_iv_b_7: bitstring,rev_req_iv_b_7: bitstring,rev_res_iv_b_7: bitstring,ciphers_b_6: bitstring,encp_b_5: bitstring,modp_b_14: bitstring,modp_a_14: bitstring,ipx_b_id_14: bitstring,ipx_b_key_13: pubkey,ipx_a_id_14: bitstring,ipx_a_key_13: pubkey) suchthat (n32f_context'_7 = n32f_context_29) in
        {1128}let v_28: bool = (msg_type_27 = REQ) in
        (
            {1129}if v_28 then
            (
                {1130}let key_22: key = rev_req_key_b_8 in
                {1131}let v_29: bool = (msg_type_27 = REQ) in
                (
                    {1132}if v_29 then
                    (
                        {1133}let nonce_67: bitstring = deriveNonce(rev_req_iv_b_7,msg_id_29) in
                        {1134}let conf_32: bitstring = aeadDecrypt(key_22,nonce_67,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                        {1135}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_27: bitstring) = ipx_a_mods_7 in
                        {1136}if not(validPrinsSign(ipx_a_jws_27,ipx_a_key_13)) then
                            {1137}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                            {1138}out(err_b, (n32f_context_29,msg_id_29))
                        else
                            {1139}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                            {1140}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_27: bitstring) = ipx_b_mods_11 in
                            {1141}if not(validPrinsModSign(ipx_b_jws_27,ipx_b_key_13)) then
                                {1142}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                                {1143}out(err_b, (n32f_context_29,msg_id_29))
                            else
                                {1144}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                                {1145}if (validPrinsSign(ipx_a_jws_27,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_27,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                                {1146}let msg_body_35: bitstring = applyPatches((conf_32,nonconf_25),modp_a_14,modp_b_14) in
                                {1147}let http_message_33: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_35) in
                                {1148}event sendHttpMsgSeppB(msg_type_27,msg_body_35);
                                {1149}out(plmn_b, (RECV,http_message_33))
                    )
                    else
                        {1150}let nonce_68: bitstring = deriveNonce(rev_res_iv_b_7,msg_id_29) in
                        {1151}let conf_33: bitstring = aeadDecrypt(key_22,nonce_68,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                        {1152}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_28: bitstring) = ipx_a_mods_7 in
                        {1153}if not(validPrinsSign(ipx_a_jws_28,ipx_a_key_13)) then
                            {1154}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                            {1155}out(err_b, (n32f_context_29,msg_id_29))
                        else
                            {1156}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                            {1157}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_28: bitstring) = ipx_b_mods_11 in
                            {1158}if not(validPrinsModSign(ipx_b_jws_28,ipx_b_key_13)) then
                                {1159}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                                {1160}out(err_b, (n32f_context_29,msg_id_29))
                            else
                                {1161}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                                {1162}if (validPrinsSign(ipx_a_jws_28,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_28,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                                {1163}let msg_body_36: bitstring = applyPatches((conf_33,nonconf_25),modp_a_14,modp_b_14) in
                                {1164}let http_message_34: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_36) in
                                {1165}event sendHttpMsgSeppB(msg_type_27,msg_body_36);
                                {1166}out(plmn_b, (RECV,http_message_34))
                )
                else
                    {1167}let nonce_69: bitstring = fail-any in
                    {1168}let conf_34: bitstring = aeadDecrypt(key_22,nonce_69,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                    {1169}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_29: bitstring) = ipx_a_mods_7 in
                    {1170}if not(validPrinsSign(ipx_a_jws_29,ipx_a_key_13)) then
                        {1171}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1172}out(err_b, (n32f_context_29,msg_id_29))
                    else
                        {1173}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1174}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_29: bitstring) = ipx_b_mods_11 in
                        {1175}if not(validPrinsModSign(ipx_b_jws_29,ipx_b_key_13)) then
                            {1176}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1177}out(err_b, (n32f_context_29,msg_id_29))
                        else
                            {1178}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1179}if (validPrinsSign(ipx_a_jws_29,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_29,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                            {1180}let msg_body_37: bitstring = applyPatches((conf_34,nonconf_25),modp_a_14,modp_b_14) in
                            {1181}let http_message_35: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_37) in
                            {1182}event sendHttpMsgSeppB(msg_type_27,msg_body_37);
                            {1183}out(plmn_b, (RECV,http_message_35))
            )
            else
                {1184}let key_23: key = rev_res_key_b_8 in
                {1185}let v_30: bool = (msg_type_27 = REQ) in
                (
                    {1186}if v_30 then
                    (
                        {1187}let nonce_70: bitstring = deriveNonce(rev_req_iv_b_7,msg_id_29) in
                        {1188}let conf_35: bitstring = aeadDecrypt(key_23,nonce_70,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                        {1189}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_30: bitstring) = ipx_a_mods_7 in
                        {1190}if not(validPrinsSign(ipx_a_jws_30,ipx_a_key_13)) then
                            {1191}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                            {1192}out(err_b, (n32f_context_29,msg_id_29))
                        else
                            {1193}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                            {1194}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_30: bitstring) = ipx_b_mods_11 in
                            {1195}if not(validPrinsModSign(ipx_b_jws_30,ipx_b_key_13)) then
                                {1196}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                                {1197}out(err_b, (n32f_context_29,msg_id_29))
                            else
                                {1198}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                                {1199}if (validPrinsSign(ipx_a_jws_30,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_30,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                                {1200}let msg_body_38: bitstring = applyPatches((conf_35,nonconf_25),modp_a_14,modp_b_14) in
                                {1201}let http_message_36: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_38) in
                                {1202}event sendHttpMsgSeppB(msg_type_27,msg_body_38);
                                {1203}out(plmn_b, (RECV,http_message_36))
                    )
                    else
                        {1204}let nonce_71: bitstring = deriveNonce(rev_res_iv_b_7,msg_id_29) in
                        {1205}let conf_36: bitstring = aeadDecrypt(key_23,nonce_71,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                        {1206}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_31: bitstring) = ipx_a_mods_7 in
                        {1207}if not(validPrinsSign(ipx_a_jws_31,ipx_a_key_13)) then
                            {1208}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                            {1209}out(err_b, (n32f_context_29,msg_id_29))
                        else
                            {1210}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                            {1211}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_31: bitstring) = ipx_b_mods_11 in
                            {1212}if not(validPrinsModSign(ipx_b_jws_31,ipx_b_key_13)) then
                                {1213}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                                {1214}out(err_b, (n32f_context_29,msg_id_29))
                            else
                                {1215}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                                {1216}if (validPrinsSign(ipx_a_jws_31,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_31,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                                {1217}let msg_body_39: bitstring = applyPatches((conf_36,nonconf_25),modp_a_14,modp_b_14) in
                                {1218}let http_message_37: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_39) in
                                {1219}event sendHttpMsgSeppB(msg_type_27,msg_body_39);
                                {1220}out(plmn_b, (RECV,http_message_37))
                )
                else
                    {1221}let nonce_72: bitstring = fail-any in
                    {1222}let conf_37: bitstring = aeadDecrypt(key_23,nonce_72,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                    {1223}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_32: bitstring) = ipx_a_mods_7 in
                    {1224}if not(validPrinsSign(ipx_a_jws_32,ipx_a_key_13)) then
                        {1225}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1226}out(err_b, (n32f_context_29,msg_id_29))
                    else
                        {1227}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1228}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_32: bitstring) = ipx_b_mods_11 in
                        {1229}if not(validPrinsModSign(ipx_b_jws_32,ipx_b_key_13)) then
                            {1230}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1231}out(err_b, (n32f_context_29,msg_id_29))
                        else
                            {1232}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1233}if (validPrinsSign(ipx_a_jws_32,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_32,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                            {1234}let msg_body_40: bitstring = applyPatches((conf_37,nonconf_25),modp_a_14,modp_b_14) in
                            {1235}let http_message_38: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_40) in
                            {1236}event sendHttpMsgSeppB(msg_type_27,msg_body_40);
                            {1237}out(plmn_b, (RECV,http_message_38))
        )
        else
            {1238}let key_24: key = fail-any in
            {1239}let v_31: bool = (msg_type_27 = REQ) in
            (
                {1240}if v_31 then
                (
                    {1241}let nonce_73: bitstring = deriveNonce(rev_req_iv_b_7,msg_id_29) in
                    {1242}let conf_38: bitstring = aeadDecrypt(key_24,nonce_73,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                    {1243}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_33: bitstring) = ipx_a_mods_7 in
                    {1244}if not(validPrinsSign(ipx_a_jws_33,ipx_a_key_13)) then
                        {1245}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1246}out(err_b, (n32f_context_29,msg_id_29))
                    else
                        {1247}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1248}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_33: bitstring) = ipx_b_mods_11 in
                        {1249}if not(validPrinsModSign(ipx_b_jws_33,ipx_b_key_13)) then
                            {1250}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1251}out(err_b, (n32f_context_29,msg_id_29))
                        else
                            {1252}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1253}if (validPrinsSign(ipx_a_jws_33,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_33,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                            {1254}let msg_body_41: bitstring = applyPatches((conf_38,nonconf_25),modp_a_14,modp_b_14) in
                            {1255}let http_message_39: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_41) in
                            {1256}event sendHttpMsgSeppB(msg_type_27,msg_body_41);
                            {1257}out(plmn_b, (RECV,http_message_39))
                )
                else
                    {1258}let nonce_74: bitstring = deriveNonce(rev_res_iv_b_7,msg_id_29) in
                    {1259}let conf_39: bitstring = aeadDecrypt(key_24,nonce_74,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                    {1260}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_34: bitstring) = ipx_a_mods_7 in
                    {1261}if not(validPrinsSign(ipx_a_jws_34,ipx_a_key_13)) then
                        {1262}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1263}out(err_b, (n32f_context_29,msg_id_29))
                    else
                        {1264}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                        {1265}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_34: bitstring) = ipx_b_mods_11 in
                        {1266}if not(validPrinsModSign(ipx_b_jws_34,ipx_b_key_13)) then
                            {1267}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1268}out(err_b, (n32f_context_29,msg_id_29))
                        else
                            {1269}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                            {1270}if (validPrinsSign(ipx_a_jws_34,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_34,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                            {1271}let msg_body_42: bitstring = applyPatches((conf_39,nonconf_25),modp_a_14,modp_b_14) in
                            {1272}let http_message_40: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_42) in
                            {1273}event sendHttpMsgSeppB(msg_type_27,msg_body_42);
                            {1274}out(plmn_b, (RECV,http_message_40))
            )
            else
                {1275}let nonce_75: bitstring = fail-any in
                {1276}let conf_40: bitstring = aeadDecrypt(key_24,nonce_75,(dataToIntegrityProtectAndCipher_21,jwe_tag_57),dataToIntegrityProtect_21) in
                {1277}let jsonPatch(=modp_a_14,=auth_ipx_id_17,=jwe_tag_57,ipx_a_jws_35: bitstring) = ipx_a_mods_7 in
                {1278}if not(validPrinsSign(ipx_a_jws_35,ipx_a_key_13)) then
                    {1279}event recvInvalIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    {1280}out(err_b, (n32f_context_29,msg_id_29))
                else
                    {1281}event recvValidIpxPatchSeppB(auth_ipx_id_17,n32f_context_29,msg_id_29,jwe_tag_57,ipx_a_mods_7);
                    {1282}let jsonPatch(=modp_b_14,=ipx_b_id_14,=jwe_tag_57,ipx_b_jws_35: bitstring) = ipx_b_mods_11 in
                    {1283}if not(validPrinsModSign(ipx_b_jws_35,ipx_b_key_13)) then
                        {1284}event recvInvalIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        {1285}out(err_b, (n32f_context_29,msg_id_29))
                    else
                        {1286}event recvValidIpxPatchSeppB(ipx_b_id_14,n32f_context_29,msg_id_29,jwe_tag_57,ipx_b_mods_11);
                        {1287}if (validPrinsSign(ipx_a_jws_35,ipx_a_key_13) && (validPrinsModSign(ipx_b_jws_35,ipx_b_key_13) && policyValidation(nonconf_25,encp_b_5))) then
                        {1288}let msg_body_43: bitstring = applyPatches((conf_40,nonconf_25),modp_a_14,modp_b_14) in
                        {1289}let http_message_41: http = createHttp(source_addr_25,destination_addr_25,msg_type_27,msg_body_43) in
                        {1290}event sendHttpMsgSeppB(msg_type_27,msg_body_43);
                        {1291}out(plmn_b, (RECV,http_message_41))
    ) | (
        {1352}out(a_34, ());
        {1351}in(c_34, ());
        {1294}!
        {1295}in(plmn_a, (=RECV,msg_2: http));
        {1296}let createHttp(nf_b_addr_2: bitstring,=nf_a_addr,msg_type_28: bitstring,msg_body_44: bitstring) = msg_2 in
        {1297}if (msg_type_28 = REQ) then
            {1298}event sendHttpMsgNfA(RES,msg_body_44);
            {1299}out(plmn_a, (SEND,createHttp(nf_a_addr,nf_b_addr_2,RES,msg_body_44)))
        else
            {1300}event recvHttpMsgNfA(RES,msg_body_44)
    ) | (
        {1350}out(a_35, ());
        {1349}in(c_35, ());
        {1302}!
        {1303}in(plmn_b, (=RECV,msg_3: http));
        {1304}let createHttp(nf_a_addr_2: bitstring,=nf_b_addr,msg_type_29: bitstring,msg_body_45: bitstring) = msg_3 in
        {1305}if (msg_type_29 = REQ) then
            {1306}event sendHttpMsgNfB(RES,msg_body_45);
            {1307}out(plmn_b, (SEND,createHttp(nf_b_addr,nf_a_addr_2,RES,msg_body_45)))
        else
            {1308}event recvHttpMsgNfB(RES,msg_body_45)
    ) | (
        {1348}out(a_36, ());
        {1347}in(c_36, ());
        {1310}!
        {1311}in(err_a, (n32f_context'_8: bitstring,msg_id_30: nat));
        {1315}get storeSeppA(sepp_b_plmn_7: bitstring,sepp_b_addr_15: bitstring,n32f_context_30: bitstring,msg_cnt_a_8: nat,par_req_key_a_9: key,par_res_key_a_9: key,rev_req_key_a_9: key,rev_res_key_a_9: key,par_req_iv_a_8: bitstring,par_res_iv_a_8: bitstring,rev_req_iv_a_8: bitstring,rev_res_iv_a_8: bitstring,ciphers_a_7: bitstring,encp_a_6: bitstring,modp_a_15: bitstring,modp_b_15: bitstring,ipx_a_id_15: bitstring,ipx_a_key_14: pubkey,ipx_b_id_15: bitstring,ipx_b_key_14: pubkey) suchthat (n32f_context'_8 = n32f_context_30) in
        {1312}out(n32c_a, (sepp_b_addr_15,n32f_context_30,msg_id_30));
        {1313}in(n32c_a, (=sepp_a_addr,=n32f_context_30,=msg_id_30,status_code_2: bitstring));
        {1314}event sendErrorSeppA(n32f_context_30,msg_id_30,status_code_2)
    ) | (
        {1346}out(a_37, ());
        {1345}in(c_37, ());
        {1317}!
        {1318}in(n32c_b, (=sepp_a_addr,n32f_context'_9: bitstring,msg_id_31: nat));
        {1324}get storeSeppA(sepp_b_plmn_8: bitstring,sepp_b_addr_16: bitstring,n32f_context_31: bitstring,msg_cnt_a_9: nat,par_req_key_a_10: key,par_res_key_a_10: key,rev_req_key_a_10: key,rev_res_key_a_10: key,par_req_iv_a_9: bitstring,par_res_iv_a_9: bitstring,rev_req_iv_a_9: bitstring,rev_res_iv_a_9: bitstring,ciphers_a_8: bitstring,encp_a_7: bitstring,modp_a_16: bitstring,modp_b_16: bitstring,ipx_a_id_16: bitstring,ipx_a_key_15: pubkey,ipx_b_id_16: bitstring,ipx_b_key_15: pubkey) suchthat (n32f_context'_9 = n32f_context_31) in
        {1319}if (msg_id_31 ≤ msg_cnt_a_9) then
            {1320}out(n32c_b, (sepp_b_addr_16,n32f_context_31,msg_id_31,SUCC));
            {1321}event recvErrorSeppA(n32f_context_31,msg_id_31,SUCC)
        else
            {1322}out(n32c_b, (sepp_b_addr_16,n32f_context_31,msg_id_31,FAIL));
            {1323}event recvErrorSeppA(n32f_context_31,msg_id_31,FAIL)
    ) | (
        {1344}out(a_38, ());
        {1343}in(c_38, ());
        {1326}!
        {1327}in(err_b, (n32f_context'_10: bitstring,msg_id_32: nat));
        {1331}get storeSeppB(sepp_a_plmn_7: bitstring,sepp_a_addr_17: bitstring,n32f_context_32: bitstring,msg_cnt_b_8: nat,par_req_key_b_9: key,par_res_key_b_9: key,rev_req_key_b_9: key,rev_res_key_b_9: key,par_req_iv_b_8: bitstring,par_res_iv_b_8: bitstring,rev_req_iv_b_8: bitstring,rev_res_iv_b_8: bitstring,ciphers_b_7: bitstring,encp_b_6: bitstring,modp_b_17: bitstring,modp_a_17: bitstring,ipx_b_id_17: bitstring,ipx_b_key_16: pubkey,ipx_a_id_17: bitstring,ipx_a_key_16: pubkey) suchthat (n32f_context'_10 = n32f_context_32) in
        {1328}out(n32c_b, (sepp_a_addr_17,n32f_context_32,msg_id_32));
        {1329}in(n32c_b, (=sepp_b_addr,=n32f_context_32,=msg_id_32,status_code_3: bitstring));
        {1330}event sendErrorSeppB(n32f_context_32,msg_id_32,status_code_3)
    ) | (
        {1342}out(a_39, ());
        {1341}in(c_39, ());
        {1333}!
        {1334}in(n32c_a, (=sepp_b_addr,n32f_context'_11: bitstring,msg_id_33: nat));
        {1340}get storeSeppB(sepp_a_plmn_8: bitstring,sepp_a_addr_18: bitstring,n32f_context_33: bitstring,msg_cnt_b_9: nat,par_req_key_b_10: key,par_res_key_b_10: key,rev_req_key_b_10: key,rev_res_key_b_10: key,par_req_iv_b_9: bitstring,par_res_iv_b_9: bitstring,rev_req_iv_b_9: bitstring,rev_res_iv_b_9: bitstring,ciphers_b_8: bitstring,encp_b_7: bitstring,modp_b_18: bitstring,modp_a_18: bitstring,ipx_b_id_18: bitstring,ipx_b_key_17: pubkey,ipx_a_id_18: bitstring,ipx_a_key_17: pubkey) suchthat (n32f_context'_11 = n32f_context_33) in
        {1335}if (msg_id_33 ≤ msg_cnt_b_9) then
            {1336}out(n32c_a, (sepp_a_addr_18,n32f_context_33,msg_id_33,SUCC));
            {1337}event recvErrorSeppB(n32f_context_33,msg_id_33,SUCC)
        else
            {1338}out(n32c_a, (sepp_a_addr_18,n32f_context_33,msg_id_33,FAIL));
            {1339}event recvErrorSeppB(n32f_context_33,msg_id_33,FAIL)
    )
) | (
    {1500}in(a_3, ());
    {1499}in(a_2, ());
    {1498}in(a_1, ());
    {1497}in(a, ());
    {1496}out(c_3, ());
    {1495}out(c_2, ());
    {1494}out(c_1, ());
    {1493}out(c, ());
    {1492}in(a_12, ());
    {1491}in(a_11, ());
    {1490}in(a_10, ());
    {1489}in(a_9, ());
    {1488}in(a_8, ());
    {1487}in(a_7, ());
    {1486}in(a_6, ());
    {1485}in(a_5, ());
    {1484}in(a_4, ());
    {1483}out(c_12, ());
    {1482}out(c_11, ());
    {1481}out(c_10, ());
    {1480}out(c_9, ());
    {1479}out(c_8, ());
    {1478}out(c_7, ());
    {1477}out(c_6, ());
    {1476}out(c_5, ());
    {1475}out(c_4, ());
    {1474}in(a_22, ());
    {1473}in(a_21, ());
    {1472}in(a_20, ());
    {1471}in(a_19, ());
    {1470}in(a_18, ());
    {1469}in(a_17, ());
    {1468}in(a_16, ());
    {1467}in(a_15, ());
    {1466}in(a_14, ());
    {1465}in(a_13, ());
    {1464}out(c_22, ());
    {1463}out(c_21, ());
    {1462}out(c_20, ());
    {1461}out(c_19, ());
    {1460}out(c_18, ());
    {1459}out(c_17, ());
    {1458}out(c_16, ());
    {1457}out(c_15, ());
    {1456}out(c_14, ());
    {1455}out(c_13, ());
    {1454}in(a_31, ());
    {1453}in(a_30, ());
    {1452}in(a_29, ());
    {1451}in(a_28, ());
    {1450}in(a_27, ());
    {1449}in(a_26, ());
    {1448}in(a_25, ());
    {1447}in(a_24, ());
    {1446}in(a_23, ());
    {1445}out(c_31, ());
    {1444}out(c_30, ());
    {1443}out(c_29, ());
    {1442}out(c_28, ());
    {1441}out(c_27, ());
    {1440}out(c_26, ());
    {1439}out(c_25, ());
    {1438}out(c_24, ());
    {1437}out(c_23, ());
    {1436}in(a_39, ());
    {1435}in(a_38, ());
    {1434}in(a_37, ());
    {1433}in(a_36, ());
    {1432}in(a_35, ());
    {1431}in(a_34, ());
    {1430}in(a_33, ());
    {1429}in(a_32, ());
    {1428}out(c_39, ());
    {1427}out(c_38, ());
    {1426}out(c_37, ());
    {1425}out(c_36, ());
    {1424}out(c_35, ());
    {1423}out(c_34, ());
    {1422}out(c_33, ());
    {1421}out(c_32, ())
)

-- Query inj-event(recvValidIpxPatchSeppA(ipx_b_id_19,n32f_context_34,msg_id_34,jwe_tag_58,ipx_b_mods_12)) && event(recvValidIpxPatchSeppA(ipx_a_id_19,n32f_context_34,msg_id_34,jwe_tag_58,ipx_a_mods_8)) ==> inj-event(ipxRecvA(n32f_context_34,msg_id_34,jwe_tag_58,ipx_a_mods_8)) && inj-event(ipxSendB(n32f_context_34,msg_id_34,jwe_tag_58,ipx_b_mods_12)); inj-event(recvValidIpxPatchSeppB(ipx_a_id_19,n32f_context_34,msg_id_34,jwe_tag_58,ipx_a_mods_8)) && event(recvValidIpxPatchSeppB(ipx_b_id_19,n32f_context_34,msg_id_34,jwe_tag_58,ipx_b_mods_12)) ==> inj-event(ipxRecvB(n32f_context_34,msg_id_34,jwe_tag_58,ipx_b_mods_12)) && inj-event(ipxSendA(n32f_context_34,msg_id_34,jwe_tag_58,ipx_a_mods_8)) in process 1.
Completing...
200 rules inserted. The rule base contains 197 rules. 227 rules in the queue.
400 rules inserted. The rule base contains 357 rules. 180 rules in the queue.
600 rules inserted. The rule base contains 505 rules. 104 rules in the queue.
800 rules inserted. The rule base contains 474 rules. 80 rules in the queue.
1000 rules inserted. The rule base contains 497 rules. 101 rules in the queue.
1200 rules inserted. The rule base contains 530 rules. 255 rules in the queue.
1400 rules inserted. The rule base contains 638 rules. 240 rules in the queue.
1600 rules inserted. The rule base contains 767 rules. 232 rules in the queue.
1800 rules inserted. The rule base contains 891 rules. 196 rules in the queue.
2000 rules inserted. The rule base contains 980 rules. 114 rules in the queue.
2200 rules inserted. The rule base contains 1059 rules. 70 rules in the queue.
2400 rules inserted. The rule base contains 1100 rules. 118 rules in the queue.
2600 rules inserted. The rule base contains 1140 rules. 123 rules in the queue.
2800 rules inserted. The rule base contains 1140 rules. 123 rules in the queue.
3000 rules inserted. The rule base contains 1156 rules. 91 rules in the queue.
3200 rules inserted. The rule base contains 1106 rules. 99 rules in the queue.
3400 rules inserted. The rule base contains 1102 rules. 91 rules in the queue.
3600 rules inserted. The rule base contains 1132 rules. 61 rules in the queue.
3800 rules inserted. The rule base contains 1069 rules. 26 rules in the queue.
4000 rules inserted. The rule base contains 1146 rules. 154 rules in the queue.
4200 rules inserted. The rule base contains 1172 rules. 146 rules in the queue.
4400 rules inserted. The rule base contains 1290 rules. 80 rules in the queue.
4600 rules inserted. The rule base contains 1276 rules. 152 rules in the queue.
4800 rules inserted. The rule base contains 1314 rules. 192 rules in the queue.
5000 rules inserted. The rule base contains 1323 rules. 180 rules in the queue.
5200 rules inserted. The rule base contains 1345 rules. 160 rules in the queue.
5400 rules inserted. The rule base contains 1323 rules. 165 rules in the queue.
5600 rules inserted. The rule base contains 1348 rules. 144 rules in the queue.
5800 rules inserted. The rule base contains 1363 rules. 163 rules in the queue.
6000 rules inserted. The rule base contains 1422 rules. 162 rules in the queue.
6200 rules inserted. The rule base contains 1503 rules. 123 rules in the queue.
6400 rules inserted. The rule base contains 1648 rules. 70 rules in the queue.
6600 rules inserted. The rule base contains 1672 rules. 106 rules in the queue.
6800 rules inserted. The rule base contains 1672 rules. 106 rules in the queue.
7000 rules inserted. The rule base contains 1672 rules. 106 rules in the queue.
7200 rules inserted. The rule base contains 1703 rules. 75 rules in the queue.
Starting query inj-event(recvValidIpxPatchSeppA(ipx_b_id_19,n32f_context_34,msg_id_34,jwe_tag_58,ipx_b_mods_12)) && event(recvValidIpxPatchSeppA(ipx_a_id_19,n32f_context_34,msg_id_34,jwe_tag_58,ipx_a_mods_8)) ==> inj-event(ipxRecvA(n32f_context_34,msg_id_34,jwe_tag_58,ipx_a_mods_8)) && inj-event(ipxSendB(n32f_context_34,msg_id_34,jwe_tag_58,ipx_b_mods_12))
200 rules inserted. The rule base contains 200 rules. 233 rules in the queue.
400 rules inserted. The rule base contains 400 rules. 33 rules in the queue.
goal reachable: attacker(jwe_headers_22) && attacker(nonce_76) && begin(ipxSendB(n32f_context_34,msg_id_34,tag,jsonPatch(modp_b[],ipx_b_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[]))),@occ299_1) && attacker(sepp_a_addr_19) && attacker(jwe_headers_23) && attacker(iv_18) && attacker(source_addr_26) && attacker(destination_addr_26) && attacker(msg_type_30) && attacker(nonconf_26) && attacker(msg_id_34) && attacker(n32f_context_34) && attacker(dataToIntegrityProtectAndCipher_22) && attacker(tag) && attacker(jwe_headers_24) && attacker(iv_19) && attacker(source_addr_27) && attacker(destination_addr_27) && attacker(msg_type_31) && attacker(nonconf_27) && attacker(msg_id_35) && attacker(auth_ipx_id_18) && attacker(n32f_context_35) && attacker(dataToIntegrityProtectAndCipher_23) && attacker(t) && attacker(ipx_b_mods_12) && attacker(jwe_headers_25) && attacker(nonce_77) && begin(ipxSendB(n32f_context_36,msg_id_36,tag_1,jsonPatch(modp_b[],ipx_b_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[]))),@occ299_2) && attacker(sepp_a_addr_20) && attacker(jwe_headers_26) && attacker(iv_20) && attacker(source_addr_28) && attacker(destination_addr_28) && attacker(msg_type_32) && attacker(nonconf_28) && attacker(msg_id_36) && attacker(n32f_context_36) && attacker(dataToIntegrityProtectAndCipher_24) && attacker(tag_1) && begin(ipxRecvB(n32f_context_37,msg_id_37,t_1,jsonPatch(modp_b[],ipx_b_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]))),@occ894_1) && attacker(sepp_b_addr_17) && attacker(jwe_headers_27) && attacker(iv_21) && attacker(source_addr_29) && attacker(destination_addr_29) && attacker(msg_type_33) && attacker(nonconf_29) && attacker(msg_id_37) && attacker(auth_ipx_id_19) && attacker(n32f_context_37) && attacker(dataToIntegrityProtectAndCipher_25) && attacker(t_1) && attacker(ipx_a_mods_8) && attacker(jwe_headers_28) && attacker(iv_22) && attacker(source_addr_30) && attacker(destination_addr_30) && attacker(msg_type_34) && attacker(nonconf_30) && attacker(msg_id_38) && attacker(auth_ipx_id_20) && attacker(n32f_context_38) && attacker(dataToIntegrityProtectAndCipher_26) && attacker(t_2) && attacker(ipx_b_mods_13) -> end(@occ440_1,recvValidIpxPatchSeppA(ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[])))) && end(@occ440_2,recvValidIpxPatchSeppA(ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[]))))
Abbreviations:
msg_body_46 = msg_body[!1 = @sid]
@occ440_1 = @occ440[ipx_b_key_4 = pk(ipx_b_privkey[]),ipx_b_id_5 = ipx_b_id[],ipx_a_key_4 = pk(ipx_a_privkey[]),ipx_a_id_5 = ipx_a_id[],modp_b_5 = modp_b[],modp_a_5 = modp_a[],encp_a_1 = encp[],ciphers_a_2 = ciphersuites[],rev_res_iv_a_3 = deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),rev_req_iv_a_3 = deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_res_iv_a_3 = deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_req_iv_a_3 = deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),rev_res_key_a_4 = deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),rev_req_key_a_4 = deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_res_key_a_4 = deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_req_key_a_4 = deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),msg_cnt_a_3 = 0,n32f_context_11 = deriveContextId(n32f_pid[],n32f_pid_1[]),sepp_b_addr_6 = sepp_b_addr[],sepp_b_plmn_2 = sepp_b_plmn[],prins_messsage = prins''(jwe_headers_22,nonce_76,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[]))),!1 = @sid_1]
@occ440_2 = @occ440[ipx_b_key_4 = pk(ipx_b_privkey[]),ipx_b_id_5 = ipx_b_id[],ipx_a_key_4 = pk(ipx_a_privkey[]),ipx_a_id_5 = ipx_a_id[],modp_b_5 = modp_b[],modp_a_5 = modp_a[],encp_a_1 = encp[],ciphers_a_2 = ciphersuites[],rev_res_iv_a_3 = deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),rev_req_iv_a_3 = deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_res_iv_a_3 = deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_req_iv_a_3 = deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),rev_res_key_a_4 = deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),rev_req_key_a_4 = deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_res_key_a_4 = deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_req_key_a_4 = deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),msg_cnt_a_3 = 0,n32f_context_11 = deriveContextId(n32f_pid[],n32f_pid_1[]),sepp_b_addr_6 = sepp_b_addr[],sepp_b_plmn_2 = sepp_b_plmn[],prins_messsage = prins''(jwe_headers_25,nonce_77,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[]))),!1 = @sid_2]
@occ299_1 = @occ299[prins_message_3 = prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),sepp_a_addr_3 = sepp_a_addr_19,!1 = @sid_3]
@occ299_2 = @occ299[prins_message_3 = prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),sepp_a_addr_3 = sepp_a_addr_20,!1 = @sid_4]
@occ894_1 = @occ894[prins_message_11 = prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_8,EMPTY),sepp_b_addr_11 = sepp_b_addr_17,!1 = @sid_5]

Derivation:
Abbreviations:
msg_body_46 = msg_body[!1 = @sid]
@occ440_1 = @occ440[ipx_b_key_4 = pk(ipx_b_privkey[]),ipx_b_id_5 = ipx_b_id[],ipx_a_key_4 = pk(ipx_a_privkey[]),ipx_a_id_5 = ipx_a_id[],modp_b_5 = modp_b[],modp_a_5 = modp_a[],encp_a_1 = encp[],ciphers_a_2 = ciphersuites[],rev_res_iv_a_3 = deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),rev_req_iv_a_3 = deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_res_iv_a_3 = deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_req_iv_a_3 = deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),rev_res_key_a_4 = deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),rev_req_key_a_4 = deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_res_key_a_4 = deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_req_key_a_4 = deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),msg_cnt_a_3 = 0,n32f_context_11 = deriveContextId(n32f_pid[],n32f_pid_1[]),sepp_b_addr_6 = sepp_b_addr[],sepp_b_plmn_2 = sepp_b_plmn[],prins_messsage = prins''(jwe_headers_22,nonce_76,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[]))),!1 = @sid_1]
@occ440_2 = @occ440[ipx_b_key_4 = pk(ipx_b_privkey[]),ipx_b_id_5 = ipx_b_id[],ipx_a_key_4 = pk(ipx_a_privkey[]),ipx_a_id_5 = ipx_a_id[],modp_b_5 = modp_b[],modp_a_5 = modp_a[],encp_a_1 = encp[],ciphers_a_2 = ciphersuites[],rev_res_iv_a_3 = deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),rev_req_iv_a_3 = deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_res_iv_a_3 = deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_req_iv_a_3 = deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),rev_res_key_a_4 = deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),rev_req_key_a_4 = deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_res_key_a_4 = deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),par_req_key_a_4 = deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),msg_cnt_a_3 = 0,n32f_context_11 = deriveContextId(n32f_pid[],n32f_pid_1[]),sepp_b_addr_6 = sepp_b_addr[],sepp_b_plmn_2 = sepp_b_plmn[],prins_messsage = prins''(jwe_headers_25,nonce_77,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[]))),!1 = @sid_2]
@occ299_1 = @occ299[prins_message_3 = prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),sepp_a_addr_3 = sepp_a_addr_19,!1 = @sid_3]
msg_body_47 = msg_body[!1 = @sid_4]
msg_body_48 = msg_body_1[!1 = @sid_5]
@occ299_2 = @occ299[prins_message_3 = prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),sepp_a_addr_3 = sepp_a_addr_20,!1 = @sid_6]
msg_body_49 = msg_body_1[!1 = @sid_7]
@occ894_1 = @occ894[prins_message_11 = prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),sepp_b_addr_11 = sepp_b_addr_17,!1 = @sid_8]

1. The message () may be sent on channel a_3[] at output {1414}.
mess(a_3[],()).

2. The message () may be sent on channel a_2[] at output {1416}.
mess(a_2[],()).

3. The message () may be sent on channel a_1[] at output {1418}.
mess(a_1[],()).

4. The message () may be sent on channel a[] at output {1420}.
mess(a[],()).

5. The message () may be sent on channel a_12[] at output {1396}.
mess(a_12[],()).

6. The message () may be sent on channel a_11[] at output {1398}.
mess(a_11[],()).

7. The message () may be sent on channel a_10[] at output {1400}.
mess(a_10[],()).

8. The message () may be sent on channel a_9[] at output {1402}.
mess(a_9[],()).

9. The message () may be sent on channel a_8[] at output {1404}.
mess(a_8[],()).

10. The message () may be sent on channel a_7[] at output {1406}.
mess(a_7[],()).

11. The message () may be sent on channel a_6[] at output {1408}.
mess(a_6[],()).

12. The message () may be sent on channel a_5[] at output {1410}.
mess(a_5[],()).

13. The message () may be sent on channel a_4[] at output {1412}.
mess(a_4[],()).

14. The message () may be sent on channel a_22[] at output {1376}.
mess(a_22[],()).

15. The message () may be sent on channel a_21[] at output {1378}.
mess(a_21[],()).

16. The message () may be sent on channel a_20[] at output {1380}.
mess(a_20[],()).

17. The message () may be sent on channel a_19[] at output {1382}.
mess(a_19[],()).

18. The message () may be sent on channel a_18[] at output {1384}.
mess(a_18[],()).

19. The message () may be sent on channel a_17[] at output {1386}.
mess(a_17[],()).

20. The message () may be sent on channel a_16[] at output {1388}.
mess(a_16[],()).

21. The message () may be sent on channel a_15[] at output {1390}.
mess(a_15[],()).

22. The message () may be sent on channel a_14[] at output {1392}.
mess(a_14[],()).

23. The message () may be sent on channel a_13[] at output {1394}.
mess(a_13[],()).

24. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
The message () that may be sent on channel a_22[] by 14 may be received at input {1474}.
The message () that may be sent on channel a_21[] by 15 may be received at input {1473}.
The message () that may be sent on channel a_20[] by 16 may be received at input {1472}.
The message () that may be sent on channel a_19[] by 17 may be received at input {1471}.
The message () that may be sent on channel a_18[] by 18 may be received at input {1470}.
The message () that may be sent on channel a_17[] by 19 may be received at input {1469}.
The message () that may be sent on channel a_16[] by 20 may be received at input {1468}.
The message () that may be sent on channel a_15[] by 21 may be received at input {1467}.
The message () that may be sent on channel a_14[] by 22 may be received at input {1466}.
The message () that may be sent on channel a_13[] by 23 may be received at input {1465}.
So the message () may be sent on channel c_13[] at output {1455}.
mess(c_13[],()).

25. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
So the message () may be sent on channel c_8[] at output {1479}.
mess(c_8[],()).

26. Using the function EMPTY the attacker may obtain EMPTY.
attacker(EMPTY).

27. We assume as hypothesis that
attacker(ipx_b_mods_13).

28. We assume as hypothesis that
attacker(t_1).

29. We assume as hypothesis that
attacker(dataToIntegrityProtectAndCipher_25).

30. We assume as hypothesis that
attacker(n32f_context_37).

31. We assume as hypothesis that
attacker(auth_ipx_id_19).

32. We assume as hypothesis that
attacker(msg_id_37).

33. We assume as hypothesis that
attacker(nonconf_29).

34. We assume as hypothesis that
attacker(msg_type_33).

35. We assume as hypothesis that
attacker(destination_addr_29).

36. We assume as hypothesis that
attacker(source_addr_29).

37. By 36, the attacker may know source_addr_29.
By 35, the attacker may know destination_addr_29.
By 34, the attacker may know msg_type_33.
By 33, the attacker may know nonconf_29.
By 32, the attacker may know msg_id_37.
By 31, the attacker may know auth_ipx_id_19.
By 30, the attacker may know n32f_context_37.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37).
attacker(combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37)).

38. We assume as hypothesis that
attacker(iv_21).

39. We assume as hypothesis that
attacker(jwe_headers_27).

40. By 39, the attacker may know jwe_headers_27.
By 38, the attacker may know iv_21.
By 37, the attacker may know combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37).
By 29, the attacker may know dataToIntegrityProtectAndCipher_25.
By 28, the attacker may know t_1.
By 27, the attacker may know ipx_b_mods_13.
By 26, the attacker may know EMPTY.
Using the function prins'' the attacker may obtain prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY).
attacker(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY)).

41. The attacker has some term sepp_a_addr_21.
attacker(sepp_a_addr_21).

42. By 41, the attacker may know sepp_a_addr_21.
By 40, the attacker may know prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY).
Using the function 2-tuple the attacker may obtain (sepp_a_addr_21,prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY)).
attacker((sepp_a_addr_21,prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY))).

43. The message () that may be sent on channel c_8[] by 25 may be received at input {1403}.
The message (sepp_a_addr_21,prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY)) that the attacker may have by 42 may be received at input {304}.
So the message (sepp_a_addr_21,prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[])))) may be sent to the attacker at output {310}.
attacker((sepp_a_addr_21,prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[]))))).

44. By 43, the attacker may know (sepp_a_addr_21,prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[])))).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[]))).
attacker(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[])))).

45. By 44, the attacker may know prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[]))).
Using the function 7-proj-prins'' the attacker may obtain jsonPatch(modp_a[],ipx_a_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[])).
attacker(jsonPatch(modp_a[],ipx_a_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[]))).

46. By 45, the attacker may know jsonPatch(modp_a[],ipx_a_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[]).
attacker(signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[])).

47. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
The message () that may be sent on channel a_22[] by 14 may be received at input {1474}.
The message () that may be sent on channel a_21[] by 15 may be received at input {1473}.
The message () that may be sent on channel a_20[] by 16 may be received at input {1472}.
The message () that may be sent on channel a_19[] by 17 may be received at input {1471}.
The message () that may be sent on channel a_18[] by 18 may be received at input {1470}.
The message () that may be sent on channel a_17[] by 19 may be received at input {1469}.
The message () that may be sent on channel a_16[] by 20 may be received at input {1468}.
The message () that may be sent on channel a_15[] by 21 may be received at input {1467}.
The message () that may be sent on channel a_14[] by 22 may be received at input {1466}.
The message () that may be sent on channel a_13[] by 23 may be received at input {1465}.
So the message () may be sent on channel c_22[] at output {1464}.
mess(c_22[],()).

48. The message () may be sent on channel a_31[] at output {1358}.
mess(a_31[],()).

49. The message () may be sent on channel a_30[] at output {1360}.
mess(a_30[],()).

50. The message () may be sent on channel a_29[] at output {1362}.
mess(a_29[],()).

51. The message () may be sent on channel a_28[] at output {1364}.
mess(a_28[],()).

52. The message () may be sent on channel a_27[] at output {1366}.
mess(a_27[],()).

53. The message () may be sent on channel a_26[] at output {1368}.
mess(a_26[],()).

54. The message () may be sent on channel a_25[] at output {1370}.
mess(a_25[],()).

55. The message () may be sent on channel a_24[] at output {1372}.
mess(a_24[],()).

56. The message () may be sent on channel a_23[] at output {1374}.
mess(a_23[],()).

57. The message () may be sent on channel a_39[] at output {1342}.
mess(a_39[],()).

58. The message () may be sent on channel a_38[] at output {1344}.
mess(a_38[],()).

59. The message () may be sent on channel a_37[] at output {1346}.
mess(a_37[],()).

60. The message () may be sent on channel a_36[] at output {1348}.
mess(a_36[],()).

61. The message () may be sent on channel a_35[] at output {1350}.
mess(a_35[],()).

62. The message () may be sent on channel a_34[] at output {1352}.
mess(a_34[],()).

63. The message () may be sent on channel a_33[] at output {1354}.
mess(a_33[],()).

64. The message () may be sent on channel a_32[] at output {1356}.
mess(a_32[],()).

65. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
The message () that may be sent on channel a_22[] by 14 may be received at input {1474}.
The message () that may be sent on channel a_21[] by 15 may be received at input {1473}.
The message () that may be sent on channel a_20[] by 16 may be received at input {1472}.
The message () that may be sent on channel a_19[] by 17 may be received at input {1471}.
The message () that may be sent on channel a_18[] by 18 may be received at input {1470}.
The message () that may be sent on channel a_17[] by 19 may be received at input {1469}.
The message () that may be sent on channel a_16[] by 20 may be received at input {1468}.
The message () that may be sent on channel a_15[] by 21 may be received at input {1467}.
The message () that may be sent on channel a_14[] by 22 may be received at input {1466}.
The message () that may be sent on channel a_13[] by 23 may be received at input {1465}.
The message () that may be sent on channel a_31[] by 48 may be received at input {1454}.
The message () that may be sent on channel a_30[] by 49 may be received at input {1453}.
The message () that may be sent on channel a_29[] by 50 may be received at input {1452}.
The message () that may be sent on channel a_28[] by 51 may be received at input {1451}.
The message () that may be sent on channel a_27[] by 52 may be received at input {1450}.
The message () that may be sent on channel a_26[] by 53 may be received at input {1449}.
The message () that may be sent on channel a_25[] by 54 may be received at input {1448}.
The message () that may be sent on channel a_24[] by 55 may be received at input {1447}.
The message () that may be sent on channel a_23[] by 56 may be received at input {1446}.
The message () that may be sent on channel a_39[] by 57 may be received at input {1436}.
The message () that may be sent on channel a_38[] by 58 may be received at input {1435}.
The message () that may be sent on channel a_37[] by 59 may be received at input {1434}.
The message () that may be sent on channel a_36[] by 60 may be received at input {1433}.
The message () that may be sent on channel a_35[] by 61 may be received at input {1432}.
The message () that may be sent on channel a_34[] by 62 may be received at input {1431}.
The message () that may be sent on channel a_33[] by 63 may be received at input {1430}.
The message () that may be sent on channel a_32[] by 64 may be received at input {1429}.
So the message () may be sent on channel c_35[] at output {1424}.
mess(c_35[],()).

66. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
The message () that may be sent on channel a_22[] by 14 may be received at input {1474}.
The message () that may be sent on channel a_21[] by 15 may be received at input {1473}.
The message () that may be sent on channel a_20[] by 16 may be received at input {1472}.
The message () that may be sent on channel a_19[] by 17 may be received at input {1471}.
The message () that may be sent on channel a_18[] by 18 may be received at input {1470}.
The message () that may be sent on channel a_17[] by 19 may be received at input {1469}.
The message () that may be sent on channel a_16[] by 20 may be received at input {1468}.
The message () that may be sent on channel a_15[] by 21 may be received at input {1467}.
The message () that may be sent on channel a_14[] by 22 may be received at input {1466}.
The message () that may be sent on channel a_13[] by 23 may be received at input {1465}.
So the message () may be sent on channel c_14[] at output {1456}.
mess(c_14[],()).

67. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
The message () that may be sent on channel a_22[] by 14 may be received at input {1474}.
The message () that may be sent on channel a_21[] by 15 may be received at input {1473}.
The message () that may be sent on channel a_20[] by 16 may be received at input {1472}.
The message () that may be sent on channel a_19[] by 17 may be received at input {1471}.
The message () that may be sent on channel a_18[] by 18 may be received at input {1470}.
The message () that may be sent on channel a_17[] by 19 may be received at input {1469}.
The message () that may be sent on channel a_16[] by 20 may be received at input {1468}.
The message () that may be sent on channel a_15[] by 21 may be received at input {1467}.
The message () that may be sent on channel a_14[] by 22 may be received at input {1466}.
The message () that may be sent on channel a_13[] by 23 may be received at input {1465}.
The message () that may be sent on channel a_31[] by 48 may be received at input {1454}.
The message () that may be sent on channel a_30[] by 49 may be received at input {1453}.
The message () that may be sent on channel a_29[] by 50 may be received at input {1452}.
The message () that may be sent on channel a_28[] by 51 may be received at input {1451}.
The message () that may be sent on channel a_27[] by 52 may be received at input {1450}.
The message () that may be sent on channel a_26[] by 53 may be received at input {1449}.
The message () that may be sent on channel a_25[] by 54 may be received at input {1448}.
The message () that may be sent on channel a_24[] by 55 may be received at input {1447}.
The message () that may be sent on channel a_23[] by 56 may be received at input {1446}.
So the message () may be sent on channel c_25[] at output {1439}.
mess(c_25[],()).

68. We assume as hypothesis that
attacker(ipx_a_mods_8).

69. We assume as hypothesis that
attacker(t_2).

70. We assume as hypothesis that
attacker(dataToIntegrityProtectAndCipher_26).

71. We assume as hypothesis that
attacker(n32f_context_38).

72. We assume as hypothesis that
attacker(auth_ipx_id_20).

73. We assume as hypothesis that
attacker(msg_id_38).

74. We assume as hypothesis that
attacker(nonconf_30).

75. We assume as hypothesis that
attacker(msg_type_34).

76. We assume as hypothesis that
attacker(destination_addr_30).

77. We assume as hypothesis that
attacker(source_addr_30).

78. By 77, the attacker may know source_addr_30.
By 76, the attacker may know destination_addr_30.
By 75, the attacker may know msg_type_34.
By 74, the attacker may know nonconf_30.
By 73, the attacker may know msg_id_38.
By 72, the attacker may know auth_ipx_id_20.
By 71, the attacker may know n32f_context_38.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38).
attacker(combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38)).

79. We assume as hypothesis that
attacker(iv_22).

80. We assume as hypothesis that
attacker(jwe_headers_28).

81. By 80, the attacker may know jwe_headers_28.
By 79, the attacker may know iv_22.
By 78, the attacker may know combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38).
By 70, the attacker may know dataToIntegrityProtectAndCipher_26.
By 69, the attacker may know t_2.
By 68, the attacker may know ipx_a_mods_8.
By 26, the attacker may know EMPTY.
Using the function prins'' the attacker may obtain prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY).
attacker(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY)).

82. We assume as hypothesis that
attacker(sepp_b_addr_17).

83. By 82, the attacker may know sepp_b_addr_17.
By 81, the attacker may know prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY).
Using the function 2-tuple the attacker may obtain (sepp_b_addr_17,prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY)).
attacker((sepp_b_addr_17,prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY))).

84. The message () that may be sent on channel c_25[] by 67 may be received at input {1369}.
The message (sepp_b_addr_17,prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY)) that the attacker may have by 83 may be received at input {889}.
The event ipxRecvB(n32f_context_38,msg_id_38,t_2,jsonPatch(modp_b[],ipx_b_id[],t_2,signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[]))) (with occurrence name @occ894_1) may be executed at {894}.
So the message (sepp_b_addr_17,prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,jsonPatch(modp_b[],ipx_b_id[],t_2,signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[])))) may be sent to the attacker at output {895}.
attacker((sepp_b_addr_17,prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,jsonPatch(modp_b[],ipx_b_id[],t_2,signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[]))))).

85. By 84, the attacker may know (sepp_b_addr_17,prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,jsonPatch(modp_b[],ipx_b_id[],t_2,signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[])))).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,jsonPatch(modp_b[],ipx_b_id[],t_2,signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[]))).
attacker(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,jsonPatch(modp_b[],ipx_b_id[],t_2,signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[])))).

86. By 85, the attacker may know prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,jsonPatch(modp_b[],ipx_b_id[],t_2,signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[]))).
Using the function 7-proj-prins'' the attacker may obtain jsonPatch(modp_b[],ipx_b_id[],t_2,signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[])).
attacker(jsonPatch(modp_b[],ipx_b_id[],t_2,signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[]))).

87. By 86, the attacker may know jsonPatch(modp_b[],ipx_b_id[],t_2,signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[]).
attacker(signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[])).

88. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
So the message () may be sent on channel c_2[] at output {1495}.
mess(c_2[],()).

89. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
So the message () may be sent on channel c[] at output {1493}.
mess(c[],()).

90. The message () that may be sent on channel c[] by 89 may be received at input {1419}.
So the message (SEND,createHttp(nf_a_addr[],nf_b_addr[],REQ,msg_body_46)) may be sent on channel plmn_a[] at output {126}.
mess(plmn_a[],(SEND,createHttp(nf_a_addr[],nf_b_addr[],REQ,msg_body_46))).

91. The message (sepp_b_addr[],ciphersuites[],n32f_pid[]) may be sent on channel n32c_a[] at output {38}.
mess(n32c_a[],(sepp_b_addr[],ciphersuites[],n32f_pid[])).

92. The message (sepp_b_addr[],ciphersuites[],n32f_pid[]) that may be sent on channel n32c_a[] by 91 may be received at input {59}.
So the message (sepp_a_addr[],ciphersuites[],n32f_pid_1[]) may be sent on channel n32c_a[] at output {60}.
mess(n32c_a[],(sepp_a_addr[],ciphersuites[],n32f_pid_1[])).

93. The message (sepp_a_addr[],ciphersuites[],n32f_pid_1[]) that may be sent on channel n32c_a[] by 92 may be received at input {39}.
So the message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[]) may be sent on channel n32c_a[] at output {42}.
mess(n32c_a[],(sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[])).

94. The message (sepp_b_addr[],ciphersuites[],n32f_pid[]) that may be sent on channel n32c_a[] by 91 may be received at input {59}.
The message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[]) that may be sent on channel n32c_a[] by 93 may be received at input {63}.
So the message (sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_b[]) may be sent on channel n32c_a[] at output {64}.
mess(n32c_a[],(sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_b[])).

95. The message (sepp_b_addr[],ciphersuites[],n32f_pid[]) that may be sent on channel n32c_a[] by 91 may be received at input {59}.
The message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[]) that may be sent on channel n32c_a[] by 93 may be received at input {63}.
The message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[]) that may be sent on channel n32c_a[] by 93 may be received at input {65}.
So the message (sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),ipx_b_id[],pk(ipx_b_privkey[])) may be sent on channel n32c_a[] at output {66}.
mess(n32c_a[],(sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),ipx_b_id[],pk(ipx_b_privkey[]))).

96. The message (sepp_a_addr[],ciphersuites[],n32f_pid_1[]) that may be sent on channel n32c_a[] by 92 may be received at input {39}.
The message (sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_b[]) that may be sent on channel n32c_a[] by 94 may be received at input {43}.
The message (sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),ipx_b_id[],pk(ipx_b_privkey[])) that may be sent on channel n32c_a[] by 95 may be received at input {45}.
So the entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[])) may be inserted in a table at insert {57}.
table(storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[]))).

97. The message () that may be sent on channel c_2[] by 88 may be received at input {1415}.
The message (SEND,createHttp(nf_a_addr[],nf_b_addr[],REQ,msg_body_46)) that may be sent on channel plmn_a[] by 90 may be received at input {135}.
The entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[])) that may be in a table by 96 may be read at get {198}.
So the message (sepp_b_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))) may be sent to the attacker at output {150}.
attacker((sepp_b_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))))).

98. By 97, the attacker may know (sepp_b_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))).
Using the function 2-proj-2-tuple the attacker may obtain prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
attacker(prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))).

99. By 98, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
Using the function 5-proj-prins' the attacker may obtain macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
attacker(macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).

100. The message ipx_b_id[] may be sent to the attacker at output {25}.
attacker(ipx_b_id[]).

101. The message modp_b[] may be sent to the attacker at output {7}.
attacker(modp_b[]).

102. By 101, the attacker may know modp_b[].
By 100, the attacker may know ipx_b_id[].
By 99, the attacker may know macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
By 87, the attacker may know signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[])).
attacker(jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[]))).

103. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
So the message () may be sent on channel c_9[] at output {1480}.
mess(c_9[],()).

104. The attacker has some term tag_2.
attacker(tag_2).

105. The attacker has some term dataToIntegrityProtectAndCipher_27.
attacker(dataToIntegrityProtectAndCipher_27).

106. The attacker has some term n32f_context_39.
attacker(n32f_context_39).

107. The attacker has some term auth_ipx_id_21.
attacker(auth_ipx_id_21).

108. The attacker has some term msg_id_39.
attacker(msg_id_39).

109. The attacker has some term nonconf_31.
attacker(nonconf_31).

110. The attacker has some term msg_type_35.
attacker(msg_type_35).

111. The attacker has some term destination_addr_31.
attacker(destination_addr_31).

112. The attacker has some term source_addr_31.
attacker(source_addr_31).

113. By 112, the attacker may know source_addr_31.
By 111, the attacker may know destination_addr_31.
By 110, the attacker may know msg_type_35.
By 109, the attacker may know nonconf_31.
By 108, the attacker may know msg_id_39.
By 107, the attacker may know auth_ipx_id_21.
By 106, the attacker may know n32f_context_39.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39).
attacker(combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39)).

114. The attacker has some term iv_23.
attacker(iv_23).

115. The attacker has some term jwe_headers_29.
attacker(jwe_headers_29).

116. By 115, the attacker may know jwe_headers_29.
By 114, the attacker may know iv_23.
By 113, the attacker may know combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39).
By 105, the attacker may know dataToIntegrityProtectAndCipher_27.
By 104, the attacker may know tag_2.
Using the function prins' the attacker may obtain prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2).
attacker(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2)).

117. The attacker has some term sepp_b_addr_18.
attacker(sepp_b_addr_18).

118. By 117, the attacker may know sepp_b_addr_18.
By 116, the attacker may know prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2).
Using the function 2-tuple the attacker may obtain (sepp_b_addr_18,prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2)).
attacker((sepp_b_addr_18,prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2))).

119. The message () that may be sent on channel c_9[] by 103 may be received at input {1401}.
The message (sepp_b_addr_18,prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2)) that the attacker may have by 118 may be received at input {313}.
So the message (sepp_b_addr_18,prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2,jsonPatch(modp_r1[],ipx_a_id[],tag_2,signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])),EMPTY)) may be sent to the attacker at output {319}.
attacker((sepp_b_addr_18,prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2,jsonPatch(modp_r1[],ipx_a_id[],tag_2,signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])),EMPTY))).

120. By 119, the attacker may know (sepp_b_addr_18,prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2,jsonPatch(modp_r1[],ipx_a_id[],tag_2,signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])),EMPTY)).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2,jsonPatch(modp_r1[],ipx_a_id[],tag_2,signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])),EMPTY).
attacker(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2,jsonPatch(modp_r1[],ipx_a_id[],tag_2,signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])),EMPTY)).

121. By 120, the attacker may know prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2,jsonPatch(modp_r1[],ipx_a_id[],tag_2,signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])),EMPTY).
Using the function 6-proj-prins'' the attacker may obtain jsonPatch(modp_r1[],ipx_a_id[],tag_2,signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])).
attacker(jsonPatch(modp_r1[],ipx_a_id[],tag_2,signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[]))).

122. By 121, the attacker may know jsonPatch(modp_r1[],ipx_a_id[],tag_2,signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[]).
attacker(signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])).

123. The message ipx_a_id[] may be sent to the attacker at output {23}.
attacker(ipx_a_id[]).

124. The message modp_a[] may be sent to the attacker at output {5}.
attacker(modp_a[]).

125. By 124, the attacker may know modp_a[].
By 123, the attacker may know ipx_a_id[].
By 99, the attacker may know macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
By 122, the attacker may know signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])).
attacker(jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[]))).

126. By 98, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
Using the function 4-proj-prins' the attacker may obtain encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)).
attacker(encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))).

127. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
So the message () may be sent on channel c_3[] at output {1496}.
mess(c_3[],()).

128. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
So the message () may be sent on channel c_1[] at output {1494}.
mess(c_1[],()).

129. The message () that may be sent on channel c_1[] by 128 may be received at input {1417}.
So the message (SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_49)) may be sent on channel plmn_b[] at output {132}.
mess(plmn_b[],(SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_49))).

130. The message (sepp_b_addr[],ciphersuites[],n32f_pid[]) that may be sent on channel n32c_a[] by 91 may be received at input {59}.
The message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[]) that may be sent on channel n32c_a[] by 93 may be received at input {63}.
The message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[]) that may be sent on channel n32c_a[] by 93 may be received at input {65}.
So the entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),encp[],modp_a[]) may be inserted in a table at insert {78}.
table(storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),encp[],modp_a[])).

131. The message () that may be sent on channel c_3[] by 127 may be received at input {1413}.
The message (SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_49)) that may be sent on channel plmn_b[] by 129 may be received at input {201}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),encp[],modp_a[]) that may be in a table by 130 may be read at get {264}.
So the message (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))) may be sent to the attacker at output {216}.
attacker((sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))))).

132. By 131, the attacker may know (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))).
Using the function 2-proj-2-tuple the attacker may obtain prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
attacker(prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))).

133. By 132, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
Using the function 3-proj-prins' the attacker may obtain combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
attacker(combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[]))).

134. By 133, the attacker may know combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
Using the function 7-proj-combineAAD the attacker may obtain deriveContextId(n32f_pid[],n32f_pid_1[]).
attacker(deriveContextId(n32f_pid[],n32f_pid_1[])).

135. Using the function 0 the attacker may obtain 0.
attacker(0).

136. By 135, the attacker may know 0.
Using the function + the attacker may obtain 1.
attacker(1).

137. By 98, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
Using the function 3-proj-prins' the attacker may obtain combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
attacker(combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[]))).

138. By 137, the attacker may know combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
Using the function 4-proj-combineAAD the attacker may obtain getNonconf(msg_body_46,encp[]).
attacker(getNonconf(msg_body_46,encp[])).

139. Using the function REQ the attacker may obtain REQ.
attacker(REQ).

140. The message nf_b_addr[] may be sent to the attacker at output {13}.
attacker(nf_b_addr[]).

141. The message nf_a_addr[] may be sent to the attacker at output {11}.
attacker(nf_a_addr[]).

142. By 141, the attacker may know nf_a_addr[].
By 140, the attacker may know nf_b_addr[].
By 139, the attacker may know REQ.
By 138, the attacker may know getNonconf(msg_body_46,encp[]).
By 136, the attacker may know 1.
By 123, the attacker may know ipx_a_id[].
By 134, the attacker may know deriveContextId(n32f_pid[],n32f_pid_1[]).
Using the function combineAAD the attacker may obtain combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
attacker(combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[]))).

143. The attacker has some term nonce_78.
attacker(nonce_78).

144. The attacker has some term jwe_headers_30.
attacker(jwe_headers_30).

145. By 144, the attacker may know jwe_headers_30.
By 143, the attacker may know nonce_78.
By 142, the attacker may know combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
By 126, the attacker may know encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)).
By 99, the attacker may know macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
By 125, the attacker may know jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])).
By 102, the attacker may know jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[])).
Using the function prins'' the attacker may obtain prins''(jwe_headers_30,nonce_78,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[]))).
attacker(prins''(jwe_headers_30,nonce_78,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[])))).

146. The message sepp_b_addr[] may be sent to the attacker at output {21}.
attacker(sepp_b_addr[]).

147. By 146, the attacker may know sepp_b_addr[].
By 145, the attacker may know prins''(jwe_headers_30,nonce_78,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[]))).
Using the function 2-tuple the attacker may obtain (sepp_b_addr[],prins''(jwe_headers_30,nonce_78,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[])))).
attacker((sepp_b_addr[],prins''(jwe_headers_30,nonce_78,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[]))))).

148. The message (sepp_a_addr[],ciphersuites[],n32f_pid_1[]) that may be sent on channel n32c_a[] by 92 may be received at input {39}.
The message (sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_b[]) that may be sent on channel n32c_a[] by 94 may be received at input {43}.
So the message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),ipx_a_id[],pk(ipx_a_privkey[])) may be sent on channel n32c_a[] at output {44}.
mess(n32c_a[],(sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),ipx_a_id[],pk(ipx_a_privkey[]))).

149. The message (sepp_b_addr[],ciphersuites[],n32f_pid[]) that may be sent on channel n32c_a[] by 91 may be received at input {59}.
The message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[]) that may be sent on channel n32c_a[] by 93 may be received at input {63}.
The message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be sent on channel n32c_a[] by 148 may be received at input {65}.
So the entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) may be inserted in a table at insert {78}.
table(storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[]))).

150. The message () that may be sent on channel c_14[] by 66 may be received at input {1391}.
The message (sepp_b_addr[],prins''(jwe_headers_30,nonce_78,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_27,tag_2),modp_r1[],ipx_a_id[],tag_2,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[])))) that the attacker may have by 147 may be received at input {520}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be in a table by 149 may be read at get {688}.
So the message (RECV,createHttp(nf_a_addr[],nf_b_addr[],REQ,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]))) may be sent on channel plmn_b[] at output {545}.
mess(plmn_b[],(RECV,createHttp(nf_a_addr[],nf_b_addr[],REQ,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[])))).

151. The message () that may be sent on channel c_35[] by 65 may be received at input {1349}.
The message (RECV,createHttp(nf_a_addr[],nf_b_addr[],REQ,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]))) that may be sent on channel plmn_b[] by 150 may be received at input {1303}.
So the message (SEND,createHttp(nf_b_addr[],nf_a_addr[],RES,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]))) may be sent on channel plmn_b[] at output {1307}.
mess(plmn_b[],(SEND,createHttp(nf_b_addr[],nf_a_addr[],RES,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[])))).

152. The message () that may be sent on channel c_22[] by 47 may be received at input {1375}.
The message (SEND,createHttp(nf_b_addr[],nf_a_addr[],RES,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]))) that may be sent on channel plmn_b[] by 151 may be received at input {805}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be in a table by 149 may be read at get {868}.
We have RES ≠ REQ.
So the message (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))) may be sent to the attacker at output {843}.
attacker((sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))))).

153. By 152, the attacker may know (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))).
Using the function 2-proj-2-tuple the attacker may obtain prins'(ciphersuites[],deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
attacker(prins'(ciphersuites[],deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))).

154. By 153, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
Using the function 5-proj-prins' the attacker may obtain macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
attacker(macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).

155. By 124, the attacker may know modp_a[].
By 123, the attacker may know ipx_a_id[].
By 154, the attacker may know macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
By 46, the attacker may know signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[])).
attacker(jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[]))).

156. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
So the message () may be sent on channel c_7[] at output {1478}.
mess(c_7[],()).

157. We assume as hypothesis that
attacker(tag_1).

158. We assume as hypothesis that
attacker(dataToIntegrityProtectAndCipher_24).

159. We assume as hypothesis that
attacker(n32f_context_36).

160. We assume as hypothesis that
attacker(msg_id_36).

161. We assume as hypothesis that
attacker(nonconf_28).

162. We assume as hypothesis that
attacker(msg_type_32).

163. We assume as hypothesis that
attacker(destination_addr_28).

164. We assume as hypothesis that
attacker(source_addr_28).

165. By 164, the attacker may know source_addr_28.
By 163, the attacker may know destination_addr_28.
By 162, the attacker may know msg_type_32.
By 161, the attacker may know nonconf_28.
By 160, the attacker may know msg_id_36.
By 100, the attacker may know ipx_b_id[].
By 159, the attacker may know n32f_context_36.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36).
attacker(combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36)).

166. We assume as hypothesis that
attacker(iv_20).

167. We assume as hypothesis that
attacker(jwe_headers_26).

168. By 167, the attacker may know jwe_headers_26.
By 166, the attacker may know iv_20.
By 165, the attacker may know combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36).
By 158, the attacker may know dataToIntegrityProtectAndCipher_24.
By 157, the attacker may know tag_1.
Using the function prins' the attacker may obtain prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1).
attacker(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1)).

169. We assume as hypothesis that
attacker(sepp_a_addr_20).

170. By 169, the attacker may know sepp_a_addr_20.
By 168, the attacker may know prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1).
Using the function 2-tuple the attacker may obtain (sepp_a_addr_20,prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1)).
attacker((sepp_a_addr_20,prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1))).

171. The message () that may be sent on channel c_7[] by 156 may be received at input {1405}.
The message (sepp_a_addr_20,prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1)) that the attacker may have by 170 may be received at input {294}.
The event ipxSendB(n32f_context_36,msg_id_36,tag_1,jsonPatch(modp_b[],ipx_b_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[]))) (with occurrence name @occ299_2) may be executed at {299}.
So the message (sepp_a_addr_20,prins''(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1,jsonPatch(modp_b[],ipx_b_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])),EMPTY)) may be sent to the attacker at output {300}.
attacker((sepp_a_addr_20,prins''(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1,jsonPatch(modp_b[],ipx_b_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])),EMPTY))).

172. By 171, the attacker may know (sepp_a_addr_20,prins''(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1,jsonPatch(modp_b[],ipx_b_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])),EMPTY)).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1,jsonPatch(modp_b[],ipx_b_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])),EMPTY).
attacker(prins''(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1,jsonPatch(modp_b[],ipx_b_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])),EMPTY)).

173. By 172, the attacker may know prins''(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1,jsonPatch(modp_b[],ipx_b_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])),EMPTY).
Using the function 6-proj-prins'' the attacker may obtain jsonPatch(modp_b[],ipx_b_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])).
attacker(jsonPatch(modp_b[],ipx_b_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[]))).

174. By 173, the attacker may know jsonPatch(modp_b[],ipx_b_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[]).
attacker(signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])).

175. By 101, the attacker may know modp_b[].
By 100, the attacker may know ipx_b_id[].
By 154, the attacker may know macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
By 174, the attacker may know signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])).
attacker(jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[]))).

176. By 153, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
Using the function 4-proj-prins' the attacker may obtain encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)).
attacker(encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))).

177. The attacker has some term tag_3.
attacker(tag_3).

178. The attacker has some term dataToIntegrityProtectAndCipher_28.
attacker(dataToIntegrityProtectAndCipher_28).

179. The attacker has some term n32f_context_40.
attacker(n32f_context_40).

180. The attacker has some term auth_ipx_id_22.
attacker(auth_ipx_id_22).

181. The attacker has some term msg_id_40.
attacker(msg_id_40).

182. The attacker has some term nonconf_32.
attacker(nonconf_32).

183. The attacker has some term msg_type_36.
attacker(msg_type_36).

184. The attacker has some term destination_addr_32.
attacker(destination_addr_32).

185. The attacker has some term source_addr_32.
attacker(source_addr_32).

186. By 185, the attacker may know source_addr_32.
By 184, the attacker may know destination_addr_32.
By 183, the attacker may know msg_type_36.
By 182, the attacker may know nonconf_32.
By 181, the attacker may know msg_id_40.
By 180, the attacker may know auth_ipx_id_22.
By 179, the attacker may know n32f_context_40.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40).
attacker(combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40)).

187. The attacker has some term iv_24.
attacker(iv_24).

188. The attacker has some term jwe_headers_31.
attacker(jwe_headers_31).

189. By 188, the attacker may know jwe_headers_31.
By 187, the attacker may know iv_24.
By 186, the attacker may know combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40).
By 178, the attacker may know dataToIntegrityProtectAndCipher_28.
By 177, the attacker may know tag_3.
Using the function prins' the attacker may obtain prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3).
attacker(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3)).

190. The attacker has some term sepp_b_addr_19.
attacker(sepp_b_addr_19).

191. By 190, the attacker may know sepp_b_addr_19.
By 189, the attacker may know prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3).
Using the function 2-tuple the attacker may obtain (sepp_b_addr_19,prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3)).
attacker((sepp_b_addr_19,prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3))).

192. The message () that may be sent on channel c_9[] by 103 may be received at input {1401}.
The message (sepp_b_addr_19,prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3)) that the attacker may have by 191 may be received at input {313}.
So the message (sepp_b_addr_19,prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3,jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),EMPTY)) may be sent to the attacker at output {319}.
attacker((sepp_b_addr_19,prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3,jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),EMPTY))).

193. By 192, the attacker may know (sepp_b_addr_19,prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3,jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),EMPTY)).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3,jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),EMPTY).
attacker(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3,jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),EMPTY)).

194. By 193, the attacker may know prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3,jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),EMPTY).
Using the function 6-proj-prins'' the attacker may obtain jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])).
attacker(jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[]))).

195. By 194, the attacker may know jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[]).
attacker(signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])).

196. By 124, the attacker may know modp_a[].
By 123, the attacker may know ipx_a_id[].
By 99, the attacker may know macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
By 195, the attacker may know signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])).
attacker(jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[]))).

197. The attacker has some term nonce_79.
attacker(nonce_79).

198. The attacker has some term jwe_headers_32.
attacker(jwe_headers_32).

199. By 198, the attacker may know jwe_headers_32.
By 197, the attacker may know nonce_79.
By 142, the attacker may know combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
By 126, the attacker may know encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)).
By 99, the attacker may know macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
By 196, the attacker may know jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])).
By 102, the attacker may know jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[])).
Using the function prins'' the attacker may obtain prins''(jwe_headers_32,nonce_79,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[]))).
attacker(prins''(jwe_headers_32,nonce_79,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[])))).

200. By 146, the attacker may know sepp_b_addr[].
By 199, the attacker may know prins''(jwe_headers_32,nonce_79,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[]))).
Using the function 2-tuple the attacker may obtain (sepp_b_addr[],prins''(jwe_headers_32,nonce_79,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[])))).
attacker((sepp_b_addr[],prins''(jwe_headers_32,nonce_79,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[]))))).

201. The message () that may be sent on channel c_14[] by 66 may be received at input {1391}.
The message (sepp_b_addr[],prins''(jwe_headers_32,nonce_79,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_28,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_38,auth_ipx_id_20,n32f_context_38),dataToIntegrityProtectAndCipher_26,t_2,ipx_a_mods_8,EMPTY),modp_b[],ipx_b_id[],t_2,ipx_b_privkey[])))) that the attacker may have by 200 may be received at input {520}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be in a table by 149 may be read at get {688}.
So the message (RECV,createHttp(nf_a_addr[],nf_b_addr[],REQ,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]))) may be sent on channel plmn_b[] at output {545}.
mess(plmn_b[],(RECV,createHttp(nf_a_addr[],nf_b_addr[],REQ,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[])))).

202. The message () that may be sent on channel c_35[] by 65 may be received at input {1349}.
The message (RECV,createHttp(nf_a_addr[],nf_b_addr[],REQ,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]))) that may be sent on channel plmn_b[] by 201 may be received at input {1303}.
So the message (SEND,createHttp(nf_b_addr[],nf_a_addr[],RES,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]))) may be sent on channel plmn_b[] at output {1307}.
mess(plmn_b[],(SEND,createHttp(nf_b_addr[],nf_a_addr[],RES,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[])))).

203. The message (sepp_a_addr[],ciphersuites[],n32f_pid_2[]) may be sent on channel n32c_b[] at output {80}.
mess(n32c_b[],(sepp_a_addr[],ciphersuites[],n32f_pid_2[])).

204. The message (sepp_a_addr[],ciphersuites[],n32f_pid_2[]) that may be sent on channel n32c_b[] by 203 may be received at input {101}.
So the message (sepp_b_addr[],ciphersuites[],n32f_pid_3[]) may be sent on channel n32c_b[] at output {102}.
mess(n32c_b[],(sepp_b_addr[],ciphersuites[],n32f_pid_3[])).

205. The message (sepp_b_addr[],ciphersuites[],n32f_pid_3[]) that may be sent on channel n32c_b[] by 204 may be received at input {81}.
So the message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_b[]) may be sent on channel n32c_b[] at output {84}.
mess(n32c_b[],(sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_b[])).

206. The message (sepp_a_addr[],ciphersuites[],n32f_pid_2[]) that may be sent on channel n32c_b[] by 203 may be received at input {101}.
The message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_b[]) that may be sent on channel n32c_b[] by 205 may be received at input {105}.
So the message (sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_a[]) may be sent on channel n32c_b[] at output {106}.
mess(n32c_b[],(sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_a[])).

207. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
The message () that may be sent on channel a_22[] by 14 may be received at input {1474}.
The message () that may be sent on channel a_21[] by 15 may be received at input {1473}.
The message () that may be sent on channel a_20[] by 16 may be received at input {1472}.
The message () that may be sent on channel a_19[] by 17 may be received at input {1471}.
The message () that may be sent on channel a_18[] by 18 may be received at input {1470}.
The message () that may be sent on channel a_17[] by 19 may be received at input {1469}.
The message () that may be sent on channel a_16[] by 20 may be received at input {1468}.
The message () that may be sent on channel a_15[] by 21 may be received at input {1467}.
The message () that may be sent on channel a_14[] by 22 may be received at input {1466}.
The message () that may be sent on channel a_13[] by 23 may be received at input {1465}.
So the message () may be sent on channel c_18[] at output {1460}.
mess(c_18[],()).

208. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
The message () that may be sent on channel a_22[] by 14 may be received at input {1474}.
The message () that may be sent on channel a_21[] by 15 may be received at input {1473}.
The message () that may be sent on channel a_20[] by 16 may be received at input {1472}.
The message () that may be sent on channel a_19[] by 17 may be received at input {1471}.
The message () that may be sent on channel a_18[] by 18 may be received at input {1470}.
The message () that may be sent on channel a_17[] by 19 may be received at input {1469}.
The message () that may be sent on channel a_16[] by 20 may be received at input {1468}.
The message () that may be sent on channel a_15[] by 21 may be received at input {1467}.
The message () that may be sent on channel a_14[] by 22 may be received at input {1466}.
The message () that may be sent on channel a_13[] by 23 may be received at input {1465}.
So the message () may be sent on channel c_19[] at output {1461}.
mess(c_19[],()).

209. The attacker has some term ipx_b_mods_14.
attacker(ipx_b_mods_14).

210. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
So the message () may be sent on channel c_11[] at output {1482}.
mess(c_11[],()).

211. The attacker has some term tag_4.
attacker(tag_4).

212. The attacker has some term dataToIntegrityProtectAndCipher_29.
attacker(dataToIntegrityProtectAndCipher_29).

213. The attacker has some term n32f_context_41.
attacker(n32f_context_41).

214. The attacker has some term auth_ipx_id_23.
attacker(auth_ipx_id_23).

215. The attacker has some term msg_id_41.
attacker(msg_id_41).

216. The attacker has some term nonconf_33.
attacker(nonconf_33).

217. The attacker has some term msg_type_37.
attacker(msg_type_37).

218. The attacker has some term destination_addr_33.
attacker(destination_addr_33).

219. The attacker has some term source_addr_33.
attacker(source_addr_33).

220. By 219, the attacker may know source_addr_33.
By 218, the attacker may know destination_addr_33.
By 217, the attacker may know msg_type_37.
By 216, the attacker may know nonconf_33.
By 215, the attacker may know msg_id_41.
By 214, the attacker may know auth_ipx_id_23.
By 213, the attacker may know n32f_context_41.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41).
attacker(combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41)).

221. The attacker has some term iv_25.
attacker(iv_25).

222. The attacker has some term jwe_headers_33.
attacker(jwe_headers_33).

223. By 222, the attacker may know jwe_headers_33.
By 221, the attacker may know iv_25.
By 220, the attacker may know combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41).
By 212, the attacker may know dataToIntegrityProtectAndCipher_29.
By 211, the attacker may know tag_4.
Using the function prins' the attacker may obtain prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4).
attacker(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4)).

224. The attacker has some term sepp_b_addr_20.
attacker(sepp_b_addr_20).

225. By 224, the attacker may know sepp_b_addr_20.
By 223, the attacker may know prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4).
Using the function 2-tuple the attacker may obtain (sepp_b_addr_20,prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4)).
attacker((sepp_b_addr_20,prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4))).

226. The message () that may be sent on channel c_11[] by 210 may be received at input {1397}.
The message (sepp_b_addr_20,prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4)) that the attacker may have by 225 may be received at input {331}.
So the message (sepp_b_addr_20,prins''(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4,jsonPatch(modp_a[],ipx_r2_id[],tag_4,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])),EMPTY)) may be sent to the attacker at output {337}.
attacker((sepp_b_addr_20,prins''(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4,jsonPatch(modp_a[],ipx_r2_id[],tag_4,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])),EMPTY))).

227. By 226, the attacker may know (sepp_b_addr_20,prins''(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4,jsonPatch(modp_a[],ipx_r2_id[],tag_4,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])),EMPTY)).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4,jsonPatch(modp_a[],ipx_r2_id[],tag_4,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])),EMPTY).
attacker(prins''(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4,jsonPatch(modp_a[],ipx_r2_id[],tag_4,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])),EMPTY)).

228. By 227, the attacker may know prins''(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4,jsonPatch(modp_a[],ipx_r2_id[],tag_4,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])),EMPTY).
Using the function 6-proj-prins'' the attacker may obtain jsonPatch(modp_a[],ipx_r2_id[],tag_4,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])).
attacker(jsonPatch(modp_a[],ipx_r2_id[],tag_4,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[]))).

229. By 228, the attacker may know jsonPatch(modp_a[],ipx_r2_id[],tag_4,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[]).
attacker(signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])).

230. The message () that may be sent on channel c[] by 89 may be received at input {1419}.
So the message (SEND,createHttp(nf_a_addr[],nf_b_addr[],REQ,msg_body_47)) may be sent on channel plmn_a[] at output {126}.
mess(plmn_a[],(SEND,createHttp(nf_a_addr[],nf_b_addr[],REQ,msg_body_47))).

231. The message (sepp_a_addr[],ciphersuites[],n32f_pid_2[]) that may be sent on channel n32c_b[] by 203 may be received at input {101}.
The message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_b[]) that may be sent on channel n32c_b[] by 205 may be received at input {105}.
The message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_b[]) that may be sent on channel n32c_b[] by 205 may be received at input {107}.
So the entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),encp[],modp_b[]) may be inserted in a table at insert {120}.
table(storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),encp[],modp_b[])).

232. The message () that may be sent on channel c_2[] by 88 may be received at input {1415}.
The message (SEND,createHttp(nf_a_addr[],nf_b_addr[],REQ,msg_body_47)) that may be sent on channel plmn_a[] by 230 may be received at input {135}.
The entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),encp[],modp_b[]) that may be in a table by 231 may be read at get {198}.
So the message (sepp_b_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))) may be sent to the attacker at output {150}.
attacker((sepp_b_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))))).

233. By 232, the attacker may know (sepp_b_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))).
Using the function 2-proj-2-tuple the attacker may obtain prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
attacker(prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))).

234. By 233, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
Using the function 5-proj-prins' the attacker may obtain macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
attacker(macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).

235. By 124, the attacker may know modp_a[].
By 123, the attacker may know ipx_a_id[].
By 234, the attacker may know macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
By 229, the attacker may know signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])).
attacker(jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[]))).

236. By 233, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
Using the function 4-proj-prins' the attacker may obtain encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)).
attacker(encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))).

237. The message () that may be sent on channel c_1[] by 128 may be received at input {1417}.
So the message (SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_48)) may be sent on channel plmn_b[] at output {132}.
mess(plmn_b[],(SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_48))).

238. The message (sepp_a_addr[],ciphersuites[],n32f_pid_2[]) that may be sent on channel n32c_b[] by 203 may be received at input {101}.
The message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_b[]) that may be sent on channel n32c_b[] by 205 may be received at input {105}.
The message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_b[]) that may be sent on channel n32c_b[] by 205 may be received at input {107}.
So the message (sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),ipx_a_id[],pk(ipx_a_privkey[])) may be sent on channel n32c_b[] at output {108}.
mess(n32c_b[],(sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),ipx_a_id[],pk(ipx_a_privkey[]))).

239. The message (sepp_b_addr[],ciphersuites[],n32f_pid_3[]) that may be sent on channel n32c_b[] by 204 may be received at input {81}.
The message (sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_a[]) that may be sent on channel n32c_b[] by 206 may be received at input {85}.
The message (sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be sent on channel n32c_b[] by 238 may be received at input {87}.
So the entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) may be inserted in a table at insert {99}.
table(storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[]))).

240. The message () that may be sent on channel c_3[] by 127 may be received at input {1413}.
The message (SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_48)) that may be sent on channel plmn_b[] by 237 may be received at input {201}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be in a table by 239 may be read at get {264}.
So the message (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))) may be sent to the attacker at output {216}.
attacker((sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))))).

241. By 240, the attacker may know (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))).
Using the function 2-proj-2-tuple the attacker may obtain prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
attacker(prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))).

242. By 241, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
Using the function 3-proj-prins' the attacker may obtain combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
attacker(combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]))).

243. By 242, the attacker may know combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
Using the function 7-proj-combineAAD the attacker may obtain deriveContextId(n32f_pid_2[],n32f_pid_3[]).
attacker(deriveContextId(n32f_pid_2[],n32f_pid_3[])).

244. The message () that may be sent on channel c_2[] by 88 may be received at input {1415}.
The message (SEND,createHttp(nf_a_addr[],nf_b_addr[],REQ,msg_body_47)) that may be sent on channel plmn_a[] by 230 may be received at input {135}.
The entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[])) that may be in a table by 96 may be read at get {198}.
So the message (sepp_b_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))) may be sent to the attacker at output {150}.
attacker((sepp_b_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))))).

245. By 244, the attacker may know (sepp_b_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))).
Using the function 2-proj-2-tuple the attacker may obtain prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
attacker(prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))).

246. By 245, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
Using the function 3-proj-prins' the attacker may obtain combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
attacker(combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[]))).

247. By 246, the attacker may know combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
Using the function 4-proj-combineAAD the attacker may obtain getNonconf(msg_body_47,encp[]).
attacker(getNonconf(msg_body_47,encp[])).

248. By 141, the attacker may know nf_a_addr[].
By 140, the attacker may know nf_b_addr[].
By 139, the attacker may know REQ.
By 247, the attacker may know getNonconf(msg_body_47,encp[]).
By 136, the attacker may know 1.
By 123, the attacker may know ipx_a_id[].
By 243, the attacker may know deriveContextId(n32f_pid_2[],n32f_pid_3[]).
Using the function combineAAD the attacker may obtain combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
attacker(combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]))).

249. The attacker has some term nonce_80.
attacker(nonce_80).

250. The attacker has some term jwe_headers_34.
attacker(jwe_headers_34).

251. By 250, the attacker may know jwe_headers_34.
By 249, the attacker may know nonce_80.
By 248, the attacker may know combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
By 236, the attacker may know encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)).
By 234, the attacker may know macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
By 235, the attacker may know jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])).
By 209, the attacker may know ipx_b_mods_14.
Using the function prins'' the attacker may obtain prins''(jwe_headers_34,nonce_80,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])),ipx_b_mods_14).
attacker(prins''(jwe_headers_34,nonce_80,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])),ipx_b_mods_14)).

252. By 146, the attacker may know sepp_b_addr[].
By 251, the attacker may know prins''(jwe_headers_34,nonce_80,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])),ipx_b_mods_14).
Using the function 2-tuple the attacker may obtain (sepp_b_addr[],prins''(jwe_headers_34,nonce_80,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])),ipx_b_mods_14)).
attacker((sepp_b_addr[],prins''(jwe_headers_34,nonce_80,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])),ipx_b_mods_14))).

253. The message () that may be sent on channel c_14[] by 66 may be received at input {1391}.
The message (sepp_b_addr[],prins''(jwe_headers_34,nonce_80,combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_29,tag_4),modp_a[],ipx_r2_id[],tag_4,ipx_r2_privkey[])),ipx_b_mods_14)) that the attacker may have by 252 may be received at input {520}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be in a table by 239 may be read at get {688}.
We have ipx_a_privkey[] ≠ ipx_r2_privkey[].
So the message (deriveContextId(n32f_pid_2[],n32f_pid_3[]),1) may be sent on channel err_b[] at output {534}.
mess(err_b[],(deriveContextId(n32f_pid_2[],n32f_pid_3[]),1)).

254. The message () that may be sent on channel c_19[] by 208 may be received at input {1381}.
The message (deriveContextId(n32f_pid_2[],n32f_pid_3[]),1) that may be sent on channel err_b[] by 253 may be received at input {723}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be in a table by 239 may be read at get {727}.
So the message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1) may be sent on channel n32c_b[] at output {724}.
mess(n32c_b[],(sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1)).

255. The message (sepp_b_addr[],ciphersuites[],n32f_pid_3[]) that may be sent on channel n32c_b[] by 204 may be received at input {81}.
The message (sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_a[]) that may be sent on channel n32c_b[] by 206 may be received at input {85}.
So the message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),ipx_b_id[],pk(ipx_b_privkey[])) may be sent on channel n32c_b[] at output {86}.
mess(n32c_b[],(sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),ipx_b_id[],pk(ipx_b_privkey[]))).

256. The message (sepp_a_addr[],ciphersuites[],n32f_pid_2[]) that may be sent on channel n32c_b[] by 203 may be received at input {101}.
The message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_b[]) that may be sent on channel n32c_b[] by 205 may be received at input {105}.
The message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),ipx_b_id[],pk(ipx_b_privkey[])) that may be sent on channel n32c_b[] by 255 may be received at input {107}.
So the entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[])) may be inserted in a table at insert {120}.
table(storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[]))).

257. The message () that may be sent on channel c_18[] by 207 may be received at input {1383}.
The message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1) that may be sent on channel n32c_b[] by 254 may be received at input {714}.
The entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[])) that may be in a table by 256 may be read at get {720}.
We have 1 ≥ 1.
So the message (sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1,FAIL) may be sent on channel n32c_b[] at output {718}.
mess(n32c_b[],(sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1,FAIL)).

258. The message (sepp_b_addr[],ciphersuites[],n32f_pid_3[]) that may be sent on channel n32c_b[] by 204 may be received at input {81}.
The message (sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_a[]) that may be sent on channel n32c_b[] by 206 may be received at input {85}.
The message (sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1,FAIL) that may be sent on channel n32c_b[] by 257 may be received at input {87}.
So the entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),1,FAIL) may be inserted in a table at insert {99}.
table(storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),1,FAIL)).

259. The message () that may be sent on channel c_22[] by 47 may be received at input {1375}.
The message (SEND,createHttp(nf_b_addr[],nf_a_addr[],RES,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]))) that may be sent on channel plmn_b[] by 202 may be received at input {805}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),1,FAIL) that may be in a table by 258 may be read at get {868}.
We have RES ≠ REQ.
So the message (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))) may be sent to the attacker at output {843}.
attacker((sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))))).

260. By 259, the attacker may know (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))).
Using the function 2-proj-2-tuple the attacker may obtain prins'(ciphersuites[],deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
attacker(prins'(ciphersuites[],deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))).

261. By 260, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
Using the function 3-proj-prins' the attacker may obtain combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
attacker(combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]))).

262. By 261, the attacker may know combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
Using the function 4-proj-combineAAD the attacker may obtain getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]).
attacker(getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[])).

263. Using the function RES the attacker may obtain RES.
attacker(RES).

264. By 140, the attacker may know nf_b_addr[].
By 141, the attacker may know nf_a_addr[].
By 263, the attacker may know RES.
By 262, the attacker may know getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]).
By 136, the attacker may know 1.
By 100, the attacker may know ipx_b_id[].
By 134, the attacker may know deriveContextId(n32f_pid[],n32f_pid_1[]).
Using the function combineAAD the attacker may obtain combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
attacker(combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[]))).

265. We assume as hypothesis that
attacker(nonce_77).

266. We assume as hypothesis that
attacker(jwe_headers_25).

267. By 266, the attacker may know jwe_headers_25.
By 265, the attacker may know nonce_77.
By 264, the attacker may know combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
By 176, the attacker may know encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)).
By 154, the attacker may know macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
By 175, the attacker may know jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])).
By 155, the attacker may know jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[])).
Using the function prins'' the attacker may obtain prins''(jwe_headers_25,nonce_77,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[]))).
attacker(prins''(jwe_headers_25,nonce_77,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[])))).

268. The message sepp_a_addr[] may be sent to the attacker at output {19}.
attacker(sepp_a_addr[]).

269. By 268, the attacker may know sepp_a_addr[].
By 267, the attacker may know prins''(jwe_headers_25,nonce_77,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[]))).
Using the function 2-tuple the attacker may obtain (sepp_a_addr[],prins''(jwe_headers_25,nonce_77,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[])))).
attacker((sepp_a_addr[],prins''(jwe_headers_25,nonce_77,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[]))))).

270. The message () that may be sent on channel c_13[] by 24 may be received at input {1393}.
The message (sepp_a_addr[],prins''(jwe_headers_25,nonce_77,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_36,ipx_b_id[],n32f_context_36),dataToIntegrityProtectAndCipher_24,tag_1),modp_b[],ipx_b_id[],tag_1,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[])))) that the attacker may have by 269 may be received at input {349}.
The entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[])) that may be in a table by 96 may be read at get {517}.
We have RES ≠ REQ.
So event recvValidIpxPatchSeppA(ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[]))) may be executed at {440} in session @sid_2.
end(@occ440_2,recvValidIpxPatchSeppA(ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[])))).

271. We assume as hypothesis that
attacker(ipx_b_mods_12).

272. We assume as hypothesis that
attacker(t).

273. We assume as hypothesis that
attacker(dataToIntegrityProtectAndCipher_23).

274. We assume as hypothesis that
attacker(n32f_context_35).

275. We assume as hypothesis that
attacker(auth_ipx_id_18).

276. We assume as hypothesis that
attacker(msg_id_35).

277. We assume as hypothesis that
attacker(nonconf_27).

278. We assume as hypothesis that
attacker(msg_type_31).

279. We assume as hypothesis that
attacker(destination_addr_27).

280. We assume as hypothesis that
attacker(source_addr_27).

281. By 280, the attacker may know source_addr_27.
By 279, the attacker may know destination_addr_27.
By 278, the attacker may know msg_type_31.
By 277, the attacker may know nonconf_27.
By 276, the attacker may know msg_id_35.
By 275, the attacker may know auth_ipx_id_18.
By 274, the attacker may know n32f_context_35.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35).
attacker(combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35)).

282. We assume as hypothesis that
attacker(iv_19).

283. We assume as hypothesis that
attacker(jwe_headers_24).

284. By 283, the attacker may know jwe_headers_24.
By 282, the attacker may know iv_19.
By 281, the attacker may know combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35).
By 273, the attacker may know dataToIntegrityProtectAndCipher_23.
By 272, the attacker may know t.
By 271, the attacker may know ipx_b_mods_12.
By 26, the attacker may know EMPTY.
Using the function prins'' the attacker may obtain prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY).
attacker(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY)).

285. The attacker has some term sepp_a_addr_22.
attacker(sepp_a_addr_22).

286. By 285, the attacker may know sepp_a_addr_22.
By 284, the attacker may know prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY).
Using the function 2-tuple the attacker may obtain (sepp_a_addr_22,prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY)).
attacker((sepp_a_addr_22,prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY))).

287. The message () that may be sent on channel c_8[] by 25 may be received at input {1403}.
The message (sepp_a_addr_22,prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY)) that the attacker may have by 286 may be received at input {304}.
So the message (sepp_a_addr_22,prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[])))) may be sent to the attacker at output {310}.
attacker((sepp_a_addr_22,prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[]))))).

288. By 287, the attacker may know (sepp_a_addr_22,prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[])))).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[]))).
attacker(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[])))).

289. By 288, the attacker may know prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[]))).
Using the function 7-proj-prins'' the attacker may obtain jsonPatch(modp_a[],ipx_a_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[])).
attacker(jsonPatch(modp_a[],ipx_a_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[]))).

290. By 289, the attacker may know jsonPatch(modp_a[],ipx_a_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[]).
attacker(signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[])).

291. By 124, the attacker may know modp_a[].
By 123, the attacker may know ipx_a_id[].
By 154, the attacker may know macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
By 290, the attacker may know signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[])).
attacker(jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[]))).

292. We assume as hypothesis that
attacker(tag).

293. We assume as hypothesis that
attacker(dataToIntegrityProtectAndCipher_22).

294. We assume as hypothesis that
attacker(n32f_context_34).

295. We assume as hypothesis that
attacker(msg_id_34).

296. We assume as hypothesis that
attacker(nonconf_26).

297. We assume as hypothesis that
attacker(msg_type_30).

298. We assume as hypothesis that
attacker(destination_addr_26).

299. We assume as hypothesis that
attacker(source_addr_26).

300. By 299, the attacker may know source_addr_26.
By 298, the attacker may know destination_addr_26.
By 297, the attacker may know msg_type_30.
By 296, the attacker may know nonconf_26.
By 295, the attacker may know msg_id_34.
By 100, the attacker may know ipx_b_id[].
By 294, the attacker may know n32f_context_34.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34).
attacker(combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34)).

301. We assume as hypothesis that
attacker(iv_18).

302. We assume as hypothesis that
attacker(jwe_headers_23).

303. By 302, the attacker may know jwe_headers_23.
By 301, the attacker may know iv_18.
By 300, the attacker may know combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34).
By 293, the attacker may know dataToIntegrityProtectAndCipher_22.
By 292, the attacker may know tag.
Using the function prins' the attacker may obtain prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag).
attacker(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag)).

304. We assume as hypothesis that
attacker(sepp_a_addr_19).

305. By 304, the attacker may know sepp_a_addr_19.
By 303, the attacker may know prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag).
Using the function 2-tuple the attacker may obtain (sepp_a_addr_19,prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag)).
attacker((sepp_a_addr_19,prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag))).

306. The message () that may be sent on channel c_7[] by 156 may be received at input {1405}.
The message (sepp_a_addr_19,prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag)) that the attacker may have by 305 may be received at input {294}.
The event ipxSendB(n32f_context_34,msg_id_34,tag,jsonPatch(modp_b[],ipx_b_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[]))) (with occurrence name @occ299_1) may be executed at {299}.
So the message (sepp_a_addr_19,prins''(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag,jsonPatch(modp_b[],ipx_b_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])),EMPTY)) may be sent to the attacker at output {300}.
attacker((sepp_a_addr_19,prins''(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag,jsonPatch(modp_b[],ipx_b_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])),EMPTY))).

307. By 306, the attacker may know (sepp_a_addr_19,prins''(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag,jsonPatch(modp_b[],ipx_b_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])),EMPTY)).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag,jsonPatch(modp_b[],ipx_b_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])),EMPTY).
attacker(prins''(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag,jsonPatch(modp_b[],ipx_b_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])),EMPTY)).

308. By 307, the attacker may know prins''(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag,jsonPatch(modp_b[],ipx_b_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])),EMPTY).
Using the function 6-proj-prins'' the attacker may obtain jsonPatch(modp_b[],ipx_b_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])).
attacker(jsonPatch(modp_b[],ipx_b_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[]))).

309. By 308, the attacker may know jsonPatch(modp_b[],ipx_b_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[]).
attacker(signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])).

310. By 101, the attacker may know modp_b[].
By 100, the attacker may know ipx_b_id[].
By 154, the attacker may know macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
By 309, the attacker may know signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])).
attacker(jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[]))).

311. We assume as hypothesis that
attacker(nonce_76).

312. We assume as hypothesis that
attacker(jwe_headers_22).

313. By 312, the attacker may know jwe_headers_22.
By 311, the attacker may know nonce_76.
By 264, the attacker may know combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
By 176, the attacker may know encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)).
By 154, the attacker may know macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
By 310, the attacker may know jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])).
By 291, the attacker may know jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[])).
Using the function prins'' the attacker may obtain prins''(jwe_headers_22,nonce_76,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[]))).
attacker(prins''(jwe_headers_22,nonce_76,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[])))).

314. By 268, the attacker may know sepp_a_addr[].
By 313, the attacker may know prins''(jwe_headers_22,nonce_76,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[]))).
Using the function 2-tuple the attacker may obtain (sepp_a_addr[],prins''(jwe_headers_22,nonce_76,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[])))).
attacker((sepp_a_addr[],prins''(jwe_headers_22,nonce_76,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[]))))).

315. The message () that may be sent on channel c_13[] by 24 may be received at input {1393}.
The message (sepp_a_addr[],prins''(jwe_headers_22,nonce_76,combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_34,ipx_b_id[],n32f_context_34),dataToIntegrityProtectAndCipher_22,tag),modp_b[],ipx_b_id[],tag,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[])))) that the attacker may have by 314 may be received at input {349}.
The entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[])) that may be in a table by 96 may be read at get {517}.
We have RES ≠ REQ.
So event recvValidIpxPatchSeppA(ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[]))) may be executed at {440} in session @sid_1.
end(@occ440_1,recvValidIpxPatchSeppA(ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[])))).

316. By 315, end(@occ440_1,recvValidIpxPatchSeppA(ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[])))).
By 270, end(@occ440_2,recvValidIpxPatchSeppA(ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[])))).
The goals are reached, combined in the following fact:
end(@occ440_1,recvValidIpxPatchSeppA(ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_23,t,ipx_b_mods_12,EMPTY),modp_a[],ipx_a_id[],t,ipx_a_privkey[])))) && end(@occ440_2,recvValidIpxPatchSeppA(ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_a[],modp_b[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_37,auth_ipx_id_19,n32f_context_37),dataToIntegrityProtectAndCipher_25,t_1,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_1,ipx_a_privkey[])))).


A more detailed output of the traces is available with
  set traceDisplay = long.

new ciphersuites: bitstring creating ciphersuites_1 at {1}

new encp: bitstring creating encp_1 at {2}

out(n32f_i, ~M) with ~M = encp_1 at {3}

new modp_a: bitstring creating modp_a_19 at {4}

out(n32f_i, ~M_1) with ~M_1 = modp_a_19 at {5}

new modp_b: bitstring creating modp_b_19 at {6}

out(n32f_i, ~M_2) with ~M_2 = modp_b_19 at {7}

new modp_r1: bitstring creating modp_r1_1 at {8}

out(n32f_i, ~M_3) with ~M_3 = modp_r1_1 at {9}

new nf_a_addr: bitstring creating nf_a_addr_3 at {10}

out(n32f_i, ~M_4) with ~M_4 = nf_a_addr_3 at {11}

new nf_b_addr: bitstring creating nf_b_addr_3 at {12}

out(n32f_i, ~M_5) with ~M_5 = nf_b_addr_3 at {13}

new sepp_a_plmn: bitstring creating sepp_a_plmn_9 at {14}

out(n32f_i, ~M_6) with ~M_6 = sepp_a_plmn_9 at {15}

new sepp_b_plmn: bitstring creating sepp_b_plmn_9 at {16}

out(n32f_i, ~M_7) with ~M_7 = sepp_b_plmn_9 at {17}

new sepp_a_addr: bitstring creating sepp_a_addr_19 at {18}

out(n32f_i, ~M_8) with ~M_8 = sepp_a_addr_19 at {19}

new sepp_b_addr: bitstring creating sepp_b_addr_17 at {20}

out(n32f_i, ~M_9) with ~M_9 = sepp_b_addr_17 at {21}

new ipx_a_id: bitstring creating ipx_a_id_19 at {22}

out(n32f_i, ~M_10) with ~M_10 = ipx_a_id_19 at {23}

new ipx_b_id: bitstring creating ipx_b_id_19 at {24}

out(n32f_i, ~M_11) with ~M_11 = ipx_b_id_19 at {25}

new ipx_r2_id: bitstring creating ipx_r2_id_1 at {26}

out(n32f_i, ~M_12) with ~M_12 = ipx_r2_id_1 at {27}

new ipx_a_privkey: privkey creating ipx_a_privkey_1 at {28}

new ipx_b_privkey: privkey creating ipx_b_privkey_1 at {29}

new ipx_r2_privkey: privkey creating ipx_r2_privkey_1 at {30}

out(n32f_a, ~M_13) with ~M_13 = pk(ipx_a_privkey_1) at {32}

out(n32f_b, ~M_14) with ~M_14 = pk(ipx_b_privkey_1) at {34}

out(n32f_a, ~M_15) with ~M_15 = pk(ipx_r2_privkey_1) at {36}

new n32f_pid_3: bitstring creating n32f_pid_4 at {100}

new n32f_pid_2: bitstring creating n32f_pid_5 at {79}

new n32f_pid_1: bitstring creating n32f_pid_6 at {58}

new n32f_pid: bitstring creating n32f_pid_7 at {37}

out(n32c_a, (sepp_b_addr_17,ciphersuites_1,n32f_pid_7)) at {38} received at {59}

out(n32c_a, (sepp_a_addr_19,ciphersuites_1,n32f_pid_6)) at {60} received at {39}

event recvN32fContext(sepp_b_addr_17,n32f_pid_7,n32f_pid_6,deriveContextId(n32f_pid_7,n32f_pid_6)) at {62}

event sendN32fContext(sepp_a_addr_19,n32f_pid_7,n32f_pid_6,deriveContextId(n32f_pid_7,n32f_pid_6)) at {41}

out(n32c_a, (sepp_b_addr_17,deriveContextId(n32f_pid_7,n32f_pid_6),encp_1,modp_a_19)) at {42} received at {63}

out(n32c_a, (sepp_a_addr_19,deriveContextId(n32f_pid_7,n32f_pid_6),encp_1,modp_b_19)) at {64} received at {43}

out(n32c_a, (sepp_b_addr_17,deriveContextId(n32f_pid_7,n32f_pid_6),ipx_a_id_19,pk(ipx_a_privkey_1))) at {44} received at {65}

out(n32c_a, (sepp_a_addr_19,deriveContextId(n32f_pid_7,n32f_pid_6),ipx_b_id_19,pk(ipx_b_privkey_1))) at {66} received at {45}

event recvMasterKey(sepp_b_addr_17,deriveContextId(n32f_pid_7,n32f_pid_6),deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))) at {69}

insert storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_7,n32f_pid_6),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_19,pk(ipx_b_privkey_1),ipx_a_id_19,pk(ipx_a_privkey_1)) at {78}

event sendMasterKey(sepp_a_addr_19,deriveContextId(n32f_pid_7,n32f_pid_6),deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))) at {48}

insert storeSeppA(sepp_b_plmn_9,sepp_b_addr_17,deriveContextId(n32f_pid_7,n32f_pid_6),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),ciphersuites_1,encp_1,modp_a_19,modp_b_19,ipx_a_id_19,pk(ipx_a_privkey_1),ipx_b_id_19,pk(ipx_b_privkey_1)) at {57}

out(n32c_b, (sepp_a_addr_19,ciphersuites_1,n32f_pid_5)) at {80} received at {101}

out(n32c_b, (sepp_b_addr_17,ciphersuites_1,n32f_pid_4)) at {102} received at {81}

event recvN32fContext(sepp_a_addr_19,n32f_pid_5,n32f_pid_4,deriveContextId(n32f_pid_5,n32f_pid_4)) at {104}

event sendN32fContext(sepp_b_addr_17,n32f_pid_5,n32f_pid_4,deriveContextId(n32f_pid_5,n32f_pid_4)) at {83}

out(n32c_b, (sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),encp_1,modp_b_19)) at {84} received at {105}

out(n32c_b, (sepp_b_addr_17,deriveContextId(n32f_pid_5,n32f_pid_4),encp_1,modp_a_19)) at {106} received at {85}

out(n32c_b, (sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),ipx_b_id_19,pk(ipx_b_privkey_1))) at {86} received at {107}

out(n32c_b, (sepp_b_addr_17,deriveContextId(n32f_pid_5,n32f_pid_4),ipx_a_id_19,pk(ipx_a_privkey_1))) at {108} received at {87}

event recvMasterKey(sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))) at {111}

insert storeSeppA(sepp_b_plmn_9,sepp_b_addr_17,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_a_19,modp_b_19,ipx_a_id_19,pk(ipx_a_privkey_1),ipx_b_id_19,pk(ipx_b_privkey_1)) at {120}

event sendMasterKey(sepp_b_addr_17,deriveContextId(n32f_pid_5,n32f_pid_4),deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))) at {90}

insert storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_19,pk(ipx_b_privkey_1),ipx_a_id_19,pk(ipx_a_privkey_1)) at {99}

out(a_3, ()) at {1414} received at {1500}

out(a_2, ()) at {1416} received at {1499}

out(a_1, ()) at {1418} received at {1498}

out(a, ()) at {1420} received at {1497}

out(c_3, ()) at {1496} received at {1413}

out(c_2, ()) at {1495} received at {1415}

out(c_1, ()) at {1494} received at {1417}

new msg_body_1: bitstring creating msg_body_46 at {129} in copy a_40

event sendHttpMsgNfB(REQ,msg_body_46) at {131} in copy a_40

new msg_body_1: bitstring creating msg_body_47 at {129} in copy a_41

event sendHttpMsgNfB(REQ,msg_body_47) at {131} in copy a_41

out(c, ()) at {1493} received at {1419}

new msg_body: bitstring creating msg_body_48 at {123} in copy a_42

event sendHttpMsgNfA(REQ,msg_body_48) at {125} in copy a_42

new msg_body: bitstring creating msg_body_49 at {123} in copy a_43

event sendHttpMsgNfA(REQ,msg_body_49) at {125} in copy a_43

out(plmn_a, (SEND,createHttp(nf_a_addr_3,nf_b_addr_3,REQ,msg_body_49))) at {126} in copy a_43 received at {135} in copy a_44

get storeSeppA(sepp_b_plmn_9,sepp_b_addr_17,deriveContextId(n32f_pid_7,n32f_pid_6),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),ciphersuites_1,encp_1,modp_a_19,modp_b_19,ipx_a_id_19,pk(ipx_a_privkey_1),ipx_b_id_19,pk(ipx_b_privkey_1)) at {198} in copy a_44

event recvHttpMsgSeppA(REQ,msg_body_49) at {137} in copy a_44

event sendN32fMsgSeppA(deriveContextId(n32f_pid_7,n32f_pid_6),1,encrypt(getConf(msg_body_49,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1)),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_49,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6))) at {149} in copy a_44

out(n32f_a, (~M_16,prins'(~M_17,~M_18,combineAAD(~M_19,~M_20,~M_21,~M_22,1,~M_23,~M_24),~M_25,~M_26))) with ~M_16 = sepp_b_addr_17, ~M_17 = ciphersuites_1, ~M_18 = deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1), ~M_19 = nf_a_addr_3, ~M_20 = nf_b_addr_3, ~M_21 = REQ, ~M_22 = getNonconf(msg_body_49,encp_1), ~M_23 = ipx_a_id_19, ~M_24 = deriveContextId(n32f_pid_7,n32f_pid_6), ~M_25 = encrypt(getConf(msg_body_49,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1)), ~M_26 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_49,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_49,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))) at {150} in copy a_44

insert storeSeppA(sepp_b_plmn_9,sepp_b_addr_17,deriveContextId(n32f_pid_7,n32f_pid_6),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),ciphersuites_1,encp_1,modp_a_19,modp_b_19,ipx_a_id_19,pk(ipx_a_privkey_1),ipx_b_id_19,pk(ipx_b_privkey_1)) at {151} in copy a_44

out(plmn_a, (SEND,createHttp(nf_a_addr_3,nf_b_addr_3,REQ,msg_body_48))) at {126} in copy a_42 received at {135} in copy a_45

get storeSeppA(sepp_b_plmn_9,sepp_b_addr_17,deriveContextId(n32f_pid_7,n32f_pid_6),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),ciphersuites_1,encp_1,modp_a_19,modp_b_19,ipx_a_id_19,pk(ipx_a_privkey_1),ipx_b_id_19,pk(ipx_b_privkey_1)) at {198} in copy a_45

event recvHttpMsgSeppA(REQ,msg_body_48) at {137} in copy a_45

event sendN32fMsgSeppA(deriveContextId(n32f_pid_7,n32f_pid_6),1,encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1)),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6))) at {149} in copy a_45

out(n32f_a, (~M_27,prins'(~M_28,~M_29,combineAAD(~M_30,~M_31,~M_32,~M_33,1,~M_34,~M_35),~M_36,~M_37))) with ~M_27 = sepp_b_addr_17, ~M_28 = ciphersuites_1, ~M_29 = deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1), ~M_30 = nf_a_addr_3, ~M_31 = nf_b_addr_3, ~M_32 = REQ, ~M_33 = getNonconf(msg_body_48,encp_1), ~M_34 = ipx_a_id_19, ~M_35 = deriveContextId(n32f_pid_7,n32f_pid_6), ~M_36 = encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1)), ~M_37 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))) at {150} in copy a_45

insert storeSeppA(sepp_b_plmn_9,sepp_b_addr_17,deriveContextId(n32f_pid_7,n32f_pid_6),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),ciphersuites_1,encp_1,modp_a_19,modp_b_19,ipx_a_id_19,pk(ipx_a_privkey_1),ipx_b_id_19,pk(ipx_b_privkey_1)) at {151} in copy a_45

out(plmn_b, (SEND,createHttp(nf_b_addr_3,nf_a_addr_3,REQ,msg_body_47))) at {132} in copy a_41 received at {201} in copy a_46

get storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_19,pk(ipx_b_privkey_1),ipx_a_id_19,pk(ipx_a_privkey_1)) at {264} in copy a_46

event recvHttpMsgSeppB(REQ,msg_body_47) at {203} in copy a_46

event sendN32fMsgSeppB(deriveContextId(n32f_pid_5,n32f_pid_4),1,encrypt(getConf(msg_body_47,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_47,encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_5,n32f_pid_4))) at {215} in copy a_46

out(n32f_b, (~M_38,prins'(~M_39,~M_40,combineAAD(~M_41,~M_42,~M_43,~M_44,1,~M_45,~M_46),~M_47,~M_48))) with ~M_38 = sepp_a_addr_19, ~M_39 = ciphersuites_1, ~M_40 = deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1), ~M_41 = nf_b_addr_3, ~M_42 = nf_a_addr_3, ~M_43 = REQ, ~M_44 = getNonconf(msg_body_47,encp_1), ~M_45 = ipx_b_id_19, ~M_46 = deriveContextId(n32f_pid_5,n32f_pid_4), ~M_47 = encrypt(getConf(msg_body_47,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)), ~M_48 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_47,encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_47,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))) at {216} in copy a_46

insert storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_19,pk(ipx_b_privkey_1),ipx_a_id_19,pk(ipx_a_privkey_1)) at {217} in copy a_46

out(plmn_b, (SEND,createHttp(nf_b_addr_3,nf_a_addr_3,REQ,msg_body_46))) at {132} in copy a_40 received at {201} in copy a_47

out(a_12, ()) at {1396} received at {1492}

out(a_11, ()) at {1398} received at {1491}

out(a_10, ()) at {1400} received at {1490}

out(a_9, ()) at {1402} received at {1489}

out(a_8, ()) at {1404} received at {1488}

out(a_7, ()) at {1406} received at {1487}

out(a_6, ()) at {1408} received at {1486}

out(a_5, ()) at {1410} received at {1485}

out(a_4, ()) at {1412} received at {1484}

out(c_12, ()) at {1483} received at {1395}

out(c_11, ()) at {1482} received at {1397}

out(c_10, ()) at {1481} received at {1399}

out(c_9, ()) at {1480} received at {1401}

out(c_8, ()) at {1479} received at {1403}

out(c_7, ()) at {1478} received at {1405}

out(c_6, ()) at {1477} received at {1407}

out(c_5, ()) at {1476} received at {1409}

out(c_4, ()) at {1475} received at {1411}

in(n32f_b, (a_48,prins'(a_49,a_50,combineAAD(a_51,a_52,a_53,a_54,a_55,~M_11,a_56),a_57,a_58))) with ~M_11 = ipx_b_id_19 at {294} in copy a_59

event ipxSendB(a_56,a_55,a_58,jsonPatch(modp_b_19,ipx_b_id_19,a_58,signPrins(prins'(a_49,a_50,combineAAD(a_51,a_52,a_53,a_54,a_55,ipx_b_id_19,a_56),a_57,a_58),modp_b_19,ipx_b_id_19,a_58,ipx_b_privkey_1))) at {299} in copy a_59

out(n32f_i, (~M_49,prins''(~M_50,~M_51,combineAAD(~M_52,~M_53,~M_54,~M_55,~M_56,~M_57,~M_58),~M_59,~M_60,jsonPatch(~M_61,~M_62,~M_63,~M_64),~M_65))) with ~M_49 = a_48, ~M_50 = a_49, ~M_51 = a_50, ~M_52 = a_51, ~M_53 = a_52, ~M_54 = a_53, ~M_55 = a_54, ~M_56 = a_55, ~M_57 = ipx_b_id_19, ~M_58 = a_56, ~M_59 = a_57, ~M_60 = a_58, ~M_61 = modp_b_19, ~M_62 = ipx_b_id_19, ~M_63 = a_58, ~M_64 = signPrins(prins'(a_49,a_50,combineAAD(a_51,a_52,a_53,a_54,a_55,ipx_b_id_19,a_56),a_57,a_58),modp_b_19,ipx_b_id_19,a_58,ipx_b_privkey_1), ~M_65 = EMPTY at {300} in copy a_59

out(n32f_i, jsonPatch(~M_66,~M_67,~M_68,~M_69)) with ~M_66 = modp_b_19, ~M_67 = ipx_b_id_19, ~M_68 = a_58, ~M_69 = signPrins(prins'(a_49,a_50,combineAAD(a_51,a_52,a_53,a_54,a_55,ipx_b_id_19,a_56),a_57,a_58),modp_b_19,ipx_b_id_19,a_58,ipx_b_privkey_1) at {301} in copy a_59

in(n32f_b, (a_60,prins'(a_61,a_62,combineAAD(a_63,a_64,a_65,a_66,a_67,~M_11,a_68),a_69,a_70))) with ~M_11 = ipx_b_id_19 at {294} in copy a_71

event ipxSendB(a_68,a_67,a_70,jsonPatch(modp_b_19,ipx_b_id_19,a_70,signPrins(prins'(a_61,a_62,combineAAD(a_63,a_64,a_65,a_66,a_67,ipx_b_id_19,a_68),a_69,a_70),modp_b_19,ipx_b_id_19,a_70,ipx_b_privkey_1))) at {299} in copy a_71

out(n32f_i, (~M_70,prins''(~M_71,~M_72,combineAAD(~M_73,~M_74,~M_75,~M_76,~M_77,~M_78,~M_79),~M_80,~M_81,jsonPatch(~M_82,~M_83,~M_84,~M_85),~M_86))) with ~M_70 = a_60, ~M_71 = a_61, ~M_72 = a_62, ~M_73 = a_63, ~M_74 = a_64, ~M_75 = a_65, ~M_76 = a_66, ~M_77 = a_67, ~M_78 = ipx_b_id_19, ~M_79 = a_68, ~M_80 = a_69, ~M_81 = a_70, ~M_82 = modp_b_19, ~M_83 = ipx_b_id_19, ~M_84 = a_70, ~M_85 = signPrins(prins'(a_61,a_62,combineAAD(a_63,a_64,a_65,a_66,a_67,ipx_b_id_19,a_68),a_69,a_70),modp_b_19,ipx_b_id_19,a_70,ipx_b_privkey_1), ~M_86 = EMPTY at {300} in copy a_71

out(n32f_i, jsonPatch(~M_87,~M_88,~M_89,~M_90)) with ~M_87 = modp_b_19, ~M_88 = ipx_b_id_19, ~M_89 = a_70, ~M_90 = signPrins(prins'(a_61,a_62,combineAAD(a_63,a_64,a_65,a_66,a_67,ipx_b_id_19,a_68),a_69,a_70),modp_b_19,ipx_b_id_19,a_70,ipx_b_privkey_1) at {301} in copy a_71

in(n32f_i, (a_72,prins''(a_73,a_74,combineAAD(a_75,a_76,a_77,a_78,a_79,a_80,a_81),a_82,a_83,a_84,EMPTY))) at {304} in copy a_85

event ipxRecvR1(a_81,a_79,a_83,jsonPatch(modp_a_19,ipx_a_id_19,a_83,signPrinsMod(prins''(a_73,a_74,combineAAD(a_75,a_76,a_77,a_78,a_79,a_80,a_81),a_82,a_83,a_84,EMPTY),modp_a_19,ipx_a_id_19,a_83,ipx_a_privkey_1))) at {309} in copy a_85

out(n32f_a, (~M_91,prins''(~M_92,~M_93,combineAAD(~M_94,~M_95,~M_96,~M_97,~M_98,~M_99,~M_100),~M_101,~M_102,~M_103,jsonPatch(~M_104,~M_105,~M_106,~M_107)))) with ~M_91 = a_72, ~M_92 = a_73, ~M_93 = a_74, ~M_94 = a_75, ~M_95 = a_76, ~M_96 = a_77, ~M_97 = a_78, ~M_98 = a_79, ~M_99 = a_80, ~M_100 = a_81, ~M_101 = a_82, ~M_102 = a_83, ~M_103 = EMPTY, ~M_104 = modp_a_19, ~M_105 = ipx_a_id_19, ~M_106 = a_83, ~M_107 = signPrinsMod(prins''(a_73,a_74,combineAAD(a_75,a_76,a_77,a_78,a_79,a_80,a_81),a_82,a_83,a_84,EMPTY),modp_a_19,ipx_a_id_19,a_83,ipx_a_privkey_1) at {310} in copy a_85

in(n32f_i, (a_86,prins''(a_87,a_88,combineAAD(a_89,a_90,a_91,a_92,a_93,a_94,a_95),a_96,a_97,a_98,EMPTY))) at {304} in copy a_99

event ipxRecvR1(a_95,a_93,a_97,jsonPatch(modp_a_19,ipx_a_id_19,a_97,signPrinsMod(prins''(a_87,a_88,combineAAD(a_89,a_90,a_91,a_92,a_93,a_94,a_95),a_96,a_97,a_98,EMPTY),modp_a_19,ipx_a_id_19,a_97,ipx_a_privkey_1))) at {309} in copy a_99

out(n32f_a, (~M_108,prins''(~M_109,~M_110,combineAAD(~M_111,~M_112,~M_113,~M_114,~M_115,~M_116,~M_117),~M_118,~M_119,~M_120,jsonPatch(~M_121,~M_122,~M_123,~M_124)))) with ~M_108 = a_86, ~M_109 = a_87, ~M_110 = a_88, ~M_111 = a_89, ~M_112 = a_90, ~M_113 = a_91, ~M_114 = a_92, ~M_115 = a_93, ~M_116 = a_94, ~M_117 = a_95, ~M_118 = a_96, ~M_119 = a_97, ~M_120 = EMPTY, ~M_121 = modp_a_19, ~M_122 = ipx_a_id_19, ~M_123 = a_97, ~M_124 = signPrinsMod(prins''(a_87,a_88,combineAAD(a_89,a_90,a_91,a_92,a_93,a_94,a_95),a_96,a_97,a_98,EMPTY),modp_a_19,ipx_a_id_19,a_97,ipx_a_privkey_1) at {310} in copy a_99

in(n32f_a, (a_100,prins'(a_101,a_102,combineAAD(a_103,a_104,a_105,a_106,a_107,a_108,a_109),a_110,a_111))) at {313} in copy a_112

event ipxSendR1(a_109,a_107,a_111,jsonPatch(modp_r1_1,ipx_a_id_19,a_111,signPrins(prins'(a_101,a_102,combineAAD(a_103,a_104,a_105,a_106,a_107,a_108,a_109),a_110,a_111),modp_r1_1,ipx_a_id_19,a_111,ipx_a_privkey_1))) at {318} in copy a_112

out(n32f_i, (~M_125,prins''(~M_126,~M_127,combineAAD(~M_128,~M_129,~M_130,~M_131,~M_132,~M_133,~M_134),~M_135,~M_136,jsonPatch(~M_137,~M_138,~M_139,~M_140),~M_141))) with ~M_125 = a_100, ~M_126 = a_101, ~M_127 = a_102, ~M_128 = a_103, ~M_129 = a_104, ~M_130 = a_105, ~M_131 = a_106, ~M_132 = a_107, ~M_133 = a_108, ~M_134 = a_109, ~M_135 = a_110, ~M_136 = a_111, ~M_137 = modp_r1_1, ~M_138 = ipx_a_id_19, ~M_139 = a_111, ~M_140 = signPrins(prins'(a_101,a_102,combineAAD(a_103,a_104,a_105,a_106,a_107,a_108,a_109),a_110,a_111),modp_r1_1,ipx_a_id_19,a_111,ipx_a_privkey_1), ~M_141 = EMPTY at {319} in copy a_112

in(n32f_a, (a_113,prins'(a_114,a_115,combineAAD(a_116,a_117,a_118,a_119,a_120,a_121,a_122),a_123,a_124))) at {313} in copy a_125

event ipxSendR1(a_122,a_120,a_124,jsonPatch(modp_r1_1,ipx_a_id_19,a_124,signPrins(prins'(a_114,a_115,combineAAD(a_116,a_117,a_118,a_119,a_120,a_121,a_122),a_123,a_124),modp_r1_1,ipx_a_id_19,a_124,ipx_a_privkey_1))) at {318} in copy a_125

out(n32f_i, (~M_142,prins''(~M_143,~M_144,combineAAD(~M_145,~M_146,~M_147,~M_148,~M_149,~M_150,~M_151),~M_152,~M_153,jsonPatch(~M_154,~M_155,~M_156,~M_157),~M_158))) with ~M_142 = a_113, ~M_143 = a_114, ~M_144 = a_115, ~M_145 = a_116, ~M_146 = a_117, ~M_147 = a_118, ~M_148 = a_119, ~M_149 = a_120, ~M_150 = a_121, ~M_151 = a_122, ~M_152 = a_123, ~M_153 = a_124, ~M_154 = modp_r1_1, ~M_155 = ipx_a_id_19, ~M_156 = a_124, ~M_157 = signPrins(prins'(a_114,a_115,combineAAD(a_116,a_117,a_118,a_119,a_120,a_121,a_122),a_123,a_124),modp_r1_1,ipx_a_id_19,a_124,ipx_a_privkey_1), ~M_158 = EMPTY at {319} in copy a_125

in(n32f_a, (a_126,prins'(a_127,a_128,combineAAD(a_129,a_130,a_131,a_132,a_133,a_134,a_135),a_136,a_137))) at {331} in copy a_138

event ipxSendR2(a_135,a_133,a_137,jsonPatch(modp_a_19,ipx_r2_id_1,a_137,signPrins(prins'(a_127,a_128,combineAAD(a_129,a_130,a_131,a_132,a_133,a_134,a_135),a_136,a_137),modp_a_19,ipx_r2_id_1,a_137,ipx_r2_privkey_1))) at {336} in copy a_138

out(n32f_i, (~M_159,prins''(~M_160,~M_161,combineAAD(~M_162,~M_163,~M_164,~M_165,~M_166,~M_167,~M_168),~M_169,~M_170,jsonPatch(~M_171,~M_172,~M_173,~M_174),~M_175))) with ~M_159 = a_126, ~M_160 = a_127, ~M_161 = a_128, ~M_162 = a_129, ~M_163 = a_130, ~M_164 = a_131, ~M_165 = a_132, ~M_166 = a_133, ~M_167 = a_134, ~M_168 = a_135, ~M_169 = a_136, ~M_170 = a_137, ~M_171 = modp_a_19, ~M_172 = ipx_r2_id_1, ~M_173 = a_137, ~M_174 = signPrins(prins'(a_127,a_128,combineAAD(a_129,a_130,a_131,a_132,a_133,a_134,a_135),a_136,a_137),modp_a_19,ipx_r2_id_1,a_137,ipx_r2_privkey_1), ~M_175 = EMPTY at {337} in copy a_138

out(a_22, ()) at {1376} received at {1474}

out(a_21, ()) at {1378} received at {1473}

out(a_20, ()) at {1380} received at {1472}

out(a_19, ()) at {1382} received at {1471}

out(a_18, ()) at {1384} received at {1470}

out(a_17, ()) at {1386} received at {1469}

out(a_16, ()) at {1388} received at {1468}

out(a_15, ()) at {1390} received at {1467}

out(a_14, ()) at {1392} received at {1466}

out(a_13, ()) at {1394} received at {1465}

out(c_22, ()) at {1464} received at {1375}

out(c_21, ()) at {1463} received at {1377}

out(c_20, ()) at {1462} received at {1379}

out(c_19, ()) at {1461} received at {1381}

out(c_18, ()) at {1460} received at {1383}

out(c_17, ()) at {1459} received at {1385}

out(c_16, ()) at {1458} received at {1387}

out(c_15, ()) at {1457} received at {1389}

out(c_14, ()) at {1456} received at {1391}

out(c_13, ()) at {1455} received at {1393}

out(a_31, ()) at {1358} received at {1454}

out(a_30, ()) at {1360} received at {1453}

out(a_29, ()) at {1362} received at {1452}

out(a_28, ()) at {1364} received at {1451}

out(a_27, ()) at {1366} received at {1450}

out(a_26, ()) at {1368} received at {1449}

out(a_25, ()) at {1370} received at {1448}

out(a_24, ()) at {1372} received at {1447}

out(a_23, ()) at {1374} received at {1446}

out(c_31, ()) at {1445} received at {1357}

out(c_30, ()) at {1444} received at {1359}

out(c_29, ()) at {1443} received at {1361}

out(c_28, ()) at {1442} received at {1363}

out(c_27, ()) at {1441} received at {1365}

out(c_26, ()) at {1440} received at {1367}

out(c_25, ()) at {1439} received at {1369}

out(c_24, ()) at {1438} received at {1371}

out(c_23, ()) at {1437} received at {1373}

in(n32f_i, (a_139,prins''(a_140,a_141,combineAAD(a_142,a_143,a_144,a_145,a_146,a_147,a_148),a_149,a_150,a_151,EMPTY))) at {889} in copy a_152

event ipxRecvB(a_148,a_146,a_150,jsonPatch(modp_b_19,ipx_b_id_19,a_150,signPrinsMod(prins''(a_140,a_141,combineAAD(a_142,a_143,a_144,a_145,a_146,a_147,a_148),a_149,a_150,a_151,EMPTY),modp_b_19,ipx_b_id_19,a_150,ipx_b_privkey_1))) at {894} in copy a_152

out(n32f_b, (~M_176,prins''(~M_177,~M_178,combineAAD(~M_179,~M_180,~M_181,~M_182,~M_183,~M_184,~M_185),~M_186,~M_187,~M_188,jsonPatch(~M_189,~M_190,~M_191,~M_192)))) with ~M_176 = a_139, ~M_177 = a_140, ~M_178 = a_141, ~M_179 = a_142, ~M_180 = a_143, ~M_181 = a_144, ~M_182 = a_145, ~M_183 = a_146, ~M_184 = a_147, ~M_185 = a_148, ~M_186 = a_149, ~M_187 = a_150, ~M_188 = a_151, ~M_189 = modp_b_19, ~M_190 = ipx_b_id_19, ~M_191 = a_150, ~M_192 = signPrinsMod(prins''(a_140,a_141,combineAAD(a_142,a_143,a_144,a_145,a_146,a_147,a_148),a_149,a_150,a_151,EMPTY),modp_b_19,ipx_b_id_19,a_150,ipx_b_privkey_1) at {895} in copy a_152

in(n32f_b, (~M_9,prins''(a_153,a_154,combineAAD(~M_4,~M_5,REQ,~M_33,1,~M_10,~M_24),~M_36,~M_37,jsonPatch(~M_1,~M_10,~M_37,~M_140),jsonPatch(~M_2,~M_11,~M_37,~M_192)))) with ~M_9 = sepp_b_addr_17, ~M_4 = nf_a_addr_3, ~M_5 = nf_b_addr_3, ~M_33 = getNonconf(msg_body_48,encp_1), ~M_10 = ipx_a_id_19, ~M_24 = deriveContextId(n32f_pid_7,n32f_pid_6), ~M_36 = encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1)), ~M_37 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))), ~M_1 = modp_a_19, ~M_10 = ipx_a_id_19, ~M_37 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))), ~M_140 = signPrins(prins'(a_101,a_102,combineAAD(a_103,a_104,a_105,a_106,a_107,a_108,a_109),a_110,a_111),modp_r1_1,ipx_a_id_19,a_111,ipx_a_privkey_1), ~M_2 = modp_b_19, ~M_11 = ipx_b_id_19, ~M_37 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))), ~M_192 = signPrinsMod(prins''(a_140,a_141,combineAAD(a_142,a_143,a_144,a_145,a_146,a_147,a_148),a_149,a_150,a_151,EMPTY),modp_b_19,ipx_b_id_19,a_150,ipx_b_privkey_1) at {520} in copy a_155

event recvN32fMsgSeppB(deriveContextId(n32f_pid_7,n32f_pid_6),1,encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1)),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6))) at {523} in copy a_155

get storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_7,n32f_pid_6),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_19,pk(ipx_b_privkey_1),ipx_a_id_19,pk(ipx_a_privkey_1)) at {688} in copy a_155

event recvValidIpxPatchSeppB(ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6),1,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),jsonPatch(modp_a_19,ipx_a_id_19,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),signPrins(prins'(a_101,a_102,combineAAD(a_103,a_104,a_105,a_106,a_107,a_108,a_109),a_110,a_111),modp_r1_1,ipx_a_id_19,a_111,ipx_a_privkey_1))) at {535} in copy a_155

event recvValidIpxPatchSeppB(ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6),1,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),jsonPatch(modp_b_19,ipx_b_id_19,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),signPrinsMod(prins''(a_140,a_141,combineAAD(a_142,a_143,a_144,a_145,a_146,a_147,a_148),a_149,a_150,a_151,EMPTY),modp_b_19,ipx_b_id_19,a_150,ipx_b_privkey_1))) at {540} in copy a_155

event sendHttpMsgSeppB(REQ,applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19)) at {544} in copy a_155

in(n32f_b, (~M_9,prins''(a_156,a_157,combineAAD(~M_4,~M_5,REQ,~M_33,1,~M_10,~M_24),~M_36,~M_37,jsonPatch(~M_1,~M_10,~M_37,~M_157),jsonPatch(~M_2,~M_11,~M_37,~M_192)))) with ~M_9 = sepp_b_addr_17, ~M_4 = nf_a_addr_3, ~M_5 = nf_b_addr_3, ~M_33 = getNonconf(msg_body_48,encp_1), ~M_10 = ipx_a_id_19, ~M_24 = deriveContextId(n32f_pid_7,n32f_pid_6), ~M_36 = encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1)), ~M_37 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))), ~M_1 = modp_a_19, ~M_10 = ipx_a_id_19, ~M_37 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))), ~M_157 = signPrins(prins'(a_114,a_115,combineAAD(a_116,a_117,a_118,a_119,a_120,a_121,a_122),a_123,a_124),modp_r1_1,ipx_a_id_19,a_124,ipx_a_privkey_1), ~M_2 = modp_b_19, ~M_11 = ipx_b_id_19, ~M_37 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))), ~M_192 = signPrinsMod(prins''(a_140,a_141,combineAAD(a_142,a_143,a_144,a_145,a_146,a_147,a_148),a_149,a_150,a_151,EMPTY),modp_b_19,ipx_b_id_19,a_150,ipx_b_privkey_1) at {520} in copy a_158

event recvN32fMsgSeppB(deriveContextId(n32f_pid_7,n32f_pid_6),1,encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1)),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6))) at {523} in copy a_158

get storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_7,n32f_pid_6),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_19,pk(ipx_b_privkey_1),ipx_a_id_19,pk(ipx_a_privkey_1)) at {688} in copy a_158

event recvValidIpxPatchSeppB(ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6),1,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),jsonPatch(modp_a_19,ipx_a_id_19,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),signPrins(prins'(a_114,a_115,combineAAD(a_116,a_117,a_118,a_119,a_120,a_121,a_122),a_123,a_124),modp_r1_1,ipx_a_id_19,a_124,ipx_a_privkey_1))) at {535} in copy a_158

event recvValidIpxPatchSeppB(ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6),1,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),jsonPatch(modp_b_19,ipx_b_id_19,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),signPrinsMod(prins''(a_140,a_141,combineAAD(a_142,a_143,a_144,a_145,a_146,a_147,a_148),a_149,a_150,a_151,EMPTY),modp_b_19,ipx_b_id_19,a_150,ipx_b_privkey_1))) at {540} in copy a_158

event sendHttpMsgSeppB(REQ,applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19)) at {544} in copy a_158

out(a_39, ()) at {1342} received at {1436}

out(a_38, ()) at {1344} received at {1435}

out(a_37, ()) at {1346} received at {1434}

out(a_36, ()) at {1348} received at {1433}

out(a_35, ()) at {1350} received at {1432}

out(a_34, ()) at {1352} received at {1431}

out(a_33, ()) at {1354} received at {1430}

out(a_32, ()) at {1356} received at {1429}

out(c_39, ()) at {1428} received at {1341}

out(c_38, ()) at {1427} received at {1343}

out(c_37, ()) at {1426} received at {1345}

out(c_36, ()) at {1425} received at {1347}

out(c_35, ()) at {1424} received at {1349}

out(c_34, ()) at {1423} received at {1351}

out(c_33, ()) at {1422} received at {1353}

out(plmn_b, (RECV,createHttp(nf_a_addr_3,nf_b_addr_3,REQ,applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19)))) at {545} in copy a_155 received at {1303} in copy a_159

event sendHttpMsgNfB(RES,applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19)) at {1306} in copy a_159

out(plmn_b, (SEND,createHttp(nf_b_addr_3,nf_a_addr_3,RES,applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19)))) at {1307} in copy a_159 received at {805} in copy a_160

out(plmn_b, (RECV,createHttp(nf_a_addr_3,nf_b_addr_3,REQ,applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19)))) at {545} in copy a_158 received at {1303} in copy a_161

event sendHttpMsgNfB(RES,applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19)) at {1306} in copy a_161

out(plmn_b, (SEND,createHttp(nf_b_addr_3,nf_a_addr_3,RES,applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19)))) at {1307} in copy a_161 received at {805} in copy a_162

get storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_7,n32f_pid_6),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_19,pk(ipx_b_privkey_1),ipx_a_id_19,pk(ipx_a_privkey_1)) at {868} in copy a_162

event recvHttpMsgSeppB(RES,applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19)) at {807} in copy a_162

event sendN32fMsgSeppB(deriveContextId(n32f_pid_7,n32f_pid_6),1,encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1)),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6))) at {842} in copy a_162

out(n32f_b, (~M_193,prins'(~M_194,~M_195,combineAAD(~M_196,~M_197,~M_198,~M_199,1,~M_200,~M_201),~M_202,~M_203))) with ~M_193 = sepp_a_addr_19, ~M_194 = ciphersuites_1, ~M_195 = deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1), ~M_196 = nf_b_addr_3, ~M_197 = nf_a_addr_3, ~M_198 = RES, ~M_199 = getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1), ~M_200 = ipx_b_id_19, ~M_201 = deriveContextId(n32f_pid_7,n32f_pid_6), ~M_202 = encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1)), ~M_203 = macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))) at {843} in copy a_162

insert storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_7,n32f_pid_6),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_19,pk(ipx_b_privkey_1),ipx_a_id_19,pk(ipx_a_privkey_1)) at {844} in copy a_162

in(n32f_a, (~M_8,prins''(a_163,a_164,combineAAD(~M_5,~M_4,RES,~M_199,1,~M_11,~M_24),~M_202,~M_203,jsonPatch(~M_2,~M_11,~M_203,~M_64),jsonPatch(~M_1,~M_10,~M_203,~M_107)))) with ~M_8 = sepp_a_addr_19, ~M_5 = nf_b_addr_3, ~M_4 = nf_a_addr_3, ~M_199 = getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1), ~M_11 = ipx_b_id_19, ~M_24 = deriveContextId(n32f_pid_7,n32f_pid_6), ~M_202 = encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1)), ~M_203 = macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))), ~M_2 = modp_b_19, ~M_11 = ipx_b_id_19, ~M_203 = macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))), ~M_64 = signPrins(prins'(a_49,a_50,combineAAD(a_51,a_52,a_53,a_54,a_55,ipx_b_id_19,a_56),a_57,a_58),modp_b_19,ipx_b_id_19,a_58,ipx_b_privkey_1), ~M_1 = modp_a_19, ~M_10 = ipx_a_id_19, ~M_203 = macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))), ~M_107 = signPrinsMod(prins''(a_73,a_74,combineAAD(a_75,a_76,a_77,a_78,a_79,a_80,a_81),a_82,a_83,a_84,EMPTY),modp_a_19,ipx_a_id_19,a_83,ipx_a_privkey_1) at {349} in copy a_165

event recvN32fMsgSeppA(deriveContextId(n32f_pid_7,n32f_pid_6),1,encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1)),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6))) at {352} in copy a_165

get storeSeppA(sepp_b_plmn_9,sepp_b_addr_17,deriveContextId(n32f_pid_7,n32f_pid_6),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),ciphersuites_1,encp_1,modp_a_19,modp_b_19,ipx_a_id_19,pk(ipx_a_privkey_1),ipx_b_id_19,pk(ipx_b_privkey_1)) at {517} in copy a_165

event recvValidIpxPatchSeppA(ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),jsonPatch(modp_b_19,ipx_b_id_19,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),signPrins(prins'(a_49,a_50,combineAAD(a_51,a_52,a_53,a_54,a_55,ipx_b_id_19,a_56),a_57,a_58),modp_b_19,ipx_b_id_19,a_58,ipx_b_privkey_1))) at {435} in copy a_165

event recvValidIpxPatchSeppA(ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),jsonPatch(modp_a_19,ipx_a_id_19,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),signPrinsMod(prins''(a_73,a_74,combineAAD(a_75,a_76,a_77,a_78,a_79,a_80,a_81),a_82,a_83,a_84,EMPTY),modp_a_19,ipx_a_id_19,a_83,ipx_a_privkey_1))) at {440} in copy a_165 (goal)

event sendHttpMsgSeppA(RES,applyPatches((getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1)),modp_b_19,modp_a_19)) at {444} in copy a_165

in(n32f_a, (~M_8,prins''(a_166,a_167,combineAAD(~M_5,~M_4,RES,~M_199,1,~M_11,~M_24),~M_202,~M_203,jsonPatch(~M_2,~M_11,~M_203,~M_85),jsonPatch(~M_1,~M_10,~M_203,~M_124)))) with ~M_8 = sepp_a_addr_19, ~M_5 = nf_b_addr_3, ~M_4 = nf_a_addr_3, ~M_199 = getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1), ~M_11 = ipx_b_id_19, ~M_24 = deriveContextId(n32f_pid_7,n32f_pid_6), ~M_202 = encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1)), ~M_203 = macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))), ~M_2 = modp_b_19, ~M_11 = ipx_b_id_19, ~M_203 = macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))), ~M_85 = signPrins(prins'(a_61,a_62,combineAAD(a_63,a_64,a_65,a_66,a_67,ipx_b_id_19,a_68),a_69,a_70),modp_b_19,ipx_b_id_19,a_70,ipx_b_privkey_1), ~M_1 = modp_a_19, ~M_10 = ipx_a_id_19, ~M_203 = macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))), ~M_124 = signPrinsMod(prins''(a_87,a_88,combineAAD(a_89,a_90,a_91,a_92,a_93,a_94,a_95),a_96,a_97,a_98,EMPTY),modp_a_19,ipx_a_id_19,a_97,ipx_a_privkey_1) at {349} in copy a_168

event recvN32fMsgSeppA(deriveContextId(n32f_pid_7,n32f_pid_6),1,encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1)),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6))) at {352} in copy a_168

get storeSeppA(sepp_b_plmn_9,sepp_b_addr_17,deriveContextId(n32f_pid_7,n32f_pid_6),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),ciphersuites_1,encp_1,modp_a_19,modp_b_19,ipx_a_id_19,pk(ipx_a_privkey_1),ipx_b_id_19,pk(ipx_b_privkey_1)) at {517} in copy a_168

event recvValidIpxPatchSeppA(ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),jsonPatch(modp_b_19,ipx_b_id_19,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),signPrins(prins'(a_61,a_62,combineAAD(a_63,a_64,a_65,a_66,a_67,ipx_b_id_19,a_68),a_69,a_70),modp_b_19,ipx_b_id_19,a_70,ipx_b_privkey_1))) at {435} in copy a_168

event recvValidIpxPatchSeppA(ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),jsonPatch(modp_a_19,ipx_a_id_19,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),signPrinsMod(prins''(a_87,a_88,combineAAD(a_89,a_90,a_91,a_92,a_93,a_94,a_95),a_96,a_97,a_98,EMPTY),modp_a_19,ipx_a_id_19,a_97,ipx_a_privkey_1))) at {440} in copy a_168 (goal)

The event recvValidIpxPatchSeppA(ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),jsonPatch(modp_a_19,ipx_a_id_19,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),signPrinsMod(prins''(a_73,a_74,combineAAD(a_75,a_76,a_77,a_78,a_79,a_80,a_81),a_82,a_83,a_84,EMPTY),modp_a_19,ipx_a_id_19,a_83,ipx_a_privkey_1))) is executed at {440} in copy a_165.
The event recvValidIpxPatchSeppA(ipx_a_id_19,deriveContextId(n32f_pid_7,n32f_pid_6),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),jsonPatch(modp_a_19,ipx_a_id_19,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),1,ipx_b_id_19,deriveContextId(n32f_pid_7,n32f_pid_6)),encrypt(getConf(applyPatches((getConf(msg_body_48,encp_1),getNonconf(msg_body_48,encp_1)),modp_a_19,modp_b_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6)))),signPrinsMod(prins''(a_87,a_88,combineAAD(a_89,a_90,a_91,a_92,a_93,a_94,a_95),a_96,a_97,a_98,EMPTY),modp_a_19,ipx_a_id_19,a_97,ipx_a_privkey_1))) is executed at {440} in copy a_168.
A trace has been found.
RESULT inj-event(recvValidIpxPatchSeppA(ipx_b_id_19,n32f_context_34,msg_id_34,jwe_tag_58,ipx_b_mods_12)) && event(recvValidIpxPatchSeppA(ipx_a_id_19,n32f_context_34,msg_id_34,jwe_tag_58,ipx_a_mods_8)) ==> inj-event(ipxRecvA(n32f_context_34,msg_id_34,jwe_tag_58,ipx_a_mods_8)) && inj-event(ipxSendB(n32f_context_34,msg_id_34,jwe_tag_58,ipx_b_mods_12)) is false.
RESULT (even event(recvValidIpxPatchSeppA(ipx_b_id_19,n32f_context_34,msg_id_34,jwe_tag_58,ipx_b_mods_12)) && event(recvValidIpxPatchSeppA(ipx_a_id_19,n32f_context_34,msg_id_34,jwe_tag_58,ipx_a_mods_8)) ==> event(ipxRecvA(n32f_context_34,msg_id_34,jwe_tag_58,ipx_a_mods_8)) && event(ipxSendB(n32f_context_34,msg_id_34,jwe_tag_58,ipx_b_mods_12)) is false.)
Starting query inj-event(recvValidIpxPatchSeppB(ipx_a_id_20,n32f_context_35,msg_id_35,jwe_tag_59,ipx_a_mods_9)) && event(recvValidIpxPatchSeppB(ipx_b_id_20,n32f_context_35,msg_id_35,jwe_tag_59,ipx_b_mods_13)) ==> inj-event(ipxRecvB(n32f_context_35,msg_id_35,jwe_tag_59,ipx_b_mods_13)) && inj-event(ipxSendA(n32f_context_35,msg_id_35,jwe_tag_59,ipx_a_mods_9))
200 rules inserted. The rule base contains 200 rules. 1853 rules in the queue.
400 rules inserted. The rule base contains 400 rules. 1653 rules in the queue.
600 rules inserted. The rule base contains 600 rules. 1453 rules in the queue.
800 rules inserted. The rule base contains 800 rules. 1253 rules in the queue.
1000 rules inserted. The rule base contains 1000 rules. 1053 rules in the queue.
1200 rules inserted. The rule base contains 1200 rules. 853 rules in the queue.
1400 rules inserted. The rule base contains 1400 rules. 653 rules in the queue.
1600 rules inserted. The rule base contains 1600 rules. 453 rules in the queue.
1800 rules inserted. The rule base contains 1800 rules. 253 rules in the queue.
2000 rules inserted. The rule base contains 2000 rules. 53 rules in the queue.
goal reachable: attacker(jwe_headers_22) && attacker(nonce_76) && attacker(jwe_headers_23) && attacker(iv_18) && attacker(source_addr_26) && attacker(destination_addr_26) && attacker(msg_type_30) && attacker(nonconf_26) && attacker(msg_id_35) && attacker(auth_ipx_id_18) && attacker(n32f_context_35) && attacker(dataToIntegrityProtectAndCipher_22) && attacker(tag) && begin(ipxRecvB(n32f_context_36,msg_id_36,t,jsonPatch(modp_b[],ipx_b_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[]))),@occ290_1) && attacker(sepp_b_addr_17) && attacker(jwe_headers_24) && attacker(iv_19) && attacker(source_addr_27) && attacker(destination_addr_27) && attacker(msg_type_31) && attacker(nonconf_27) && attacker(msg_id_36) && attacker(auth_ipx_id_19) && attacker(n32f_context_36) && attacker(dataToIntegrityProtectAndCipher_23) && attacker(t) && attacker(ipx_a_mods_9) && attacker(jwe_headers_25) && attacker(nonce_77) && attacker(jwe_headers_26) && attacker(iv_20) && attacker(source_addr_28) && attacker(destination_addr_28) && attacker(msg_type_32) && attacker(nonconf_28) && attacker(msg_id_37) && attacker(auth_ipx_id_20) && attacker(n32f_context_37) && attacker(dataToIntegrityProtectAndCipher_24) && attacker(tag_1) && begin(ipxSendB(n32f_context_38,msg_id_38,tag_2,jsonPatch(modp_b[],ipx_b_id[],tag_2,signPrins(prins'(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,ipx_b_id[],n32f_context_38),dataToIntegrityProtectAndCipher_25,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[]))),@occ903_1) && attacker(sepp_a_addr_19) && attacker(jwe_headers_27) && attacker(iv_21) && attacker(source_addr_29) && attacker(destination_addr_29) && attacker(msg_type_33) && attacker(nonconf_29) && attacker(msg_id_38) && attacker(n32f_context_38) && attacker(dataToIntegrityProtectAndCipher_25) && attacker(tag_2) && begin(ipxRecvB(n32f_context_39,msg_id_39,t_1,jsonPatch(modp_b[],ipx_b_id[],t_1,signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_26,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]))),@occ290_2) && attacker(sepp_b_addr_18) && attacker(jwe_headers_28) && attacker(iv_22) && attacker(source_addr_30) && attacker(destination_addr_30) && attacker(msg_type_34) && attacker(nonconf_30) && attacker(msg_id_39) && attacker(auth_ipx_id_21) && attacker(n32f_context_39) && attacker(dataToIntegrityProtectAndCipher_26) && attacker(t_1) && attacker(ipx_a_mods_10) -> end(@occ611_1,recvValidIpxPatchSeppB(ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[])))) && end(@occ611_2,recvValidIpxPatchSeppB(ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_26,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]))))
Abbreviations:
msg_body_46 = msg_body_1[!1 = @sid]
@occ611_1 = @occ611[ipx_a_key_5 = pk(ipx_a_privkey[]),ipx_a_id_6 = ipx_a_id[],ipx_b_key_5 = pk(ipx_b_privkey[]),ipx_b_id_6 = ipx_b_id[],modp_a_6 = modp_a[],modp_b_6 = modp_b[],encp_b_1 = encp[],ciphers_b_2 = ciphersuites[],rev_res_iv_b_3 = deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),rev_req_iv_b_3 = deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_res_iv_b_3 = deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_req_iv_b_3 = deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),rev_res_key_b_4 = deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),rev_req_key_b_4 = deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_res_key_b_4 = deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_req_key_b_4 = deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),msg_cnt_b_3 = 0,n32f_context_12 = deriveContextId(n32f_pid_2[],n32f_pid_3[]),sepp_a_addr_7 = sepp_a_addr[],sepp_a_plmn_2 = sepp_a_plmn[],prins_messsage_1 = prins''(jwe_headers_22,nonce_76,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[]))),!1 = @sid_1]
@occ611_2 = @occ611[ipx_a_key_5 = pk(ipx_a_privkey[]),ipx_a_id_6 = ipx_a_id[],ipx_b_key_5 = pk(ipx_b_privkey[]),ipx_b_id_6 = ipx_b_id[],modp_a_6 = modp_a[],modp_b_6 = modp_b[],encp_b_1 = encp[],ciphers_b_2 = ciphersuites[],rev_res_iv_b_3 = deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),rev_req_iv_b_3 = deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_res_iv_b_3 = deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_req_iv_b_3 = deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),rev_res_key_b_4 = deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),rev_req_key_b_4 = deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_res_key_b_4 = deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_req_key_b_4 = deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),msg_cnt_b_3 = 0,n32f_context_12 = deriveContextId(n32f_pid_2[],n32f_pid_3[]),sepp_a_addr_7 = sepp_a_addr[],sepp_a_plmn_2 = sepp_a_plmn[],prins_messsage_1 = prins''(jwe_headers_25,nonce_77,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_26,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]))),!1 = @sid_2]
@occ290_1 = @occ290[prins_message_2 = prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),sepp_b_addr_3 = sepp_b_addr_17,!1 = @sid_3]
@occ903_1 = @occ903[prins_message_12 = prins'(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,ipx_b_id[],n32f_context_38),dataToIntegrityProtectAndCipher_25,tag_2),sepp_a_addr_12 = sepp_a_addr_19,!1 = @sid_4]
@occ290_2 = @occ290[prins_message_2 = prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,auth_ipx_id_21,n32f_context_39),dataToIntegrityProtectAndCipher_26,t_1,ipx_a_mods_10,EMPTY),sepp_b_addr_3 = sepp_b_addr_18,!1 = @sid_5]

Derivation:
Abbreviations:
msg_body_46 = msg_body_1[!1 = @sid]
@occ611_1 = @occ611[ipx_a_key_5 = pk(ipx_a_privkey[]),ipx_a_id_6 = ipx_a_id[],ipx_b_key_5 = pk(ipx_b_privkey[]),ipx_b_id_6 = ipx_b_id[],modp_a_6 = modp_a[],modp_b_6 = modp_b[],encp_b_1 = encp[],ciphers_b_2 = ciphersuites[],rev_res_iv_b_3 = deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),rev_req_iv_b_3 = deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_res_iv_b_3 = deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_req_iv_b_3 = deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),rev_res_key_b_4 = deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),rev_req_key_b_4 = deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_res_key_b_4 = deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_req_key_b_4 = deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),msg_cnt_b_3 = 0,n32f_context_12 = deriveContextId(n32f_pid_2[],n32f_pid_3[]),sepp_a_addr_7 = sepp_a_addr[],sepp_a_plmn_2 = sepp_a_plmn[],prins_messsage_1 = prins''(jwe_headers_22,nonce_76,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[]))),!1 = @sid_1]
@occ611_2 = @occ611[ipx_a_key_5 = pk(ipx_a_privkey[]),ipx_a_id_6 = ipx_a_id[],ipx_b_key_5 = pk(ipx_b_privkey[]),ipx_b_id_6 = ipx_b_id[],modp_a_6 = modp_a[],modp_b_6 = modp_b[],encp_b_1 = encp[],ciphers_b_2 = ciphersuites[],rev_res_iv_b_3 = deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),rev_req_iv_b_3 = deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_res_iv_b_3 = deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_req_iv_b_3 = deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),rev_res_key_b_4 = deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),rev_req_key_b_4 = deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_res_key_b_4 = deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),par_req_key_b_4 = deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),msg_cnt_b_3 = 0,n32f_context_12 = deriveContextId(n32f_pid_2[],n32f_pid_3[]),sepp_a_addr_7 = sepp_a_addr[],sepp_a_plmn_2 = sepp_a_plmn[],prins_messsage_1 = prins''(jwe_headers_25,nonce_77,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]))),!1 = @sid_2]
@occ290_1 = @occ290[prins_message_2 = prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),sepp_b_addr_3 = sepp_b_addr_17,!1 = @sid_3]
msg_body_47 = msg_body_1[!1 = @sid_4]
msg_body_48 = msg_body_1[!1 = @sid_5]
msg_body_49 = msg_body_1[!1 = @sid_6]
@occ903_1 = @occ903[prins_message_12 = prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),sepp_a_addr_12 = sepp_a_addr_19,!1 = @sid_7]
@occ290_2 = @occ290[prins_message_2 = prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),sepp_b_addr_3 = sepp_b_addr_18,!1 = @sid_8]

1. The message () may be sent on channel a_3[] at output {1414}.
mess(a_3[],()).

2. The message () may be sent on channel a_2[] at output {1416}.
mess(a_2[],()).

3. The message () may be sent on channel a_1[] at output {1418}.
mess(a_1[],()).

4. The message () may be sent on channel a[] at output {1420}.
mess(a[],()).

5. The message () may be sent on channel a_12[] at output {1396}.
mess(a_12[],()).

6. The message () may be sent on channel a_11[] at output {1398}.
mess(a_11[],()).

7. The message () may be sent on channel a_10[] at output {1400}.
mess(a_10[],()).

8. The message () may be sent on channel a_9[] at output {1402}.
mess(a_9[],()).

9. The message () may be sent on channel a_8[] at output {1404}.
mess(a_8[],()).

10. The message () may be sent on channel a_7[] at output {1406}.
mess(a_7[],()).

11. The message () may be sent on channel a_6[] at output {1408}.
mess(a_6[],()).

12. The message () may be sent on channel a_5[] at output {1410}.
mess(a_5[],()).

13. The message () may be sent on channel a_4[] at output {1412}.
mess(a_4[],()).

14. The message () may be sent on channel a_22[] at output {1376}.
mess(a_22[],()).

15. The message () may be sent on channel a_21[] at output {1378}.
mess(a_21[],()).

16. The message () may be sent on channel a_20[] at output {1380}.
mess(a_20[],()).

17. The message () may be sent on channel a_19[] at output {1382}.
mess(a_19[],()).

18. The message () may be sent on channel a_18[] at output {1384}.
mess(a_18[],()).

19. The message () may be sent on channel a_17[] at output {1386}.
mess(a_17[],()).

20. The message () may be sent on channel a_16[] at output {1388}.
mess(a_16[],()).

21. The message () may be sent on channel a_15[] at output {1390}.
mess(a_15[],()).

22. The message () may be sent on channel a_14[] at output {1392}.
mess(a_14[],()).

23. The message () may be sent on channel a_13[] at output {1394}.
mess(a_13[],()).

24. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
The message () that may be sent on channel a_22[] by 14 may be received at input {1474}.
The message () that may be sent on channel a_21[] by 15 may be received at input {1473}.
The message () that may be sent on channel a_20[] by 16 may be received at input {1472}.
The message () that may be sent on channel a_19[] by 17 may be received at input {1471}.
The message () that may be sent on channel a_18[] by 18 may be received at input {1470}.
The message () that may be sent on channel a_17[] by 19 may be received at input {1469}.
The message () that may be sent on channel a_16[] by 20 may be received at input {1468}.
The message () that may be sent on channel a_15[] by 21 may be received at input {1467}.
The message () that may be sent on channel a_14[] by 22 may be received at input {1466}.
The message () that may be sent on channel a_13[] by 23 may be received at input {1465}.
So the message () may be sent on channel c_14[] at output {1456}.
mess(c_14[],()).

25. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
So the message () may be sent on channel c_6[] at output {1477}.
mess(c_6[],()).

26. Using the function EMPTY the attacker may obtain EMPTY.
attacker(EMPTY).

27. We assume as hypothesis that
attacker(ipx_a_mods_10).

28. We assume as hypothesis that
attacker(t_1).

29. We assume as hypothesis that
attacker(dataToIntegrityProtectAndCipher_25).

30. We assume as hypothesis that
attacker(n32f_context_38).

31. We assume as hypothesis that
attacker(auth_ipx_id_21).

32. We assume as hypothesis that
attacker(msg_id_38).

33. We assume as hypothesis that
attacker(nonconf_29).

34. We assume as hypothesis that
attacker(msg_type_33).

35. We assume as hypothesis that
attacker(destination_addr_29).

36. We assume as hypothesis that
attacker(source_addr_29).

37. By 36, the attacker may know source_addr_29.
By 35, the attacker may know destination_addr_29.
By 34, the attacker may know msg_type_33.
By 33, the attacker may know nonconf_29.
By 32, the attacker may know msg_id_38.
By 31, the attacker may know auth_ipx_id_21.
By 30, the attacker may know n32f_context_38.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38).
attacker(combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38)).

38. We assume as hypothesis that
attacker(iv_21).

39. We assume as hypothesis that
attacker(jwe_headers_27).

40. By 39, the attacker may know jwe_headers_27.
By 38, the attacker may know iv_21.
By 37, the attacker may know combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38).
By 29, the attacker may know dataToIntegrityProtectAndCipher_25.
By 28, the attacker may know t_1.
By 27, the attacker may know ipx_a_mods_10.
By 26, the attacker may know EMPTY.
Using the function prins'' the attacker may obtain prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY).
attacker(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY)).

41. We assume as hypothesis that
attacker(sepp_b_addr_18).

42. By 41, the attacker may know sepp_b_addr_18.
By 40, the attacker may know prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY).
Using the function 2-tuple the attacker may obtain (sepp_b_addr_18,prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY)).
attacker((sepp_b_addr_18,prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY))).

43. The message () that may be sent on channel c_6[] by 25 may be received at input {1407}.
The message (sepp_b_addr_18,prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY)) that the attacker may have by 42 may be received at input {285}.
The event ipxRecvB(n32f_context_38,msg_id_38,t_1,jsonPatch(modp_b[],ipx_b_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]))) (with occurrence name @occ290_2) may be executed at {290}.
So the message (sepp_b_addr_18,prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,jsonPatch(modp_b[],ipx_b_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[])))) may be sent to the attacker at output {291}.
attacker((sepp_b_addr_18,prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,jsonPatch(modp_b[],ipx_b_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]))))).

44. By 43, the attacker may know (sepp_b_addr_18,prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,jsonPatch(modp_b[],ipx_b_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[])))).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,jsonPatch(modp_b[],ipx_b_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]))).
attacker(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,jsonPatch(modp_b[],ipx_b_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[])))).

45. By 44, the attacker may know prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,jsonPatch(modp_b[],ipx_b_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]))).
Using the function 7-proj-prins'' the attacker may obtain jsonPatch(modp_b[],ipx_b_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[])).
attacker(jsonPatch(modp_b[],ipx_b_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]))).

46. By 45, the attacker may know jsonPatch(modp_b[],ipx_b_id[],t_1,signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]).
attacker(signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[])).

47. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
The message () that may be sent on channel a_22[] by 14 may be received at input {1474}.
The message () that may be sent on channel a_21[] by 15 may be received at input {1473}.
The message () that may be sent on channel a_20[] by 16 may be received at input {1472}.
The message () that may be sent on channel a_19[] by 17 may be received at input {1471}.
The message () that may be sent on channel a_18[] by 18 may be received at input {1470}.
The message () that may be sent on channel a_17[] by 19 may be received at input {1469}.
The message () that may be sent on channel a_16[] by 20 may be received at input {1468}.
The message () that may be sent on channel a_15[] by 21 may be received at input {1467}.
The message () that may be sent on channel a_14[] by 22 may be received at input {1466}.
The message () that may be sent on channel a_13[] by 23 may be received at input {1465}.
So the message () may be sent on channel c_21[] at output {1463}.
mess(c_21[],()).

48. The message () may be sent on channel a_31[] at output {1358}.
mess(a_31[],()).

49. The message () may be sent on channel a_30[] at output {1360}.
mess(a_30[],()).

50. The message () may be sent on channel a_29[] at output {1362}.
mess(a_29[],()).

51. The message () may be sent on channel a_28[] at output {1364}.
mess(a_28[],()).

52. The message () may be sent on channel a_27[] at output {1366}.
mess(a_27[],()).

53. The message () may be sent on channel a_26[] at output {1368}.
mess(a_26[],()).

54. The message () may be sent on channel a_25[] at output {1370}.
mess(a_25[],()).

55. The message () may be sent on channel a_24[] at output {1372}.
mess(a_24[],()).

56. The message () may be sent on channel a_23[] at output {1374}.
mess(a_23[],()).

57. The message () may be sent on channel a_39[] at output {1342}.
mess(a_39[],()).

58. The message () may be sent on channel a_38[] at output {1344}.
mess(a_38[],()).

59. The message () may be sent on channel a_37[] at output {1346}.
mess(a_37[],()).

60. The message () may be sent on channel a_36[] at output {1348}.
mess(a_36[],()).

61. The message () may be sent on channel a_35[] at output {1350}.
mess(a_35[],()).

62. The message () may be sent on channel a_34[] at output {1352}.
mess(a_34[],()).

63. The message () may be sent on channel a_33[] at output {1354}.
mess(a_33[],()).

64. The message () may be sent on channel a_32[] at output {1356}.
mess(a_32[],()).

65. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
The message () that may be sent on channel a_22[] by 14 may be received at input {1474}.
The message () that may be sent on channel a_21[] by 15 may be received at input {1473}.
The message () that may be sent on channel a_20[] by 16 may be received at input {1472}.
The message () that may be sent on channel a_19[] by 17 may be received at input {1471}.
The message () that may be sent on channel a_18[] by 18 may be received at input {1470}.
The message () that may be sent on channel a_17[] by 19 may be received at input {1469}.
The message () that may be sent on channel a_16[] by 20 may be received at input {1468}.
The message () that may be sent on channel a_15[] by 21 may be received at input {1467}.
The message () that may be sent on channel a_14[] by 22 may be received at input {1466}.
The message () that may be sent on channel a_13[] by 23 may be received at input {1465}.
The message () that may be sent on channel a_31[] by 48 may be received at input {1454}.
The message () that may be sent on channel a_30[] by 49 may be received at input {1453}.
The message () that may be sent on channel a_29[] by 50 may be received at input {1452}.
The message () that may be sent on channel a_28[] by 51 may be received at input {1451}.
The message () that may be sent on channel a_27[] by 52 may be received at input {1450}.
The message () that may be sent on channel a_26[] by 53 may be received at input {1449}.
The message () that may be sent on channel a_25[] by 54 may be received at input {1448}.
The message () that may be sent on channel a_24[] by 55 may be received at input {1447}.
The message () that may be sent on channel a_23[] by 56 may be received at input {1446}.
The message () that may be sent on channel a_39[] by 57 may be received at input {1436}.
The message () that may be sent on channel a_38[] by 58 may be received at input {1435}.
The message () that may be sent on channel a_37[] by 59 may be received at input {1434}.
The message () that may be sent on channel a_36[] by 60 may be received at input {1433}.
The message () that may be sent on channel a_35[] by 61 may be received at input {1432}.
The message () that may be sent on channel a_34[] by 62 may be received at input {1431}.
The message () that may be sent on channel a_33[] by 63 may be received at input {1430}.
The message () that may be sent on channel a_32[] by 64 may be received at input {1429}.
So the message () may be sent on channel c_34[] at output {1423}.
mess(c_34[],()).

66. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
The message () that may be sent on channel a_22[] by 14 may be received at input {1474}.
The message () that may be sent on channel a_21[] by 15 may be received at input {1473}.
The message () that may be sent on channel a_20[] by 16 may be received at input {1472}.
The message () that may be sent on channel a_19[] by 17 may be received at input {1471}.
The message () that may be sent on channel a_18[] by 18 may be received at input {1470}.
The message () that may be sent on channel a_17[] by 19 may be received at input {1469}.
The message () that may be sent on channel a_16[] by 20 may be received at input {1468}.
The message () that may be sent on channel a_15[] by 21 may be received at input {1467}.
The message () that may be sent on channel a_14[] by 22 may be received at input {1466}.
The message () that may be sent on channel a_13[] by 23 may be received at input {1465}.
So the message () may be sent on channel c_13[] at output {1455}.
mess(c_13[],()).

67. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
So the message () may be sent on channel c_8[] at output {1479}.
mess(c_8[],()).

68. The attacker has some term ipx_b_mods_13.
attacker(ipx_b_mods_13).

69. The attacker has some term t_2.
attacker(t_2).

70. The attacker has some term dataToIntegrityProtectAndCipher_27.
attacker(dataToIntegrityProtectAndCipher_27).

71. The attacker has some term n32f_context_40.
attacker(n32f_context_40).

72. The attacker has some term auth_ipx_id_22.
attacker(auth_ipx_id_22).

73. The attacker has some term msg_id_40.
attacker(msg_id_40).

74. The attacker has some term nonconf_31.
attacker(nonconf_31).

75. The attacker has some term msg_type_35.
attacker(msg_type_35).

76. The attacker has some term destination_addr_31.
attacker(destination_addr_31).

77. The attacker has some term source_addr_31.
attacker(source_addr_31).

78. By 77, the attacker may know source_addr_31.
By 76, the attacker may know destination_addr_31.
By 75, the attacker may know msg_type_35.
By 74, the attacker may know nonconf_31.
By 73, the attacker may know msg_id_40.
By 72, the attacker may know auth_ipx_id_22.
By 71, the attacker may know n32f_context_40.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40).
attacker(combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40)).

79. The attacker has some term iv_23.
attacker(iv_23).

80. The attacker has some term jwe_headers_29.
attacker(jwe_headers_29).

81. By 80, the attacker may know jwe_headers_29.
By 79, the attacker may know iv_23.
By 78, the attacker may know combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40).
By 70, the attacker may know dataToIntegrityProtectAndCipher_27.
By 69, the attacker may know t_2.
By 68, the attacker may know ipx_b_mods_13.
By 26, the attacker may know EMPTY.
Using the function prins'' the attacker may obtain prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY).
attacker(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY)).

82. The attacker has some term sepp_a_addr_20.
attacker(sepp_a_addr_20).

83. By 82, the attacker may know sepp_a_addr_20.
By 81, the attacker may know prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY).
Using the function 2-tuple the attacker may obtain (sepp_a_addr_20,prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY)).
attacker((sepp_a_addr_20,prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY))).

84. The message () that may be sent on channel c_8[] by 67 may be received at input {1403}.
The message (sepp_a_addr_20,prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY)) that the attacker may have by 83 may be received at input {304}.
So the message (sepp_a_addr_20,prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_2,signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[])))) may be sent to the attacker at output {310}.
attacker((sepp_a_addr_20,prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_2,signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[]))))).

85. By 84, the attacker may know (sepp_a_addr_20,prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_2,signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[])))).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_2,signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[]))).
attacker(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_2,signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[])))).

86. By 85, the attacker may know prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_2,signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[]))).
Using the function 7-proj-prins'' the attacker may obtain jsonPatch(modp_a[],ipx_a_id[],t_2,signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[])).
attacker(jsonPatch(modp_a[],ipx_a_id[],t_2,signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[]))).

87. By 86, the attacker may know jsonPatch(modp_a[],ipx_a_id[],t_2,signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[]).
attacker(signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[])).

88. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
So the message () may be sent on channel c_3[] at output {1496}.
mess(c_3[],()).

89. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
So the message () may be sent on channel c_1[] at output {1494}.
mess(c_1[],()).

90. The message () that may be sent on channel c_1[] by 89 may be received at input {1417}.
So the message (SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_46)) may be sent on channel plmn_b[] at output {132}.
mess(plmn_b[],(SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_46))).

91. The message (sepp_a_addr[],ciphersuites[],n32f_pid_2[]) may be sent on channel n32c_b[] at output {80}.
mess(n32c_b[],(sepp_a_addr[],ciphersuites[],n32f_pid_2[])).

92. The message (sepp_a_addr[],ciphersuites[],n32f_pid_2[]) that may be sent on channel n32c_b[] by 91 may be received at input {101}.
So the message (sepp_b_addr[],ciphersuites[],n32f_pid_3[]) may be sent on channel n32c_b[] at output {102}.
mess(n32c_b[],(sepp_b_addr[],ciphersuites[],n32f_pid_3[])).

93. The message (sepp_b_addr[],ciphersuites[],n32f_pid_3[]) that may be sent on channel n32c_b[] by 92 may be received at input {81}.
So the message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_b[]) may be sent on channel n32c_b[] at output {84}.
mess(n32c_b[],(sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_b[])).

94. The message (sepp_a_addr[],ciphersuites[],n32f_pid_2[]) that may be sent on channel n32c_b[] by 91 may be received at input {101}.
The message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_b[]) that may be sent on channel n32c_b[] by 93 may be received at input {105}.
So the message (sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_a[]) may be sent on channel n32c_b[] at output {106}.
mess(n32c_b[],(sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_a[])).

95. The message (sepp_a_addr[],ciphersuites[],n32f_pid_2[]) that may be sent on channel n32c_b[] by 91 may be received at input {101}.
The message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_b[]) that may be sent on channel n32c_b[] by 93 may be received at input {105}.
The message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_b[]) that may be sent on channel n32c_b[] by 93 may be received at input {107}.
So the message (sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),ipx_a_id[],pk(ipx_a_privkey[])) may be sent on channel n32c_b[] at output {108}.
mess(n32c_b[],(sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),ipx_a_id[],pk(ipx_a_privkey[]))).

96. The message (sepp_b_addr[],ciphersuites[],n32f_pid_3[]) that may be sent on channel n32c_b[] by 92 may be received at input {81}.
The message (sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_a[]) that may be sent on channel n32c_b[] by 94 may be received at input {85}.
The message (sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be sent on channel n32c_b[] by 95 may be received at input {87}.
So the entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) may be inserted in a table at insert {99}.
table(storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[]))).

97. The message () that may be sent on channel c_3[] by 88 may be received at input {1413}.
The message (SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_46)) that may be sent on channel plmn_b[] by 90 may be received at input {201}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be in a table by 96 may be read at get {264}.
So the message (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))) may be sent to the attacker at output {216}.
attacker((sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))))).

98. By 97, the attacker may know (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))).
Using the function 2-proj-2-tuple the attacker may obtain prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
attacker(prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))).

99. By 98, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
Using the function 5-proj-prins' the attacker may obtain macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
attacker(macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).

100. The message ipx_a_id[] may be sent to the attacker at output {23}.
attacker(ipx_a_id[]).

101. The message modp_a[] may be sent to the attacker at output {5}.
attacker(modp_a[]).

102. By 101, the attacker may know modp_a[].
By 100, the attacker may know ipx_a_id[].
By 99, the attacker may know macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
By 87, the attacker may know signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[])).
attacker(jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[]))).

103. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
The message () that may be sent on channel a_22[] by 14 may be received at input {1474}.
The message () that may be sent on channel a_21[] by 15 may be received at input {1473}.
The message () that may be sent on channel a_20[] by 16 may be received at input {1472}.
The message () that may be sent on channel a_19[] by 17 may be received at input {1471}.
The message () that may be sent on channel a_18[] by 18 may be received at input {1470}.
The message () that may be sent on channel a_17[] by 19 may be received at input {1469}.
The message () that may be sent on channel a_16[] by 20 may be received at input {1468}.
The message () that may be sent on channel a_15[] by 21 may be received at input {1467}.
The message () that may be sent on channel a_14[] by 22 may be received at input {1466}.
The message () that may be sent on channel a_13[] by 23 may be received at input {1465}.
The message () that may be sent on channel a_31[] by 48 may be received at input {1454}.
The message () that may be sent on channel a_30[] by 49 may be received at input {1453}.
The message () that may be sent on channel a_29[] by 50 may be received at input {1452}.
The message () that may be sent on channel a_28[] by 51 may be received at input {1451}.
The message () that may be sent on channel a_27[] by 52 may be received at input {1450}.
The message () that may be sent on channel a_26[] by 53 may be received at input {1449}.
The message () that may be sent on channel a_25[] by 54 may be received at input {1448}.
The message () that may be sent on channel a_24[] by 55 may be received at input {1447}.
The message () that may be sent on channel a_23[] by 56 may be received at input {1446}.
So the message () may be sent on channel c_26[] at output {1440}.
mess(c_26[],()).

104. We assume as hypothesis that
attacker(tag_2).

105. We assume as hypothesis that
attacker(dataToIntegrityProtectAndCipher_26).

106. We assume as hypothesis that
attacker(n32f_context_39).

107. The message ipx_b_id[] may be sent to the attacker at output {25}.
attacker(ipx_b_id[]).

108. We assume as hypothesis that
attacker(msg_id_39).

109. We assume as hypothesis that
attacker(nonconf_30).

110. We assume as hypothesis that
attacker(msg_type_34).

111. We assume as hypothesis that
attacker(destination_addr_30).

112. We assume as hypothesis that
attacker(source_addr_30).

113. By 112, the attacker may know source_addr_30.
By 111, the attacker may know destination_addr_30.
By 110, the attacker may know msg_type_34.
By 109, the attacker may know nonconf_30.
By 108, the attacker may know msg_id_39.
By 107, the attacker may know ipx_b_id[].
By 106, the attacker may know n32f_context_39.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39).
attacker(combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39)).

114. We assume as hypothesis that
attacker(iv_22).

115. We assume as hypothesis that
attacker(jwe_headers_28).

116. By 115, the attacker may know jwe_headers_28.
By 114, the attacker may know iv_22.
By 113, the attacker may know combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39).
By 105, the attacker may know dataToIntegrityProtectAndCipher_26.
By 104, the attacker may know tag_2.
Using the function prins' the attacker may obtain prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2).
attacker(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2)).

117. We assume as hypothesis that
attacker(sepp_a_addr_19).

118. By 117, the attacker may know sepp_a_addr_19.
By 116, the attacker may know prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2).
Using the function 2-tuple the attacker may obtain (sepp_a_addr_19,prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2)).
attacker((sepp_a_addr_19,prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2))).

119. The message () that may be sent on channel c_26[] by 103 may be received at input {1367}.
The message (sepp_a_addr_19,prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2)) that the attacker may have by 118 may be received at input {898}.
The event ipxSendB(n32f_context_39,msg_id_39,tag_2,jsonPatch(modp_b[],ipx_b_id[],tag_2,signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[]))) (with occurrence name @occ903_1) may be executed at {903}.
So the message (sepp_a_addr_19,prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2,jsonPatch(modp_b[],ipx_b_id[],tag_2,signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),EMPTY)) may be sent to the attacker at output {904}.
attacker((sepp_a_addr_19,prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2,jsonPatch(modp_b[],ipx_b_id[],tag_2,signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),EMPTY))).

120. By 119, the attacker may know (sepp_a_addr_19,prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2,jsonPatch(modp_b[],ipx_b_id[],tag_2,signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),EMPTY)).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2,jsonPatch(modp_b[],ipx_b_id[],tag_2,signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),EMPTY).
attacker(prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2,jsonPatch(modp_b[],ipx_b_id[],tag_2,signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),EMPTY)).

121. By 120, the attacker may know prins''(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2,jsonPatch(modp_b[],ipx_b_id[],tag_2,signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),EMPTY).
Using the function 6-proj-prins'' the attacker may obtain jsonPatch(modp_b[],ipx_b_id[],tag_2,signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])).
attacker(jsonPatch(modp_b[],ipx_b_id[],tag_2,signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[]))).

122. By 121, the attacker may know jsonPatch(modp_b[],ipx_b_id[],tag_2,signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[]).
attacker(signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])).

123. The message modp_b[] may be sent to the attacker at output {7}.
attacker(modp_b[]).

124. By 123, the attacker may know modp_b[].
By 107, the attacker may know ipx_b_id[].
By 99, the attacker may know macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
By 122, the attacker may know signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])).
attacker(jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[]))).

125. By 98, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
Using the function 4-proj-prins' the attacker may obtain encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)).
attacker(encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))).

126. The message () that may be sent on channel c_1[] by 89 may be received at input {1417}.
So the message (SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_49)) may be sent on channel plmn_b[] at output {132}.
mess(plmn_b[],(SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_49))).

127. The message () that may be sent on channel c_3[] by 88 may be received at input {1413}.
The message (SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_49)) that may be sent on channel plmn_b[] by 126 may be received at input {201}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be in a table by 96 may be read at get {264}.
So the message (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))) may be sent to the attacker at output {216}.
attacker((sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))))).

128. By 127, the attacker may know (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))).
Using the function 2-proj-2-tuple the attacker may obtain prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
attacker(prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))).

129. By 128, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_49,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
Using the function 3-proj-prins' the attacker may obtain combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
attacker(combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]))).

130. By 129, the attacker may know combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_49,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
Using the function 7-proj-combineAAD the attacker may obtain deriveContextId(n32f_pid_2[],n32f_pid_3[]).
attacker(deriveContextId(n32f_pid_2[],n32f_pid_3[])).

131. Using the function 0 the attacker may obtain 0.
attacker(0).

132. By 131, the attacker may know 0.
Using the function + the attacker may obtain 1.
attacker(1).

133. By 98, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
Using the function 3-proj-prins' the attacker may obtain combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
attacker(combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]))).

134. By 133, the attacker may know combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
Using the function 4-proj-combineAAD the attacker may obtain getNonconf(msg_body_46,encp[]).
attacker(getNonconf(msg_body_46,encp[])).

135. Using the function REQ the attacker may obtain REQ.
attacker(REQ).

136. The message nf_a_addr[] may be sent to the attacker at output {11}.
attacker(nf_a_addr[]).

137. The message nf_b_addr[] may be sent to the attacker at output {13}.
attacker(nf_b_addr[]).

138. By 137, the attacker may know nf_b_addr[].
By 136, the attacker may know nf_a_addr[].
By 135, the attacker may know REQ.
By 134, the attacker may know getNonconf(msg_body_46,encp[]).
By 132, the attacker may know 1.
By 107, the attacker may know ipx_b_id[].
By 130, the attacker may know deriveContextId(n32f_pid_2[],n32f_pid_3[]).
Using the function combineAAD the attacker may obtain combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
attacker(combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]))).

139. The attacker has some term nonce_78.
attacker(nonce_78).

140. The attacker has some term jwe_headers_30.
attacker(jwe_headers_30).

141. By 140, the attacker may know jwe_headers_30.
By 139, the attacker may know nonce_78.
By 138, the attacker may know combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
By 125, the attacker may know encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)).
By 99, the attacker may know macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
By 124, the attacker may know jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])).
By 102, the attacker may know jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[])).
Using the function prins'' the attacker may obtain prins''(jwe_headers_30,nonce_78,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[]))).
attacker(prins''(jwe_headers_30,nonce_78,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[])))).

142. The message sepp_a_addr[] may be sent to the attacker at output {19}.
attacker(sepp_a_addr[]).

143. By 142, the attacker may know sepp_a_addr[].
By 141, the attacker may know prins''(jwe_headers_30,nonce_78,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[]))).
Using the function 2-tuple the attacker may obtain (sepp_a_addr[],prins''(jwe_headers_30,nonce_78,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[])))).
attacker((sepp_a_addr[],prins''(jwe_headers_30,nonce_78,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[]))))).

144. The message (sepp_b_addr[],ciphersuites[],n32f_pid_3[]) that may be sent on channel n32c_b[] by 92 may be received at input {81}.
The message (sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_a[]) that may be sent on channel n32c_b[] by 94 may be received at input {85}.
So the message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),ipx_b_id[],pk(ipx_b_privkey[])) may be sent on channel n32c_b[] at output {86}.
mess(n32c_b[],(sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),ipx_b_id[],pk(ipx_b_privkey[]))).

145. The message (sepp_a_addr[],ciphersuites[],n32f_pid_2[]) that may be sent on channel n32c_b[] by 91 may be received at input {101}.
The message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),encp[],modp_b[]) that may be sent on channel n32c_b[] by 93 may be received at input {105}.
The message (sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),ipx_b_id[],pk(ipx_b_privkey[])) that may be sent on channel n32c_b[] by 144 may be received at input {107}.
So the entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[])) may be inserted in a table at insert {120}.
table(storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[]))).

146. The message () that may be sent on channel c_13[] by 66 may be received at input {1393}.
The message (sepp_a_addr[],prins''(jwe_headers_30,nonce_78,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_29,iv_23,combineAAD(source_addr_31,destination_addr_31,msg_type_35,nonconf_31,msg_id_40,auth_ipx_id_22,n32f_context_40),dataToIntegrityProtectAndCipher_27,t_2,ipx_b_mods_13,EMPTY),modp_a[],ipx_a_id[],t_2,ipx_a_privkey[])))) that the attacker may have by 143 may be received at input {349}.
The entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[])) that may be in a table by 145 may be read at get {517}.
So the message (RECV,createHttp(nf_b_addr[],nf_a_addr[],REQ,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]))) may be sent on channel plmn_a[] at output {374}.
mess(plmn_a[],(RECV,createHttp(nf_b_addr[],nf_a_addr[],REQ,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[])))).

147. The message () that may be sent on channel c_34[] by 65 may be received at input {1351}.
The message (RECV,createHttp(nf_b_addr[],nf_a_addr[],REQ,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]))) that may be sent on channel plmn_a[] by 146 may be received at input {1295}.
So the message (SEND,createHttp(nf_a_addr[],nf_b_addr[],RES,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]))) may be sent on channel plmn_a[] at output {1299}.
mess(plmn_a[],(SEND,createHttp(nf_a_addr[],nf_b_addr[],RES,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[])))).

148. The message () that may be sent on channel c_21[] by 47 may be received at input {1377}.
The message (SEND,createHttp(nf_a_addr[],nf_b_addr[],RES,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]))) that may be sent on channel plmn_a[] by 147 may be received at input {739}.
The entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[])) that may be in a table by 145 may be read at get {802}.
We have RES ≠ REQ.
So the message (sepp_b_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))) may be sent to the attacker at output {777}.
attacker((sepp_b_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))))).

149. By 148, the attacker may know (sepp_b_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))).
Using the function 2-proj-2-tuple the attacker may obtain prins'(ciphersuites[],deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
attacker(prins'(ciphersuites[],deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))).

150. By 149, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
Using the function 5-proj-prins' the attacker may obtain macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
attacker(macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).

151. By 123, the attacker may know modp_b[].
By 107, the attacker may know ipx_b_id[].
By 150, the attacker may know macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
By 46, the attacker may know signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[])).
attacker(jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]))).

152. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
So the message () may be sent on channel c_9[] at output {1480}.
mess(c_9[],()).

153. We assume as hypothesis that
attacker(tag_1).

154. We assume as hypothesis that
attacker(dataToIntegrityProtectAndCipher_24).

155. We assume as hypothesis that
attacker(n32f_context_37).

156. We assume as hypothesis that
attacker(auth_ipx_id_20).

157. We assume as hypothesis that
attacker(msg_id_37).

158. We assume as hypothesis that
attacker(nonconf_28).

159. We assume as hypothesis that
attacker(msg_type_32).

160. We assume as hypothesis that
attacker(destination_addr_28).

161. We assume as hypothesis that
attacker(source_addr_28).

162. By 161, the attacker may know source_addr_28.
By 160, the attacker may know destination_addr_28.
By 159, the attacker may know msg_type_32.
By 158, the attacker may know nonconf_28.
By 157, the attacker may know msg_id_37.
By 156, the attacker may know auth_ipx_id_20.
By 155, the attacker may know n32f_context_37.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37).
attacker(combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37)).

163. We assume as hypothesis that
attacker(iv_20).

164. We assume as hypothesis that
attacker(jwe_headers_26).

165. By 164, the attacker may know jwe_headers_26.
By 163, the attacker may know iv_20.
By 162, the attacker may know combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37).
By 154, the attacker may know dataToIntegrityProtectAndCipher_24.
By 153, the attacker may know tag_1.
Using the function prins' the attacker may obtain prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1).
attacker(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1)).

166. The attacker has some term sepp_b_addr_19.
attacker(sepp_b_addr_19).

167. By 166, the attacker may know sepp_b_addr_19.
By 165, the attacker may know prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1).
Using the function 2-tuple the attacker may obtain (sepp_b_addr_19,prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1)).
attacker((sepp_b_addr_19,prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1))).

168. The message () that may be sent on channel c_9[] by 152 may be received at input {1401}.
The message (sepp_b_addr_19,prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1)) that the attacker may have by 167 may be received at input {313}.
So the message (sepp_b_addr_19,prins''(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1,jsonPatch(modp_r1[],ipx_a_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])),EMPTY)) may be sent to the attacker at output {319}.
attacker((sepp_b_addr_19,prins''(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1,jsonPatch(modp_r1[],ipx_a_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])),EMPTY))).

169. By 168, the attacker may know (sepp_b_addr_19,prins''(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1,jsonPatch(modp_r1[],ipx_a_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])),EMPTY)).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1,jsonPatch(modp_r1[],ipx_a_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])),EMPTY).
attacker(prins''(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1,jsonPatch(modp_r1[],ipx_a_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])),EMPTY)).

170. By 169, the attacker may know prins''(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1,jsonPatch(modp_r1[],ipx_a_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])),EMPTY).
Using the function 6-proj-prins'' the attacker may obtain jsonPatch(modp_r1[],ipx_a_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])).
attacker(jsonPatch(modp_r1[],ipx_a_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[]))).

171. By 170, the attacker may know jsonPatch(modp_r1[],ipx_a_id[],tag_1,signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[]).
attacker(signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])).

172. By 101, the attacker may know modp_a[].
By 100, the attacker may know ipx_a_id[].
By 150, the attacker may know macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
By 171, the attacker may know signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])).
attacker(jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[]))).

173. By 149, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
Using the function 4-proj-prins' the attacker may obtain encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)).
attacker(encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))).

174. The attacker has some term ipx_b_mods_14.
attacker(ipx_b_mods_14).

175. The attacker has some term t_3.
attacker(t_3).

176. The attacker has some term dataToIntegrityProtectAndCipher_28.
attacker(dataToIntegrityProtectAndCipher_28).

177. The attacker has some term n32f_context_41.
attacker(n32f_context_41).

178. The attacker has some term auth_ipx_id_23.
attacker(auth_ipx_id_23).

179. The attacker has some term msg_id_41.
attacker(msg_id_41).

180. The attacker has some term nonconf_32.
attacker(nonconf_32).

181. The attacker has some term msg_type_36.
attacker(msg_type_36).

182. The attacker has some term destination_addr_32.
attacker(destination_addr_32).

183. The attacker has some term source_addr_32.
attacker(source_addr_32).

184. By 183, the attacker may know source_addr_32.
By 182, the attacker may know destination_addr_32.
By 181, the attacker may know msg_type_36.
By 180, the attacker may know nonconf_32.
By 179, the attacker may know msg_id_41.
By 178, the attacker may know auth_ipx_id_23.
By 177, the attacker may know n32f_context_41.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41).
attacker(combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41)).

185. The attacker has some term iv_24.
attacker(iv_24).

186. The attacker has some term jwe_headers_31.
attacker(jwe_headers_31).

187. By 186, the attacker may know jwe_headers_31.
By 185, the attacker may know iv_24.
By 184, the attacker may know combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41).
By 176, the attacker may know dataToIntegrityProtectAndCipher_28.
By 175, the attacker may know t_3.
By 174, the attacker may know ipx_b_mods_14.
By 26, the attacker may know EMPTY.
Using the function prins'' the attacker may obtain prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY).
attacker(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY)).

188. The attacker has some term sepp_a_addr_21.
attacker(sepp_a_addr_21).

189. By 188, the attacker may know sepp_a_addr_21.
By 187, the attacker may know prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY).
Using the function 2-tuple the attacker may obtain (sepp_a_addr_21,prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY)).
attacker((sepp_a_addr_21,prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY))).

190. The message () that may be sent on channel c_8[] by 67 may be received at input {1403}.
The message (sepp_a_addr_21,prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY)) that the attacker may have by 189 may be received at input {304}.
So the message (sepp_a_addr_21,prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_3,signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[])))) may be sent to the attacker at output {310}.
attacker((sepp_a_addr_21,prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_3,signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[]))))).

191. By 190, the attacker may know (sepp_a_addr_21,prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_3,signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[])))).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_3,signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[]))).
attacker(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_3,signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[])))).

192. By 191, the attacker may know prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,EMPTY,jsonPatch(modp_a[],ipx_a_id[],t_3,signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[]))).
Using the function 7-proj-prins'' the attacker may obtain jsonPatch(modp_a[],ipx_a_id[],t_3,signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[])).
attacker(jsonPatch(modp_a[],ipx_a_id[],t_3,signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[]))).

193. By 192, the attacker may know jsonPatch(modp_a[],ipx_a_id[],t_3,signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[]).
attacker(signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[])).

194. By 101, the attacker may know modp_a[].
By 100, the attacker may know ipx_a_id[].
By 99, the attacker may know macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
By 193, the attacker may know signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[])).
attacker(jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[]))).

195. The attacker has some term nonce_79.
attacker(nonce_79).

196. The attacker has some term jwe_headers_32.
attacker(jwe_headers_32).

197. By 196, the attacker may know jwe_headers_32.
By 195, the attacker may know nonce_79.
By 138, the attacker may know combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
By 125, the attacker may know encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)).
By 99, the attacker may know macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
By 124, the attacker may know jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])).
By 194, the attacker may know jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[])).
Using the function prins'' the attacker may obtain prins''(jwe_headers_32,nonce_79,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[]))).
attacker(prins''(jwe_headers_32,nonce_79,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[])))).

198. By 142, the attacker may know sepp_a_addr[].
By 197, the attacker may know prins''(jwe_headers_32,nonce_79,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[]))).
Using the function 2-tuple the attacker may obtain (sepp_a_addr[],prins''(jwe_headers_32,nonce_79,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[])))).
attacker((sepp_a_addr[],prins''(jwe_headers_32,nonce_79,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[]))))).

199. The message () that may be sent on channel c_13[] by 66 may be received at input {1393}.
The message (sepp_a_addr[],prins''(jwe_headers_32,nonce_79,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_28,iv_22,combineAAD(source_addr_30,destination_addr_30,msg_type_34,nonconf_30,msg_id_39,ipx_b_id[],n32f_context_39),dataToIntegrityProtectAndCipher_26,tag_2),modp_b[],ipx_b_id[],tag_2,ipx_b_privkey[])),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_46,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_46,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_31,iv_24,combineAAD(source_addr_32,destination_addr_32,msg_type_36,nonconf_32,msg_id_41,auth_ipx_id_23,n32f_context_41),dataToIntegrityProtectAndCipher_28,t_3,ipx_b_mods_14,EMPTY),modp_a[],ipx_a_id[],t_3,ipx_a_privkey[])))) that the attacker may have by 198 may be received at input {349}.
The entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[])) that may be in a table by 145 may be read at get {517}.
So the message (RECV,createHttp(nf_b_addr[],nf_a_addr[],REQ,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]))) may be sent on channel plmn_a[] at output {374}.
mess(plmn_a[],(RECV,createHttp(nf_b_addr[],nf_a_addr[],REQ,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[])))).

200. The message () that may be sent on channel c_34[] by 65 may be received at input {1351}.
The message (RECV,createHttp(nf_b_addr[],nf_a_addr[],REQ,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]))) that may be sent on channel plmn_a[] by 199 may be received at input {1295}.
So the message (SEND,createHttp(nf_a_addr[],nf_b_addr[],RES,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]))) may be sent on channel plmn_a[] at output {1299}.
mess(plmn_a[],(SEND,createHttp(nf_a_addr[],nf_b_addr[],RES,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[])))).

201. The message (sepp_b_addr[],ciphersuites[],n32f_pid[]) may be sent on channel n32c_a[] at output {38}.
mess(n32c_a[],(sepp_b_addr[],ciphersuites[],n32f_pid[])).

202. The message (sepp_b_addr[],ciphersuites[],n32f_pid[]) that may be sent on channel n32c_a[] by 201 may be received at input {59}.
So the message (sepp_a_addr[],ciphersuites[],n32f_pid_1[]) may be sent on channel n32c_a[] at output {60}.
mess(n32c_a[],(sepp_a_addr[],ciphersuites[],n32f_pid_1[])).

203. The message (sepp_a_addr[],ciphersuites[],n32f_pid_1[]) that may be sent on channel n32c_a[] by 202 may be received at input {39}.
So the message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[]) may be sent on channel n32c_a[] at output {42}.
mess(n32c_a[],(sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[])).

204. The message (sepp_b_addr[],ciphersuites[],n32f_pid[]) that may be sent on channel n32c_a[] by 201 may be received at input {59}.
The message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[]) that may be sent on channel n32c_a[] by 203 may be received at input {63}.
So the message (sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_b[]) may be sent on channel n32c_a[] at output {64}.
mess(n32c_a[],(sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_b[])).

205. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
The message () that may be sent on channel a_22[] by 14 may be received at input {1474}.
The message () that may be sent on channel a_21[] by 15 may be received at input {1473}.
The message () that may be sent on channel a_20[] by 16 may be received at input {1472}.
The message () that may be sent on channel a_19[] by 17 may be received at input {1471}.
The message () that may be sent on channel a_18[] by 18 may be received at input {1470}.
The message () that may be sent on channel a_17[] by 19 may be received at input {1469}.
The message () that may be sent on channel a_16[] by 20 may be received at input {1468}.
The message () that may be sent on channel a_15[] by 21 may be received at input {1467}.
The message () that may be sent on channel a_14[] by 22 may be received at input {1466}.
The message () that may be sent on channel a_13[] by 23 may be received at input {1465}.
So the message () may be sent on channel c_20[] at output {1462}.
mess(c_20[],()).

206. The message () that may be sent on channel a_3[] by 1 may be received at input {1500}.
The message () that may be sent on channel a_2[] by 2 may be received at input {1499}.
The message () that may be sent on channel a_1[] by 3 may be received at input {1498}.
The message () that may be sent on channel a[] by 4 may be received at input {1497}.
The message () that may be sent on channel a_12[] by 5 may be received at input {1492}.
The message () that may be sent on channel a_11[] by 6 may be received at input {1491}.
The message () that may be sent on channel a_10[] by 7 may be received at input {1490}.
The message () that may be sent on channel a_9[] by 8 may be received at input {1489}.
The message () that may be sent on channel a_8[] by 9 may be received at input {1488}.
The message () that may be sent on channel a_7[] by 10 may be received at input {1487}.
The message () that may be sent on channel a_6[] by 11 may be received at input {1486}.
The message () that may be sent on channel a_5[] by 12 may be received at input {1485}.
The message () that may be sent on channel a_4[] by 13 may be received at input {1484}.
The message () that may be sent on channel a_22[] by 14 may be received at input {1474}.
The message () that may be sent on channel a_21[] by 15 may be received at input {1473}.
The message () that may be sent on channel a_20[] by 16 may be received at input {1472}.
The message () that may be sent on channel a_19[] by 17 may be received at input {1471}.
The message () that may be sent on channel a_18[] by 18 may be received at input {1470}.
The message () that may be sent on channel a_17[] by 19 may be received at input {1469}.
The message () that may be sent on channel a_16[] by 20 may be received at input {1468}.
The message () that may be sent on channel a_15[] by 21 may be received at input {1467}.
The message () that may be sent on channel a_14[] by 22 may be received at input {1466}.
The message () that may be sent on channel a_13[] by 23 may be received at input {1465}.
So the message () may be sent on channel c_17[] at output {1459}.
mess(c_17[],()).

207. The attacker has some term ipx_a_mods_11.
attacker(ipx_a_mods_11).

208. The attacker has some term tag_3.
attacker(tag_3).

209. The attacker has some term dataToIntegrityProtectAndCipher_29.
attacker(dataToIntegrityProtectAndCipher_29).

210. The attacker has some term n32f_context_42.
attacker(n32f_context_42).

211. The attacker has some term auth_ipx_id_24.
attacker(auth_ipx_id_24).

212. The attacker has some term msg_id_42.
attacker(msg_id_42).

213. The attacker has some term nonconf_33.
attacker(nonconf_33).

214. The attacker has some term msg_type_37.
attacker(msg_type_37).

215. The attacker has some term destination_addr_33.
attacker(destination_addr_33).

216. The attacker has some term source_addr_33.
attacker(source_addr_33).

217. By 216, the attacker may know source_addr_33.
By 215, the attacker may know destination_addr_33.
By 214, the attacker may know msg_type_37.
By 213, the attacker may know nonconf_33.
By 212, the attacker may know msg_id_42.
By 211, the attacker may know auth_ipx_id_24.
By 210, the attacker may know n32f_context_42.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42).
attacker(combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42)).

218. The attacker has some term iv_25.
attacker(iv_25).

219. The attacker has some term jwe_headers_33.
attacker(jwe_headers_33).

220. By 219, the attacker may know jwe_headers_33.
By 218, the attacker may know iv_25.
By 217, the attacker may know combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42).
By 209, the attacker may know dataToIntegrityProtectAndCipher_29.
By 208, the attacker may know tag_3.
Using the function prins' the attacker may obtain prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3).
attacker(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3)).

221. The attacker has some term sepp_b_addr_20.
attacker(sepp_b_addr_20).

222. By 221, the attacker may know sepp_b_addr_20.
By 220, the attacker may know prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3).
Using the function 2-tuple the attacker may obtain (sepp_b_addr_20,prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3)).
attacker((sepp_b_addr_20,prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3))).

223. The message () that may be sent on channel c_9[] by 152 may be received at input {1401}.
The message (sepp_b_addr_20,prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3)) that the attacker may have by 222 may be received at input {313}.
So the message (sepp_b_addr_20,prins''(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3,jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),EMPTY)) may be sent to the attacker at output {319}.
attacker((sepp_b_addr_20,prins''(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3,jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),EMPTY))).

224. By 223, the attacker may know (sepp_b_addr_20,prins''(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3,jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),EMPTY)).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3,jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),EMPTY).
attacker(prins''(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3,jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),EMPTY)).

225. By 224, the attacker may know prins''(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3,jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),EMPTY).
Using the function 6-proj-prins'' the attacker may obtain jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])).
attacker(jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[]))).

226. By 225, the attacker may know jsonPatch(modp_r1[],ipx_a_id[],tag_3,signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[]).
attacker(signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])).

227. The message () that may be sent on channel c_1[] by 89 may be received at input {1417}.
So the message (SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_47)) may be sent on channel plmn_b[] at output {132}.
mess(plmn_b[],(SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_47))).

228. The message (sepp_b_addr[],ciphersuites[],n32f_pid[]) that may be sent on channel n32c_a[] by 201 may be received at input {59}.
The message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[]) that may be sent on channel n32c_a[] by 203 may be received at input {63}.
The message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[]) that may be sent on channel n32c_a[] by 203 may be received at input {65}.
So the entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),encp[],modp_a[]) may be inserted in a table at insert {78}.
table(storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),encp[],modp_a[])).

229. The message () that may be sent on channel c_3[] by 88 may be received at input {1413}.
The message (SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_47)) that may be sent on channel plmn_b[] by 227 may be received at input {201}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),encp[],modp_a[]) that may be in a table by 228 may be read at get {264}.
So the message (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))) may be sent to the attacker at output {216}.
attacker((sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))))).

230. By 229, the attacker may know (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))).
Using the function 2-proj-2-tuple the attacker may obtain prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
attacker(prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))).

231. By 230, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
Using the function 5-proj-prins' the attacker may obtain macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
attacker(macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).

232. By 123, the attacker may know modp_b[].
By 107, the attacker may know ipx_b_id[].
By 231, the attacker may know macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
By 226, the attacker may know signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])).
attacker(jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[]))).

233. By 230, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
Using the function 4-proj-prins' the attacker may obtain encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)).
attacker(encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))).

234. The message () that may be sent on channel c_1[] by 89 may be received at input {1417}.
So the message (SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_48)) may be sent on channel plmn_b[] at output {132}.
mess(plmn_b[],(SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_48))).

235. The message () that may be sent on channel c_3[] by 88 may be received at input {1413}.
The message (SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_48)) that may be sent on channel plmn_b[] by 234 may be received at input {201}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),encp[],modp_a[]) that may be in a table by 228 may be read at get {264}.
So the message (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))) may be sent to the attacker at output {216}.
attacker((sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))))).

236. By 235, the attacker may know (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))).
Using the function 2-proj-2-tuple the attacker may obtain prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
attacker(prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))).

237. By 236, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_48,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
Using the function 3-proj-prins' the attacker may obtain combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
attacker(combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[]))).

238. By 237, the attacker may know combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_48,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
Using the function 7-proj-combineAAD the attacker may obtain deriveContextId(n32f_pid[],n32f_pid_1[]).
attacker(deriveContextId(n32f_pid[],n32f_pid_1[])).

239. The message () that may be sent on channel c_3[] by 88 may be received at input {1413}.
The message (SEND,createHttp(nf_b_addr[],nf_a_addr[],REQ,msg_body_47)) that may be sent on channel plmn_b[] by 227 may be received at input {201}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be in a table by 96 may be read at get {264}.
So the message (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))) may be sent to the attacker at output {216}.
attacker((sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))))).

240. By 239, the attacker may know (sepp_a_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))).
Using the function 2-proj-2-tuple the attacker may obtain prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
attacker(prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))))).

241. By 240, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))))).
Using the function 3-proj-prins' the attacker may obtain combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
attacker(combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]))).

242. By 241, the attacker may know combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
Using the function 4-proj-combineAAD the attacker may obtain getNonconf(msg_body_47,encp[]).
attacker(getNonconf(msg_body_47,encp[])).

243. By 137, the attacker may know nf_b_addr[].
By 136, the attacker may know nf_a_addr[].
By 135, the attacker may know REQ.
By 242, the attacker may know getNonconf(msg_body_47,encp[]).
By 132, the attacker may know 1.
By 107, the attacker may know ipx_b_id[].
By 238, the attacker may know deriveContextId(n32f_pid[],n32f_pid_1[]).
Using the function combineAAD the attacker may obtain combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
attacker(combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[]))).

244. The attacker has some term nonce_80.
attacker(nonce_80).

245. The attacker has some term jwe_headers_34.
attacker(jwe_headers_34).

246. By 245, the attacker may know jwe_headers_34.
By 244, the attacker may know nonce_80.
By 243, the attacker may know combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
By 233, the attacker may know encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)).
By 231, the attacker may know macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))).
By 232, the attacker may know jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])).
By 207, the attacker may know ipx_a_mods_11.
Using the function prins'' the attacker may obtain prins''(jwe_headers_34,nonce_80,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),ipx_a_mods_11).
attacker(prins''(jwe_headers_34,nonce_80,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),ipx_a_mods_11)).

247. By 142, the attacker may know sepp_a_addr[].
By 246, the attacker may know prins''(jwe_headers_34,nonce_80,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),ipx_a_mods_11).
Using the function 2-tuple the attacker may obtain (sepp_a_addr[],prins''(jwe_headers_34,nonce_80,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),ipx_a_mods_11)).
attacker((sepp_a_addr[],prins''(jwe_headers_34,nonce_80,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),ipx_a_mods_11))).

248. The message (sepp_b_addr[],ciphersuites[],n32f_pid[]) that may be sent on channel n32c_a[] by 201 may be received at input {59}.
The message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[]) that may be sent on channel n32c_a[] by 203 may be received at input {63}.
The message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[]) that may be sent on channel n32c_a[] by 203 may be received at input {65}.
So the message (sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),ipx_b_id[],pk(ipx_b_privkey[])) may be sent on channel n32c_a[] at output {66}.
mess(n32c_a[],(sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),ipx_b_id[],pk(ipx_b_privkey[]))).

249. The message (sepp_a_addr[],ciphersuites[],n32f_pid_1[]) that may be sent on channel n32c_a[] by 202 may be received at input {39}.
The message (sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_b[]) that may be sent on channel n32c_a[] by 204 may be received at input {43}.
The message (sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),ipx_b_id[],pk(ipx_b_privkey[])) that may be sent on channel n32c_a[] by 248 may be received at input {45}.
So the entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[])) may be inserted in a table at insert {57}.
table(storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[]))).

250. The message () that may be sent on channel c_13[] by 66 may be received at input {1393}.
The message (sepp_a_addr[],prins''(jwe_headers_34,nonce_80,combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_b_addr[],nf_a_addr[],REQ,getNonconf(msg_body_47,encp[]),1,ipx_b_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(msg_body_47,encp[]),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))),signPrins(prins'(jwe_headers_33,iv_25,combineAAD(source_addr_33,destination_addr_33,msg_type_37,nonconf_33,msg_id_42,auth_ipx_id_24,n32f_context_42),dataToIntegrityProtectAndCipher_29,tag_3),modp_r1[],ipx_a_id[],tag_3,ipx_a_privkey[])),ipx_a_mods_11)) that the attacker may have by 247 may be received at input {349}.
The entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[])) that may be in a table by 249 may be read at get {517}.
We have ipx_b_privkey[] ≠ ipx_a_privkey[].
So the message (deriveContextId(n32f_pid[],n32f_pid_1[]),1) may be sent on channel err_a[] at output {363}.
mess(err_a[],(deriveContextId(n32f_pid[],n32f_pid_1[]),1)).

251. The message () that may be sent on channel c_17[] by 206 may be received at input {1385}.
The message (deriveContextId(n32f_pid[],n32f_pid_1[]),1) that may be sent on channel err_a[] by 250 may be received at input {707}.
The entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),ipx_b_id[],pk(ipx_b_privkey[])) that may be in a table by 249 may be read at get {711}.
So the message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),1) may be sent on channel n32c_a[] at output {708}.
mess(n32c_a[],(sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),1)).

252. The message (sepp_a_addr[],ciphersuites[],n32f_pid_1[]) that may be sent on channel n32c_a[] by 202 may be received at input {39}.
The message (sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_b[]) that may be sent on channel n32c_a[] by 204 may be received at input {43}.
So the message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),ipx_a_id[],pk(ipx_a_privkey[])) may be sent on channel n32c_a[] at output {44}.
mess(n32c_a[],(sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),ipx_a_id[],pk(ipx_a_privkey[]))).

253. The message (sepp_b_addr[],ciphersuites[],n32f_pid[]) that may be sent on channel n32c_a[] by 201 may be received at input {59}.
The message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_a[]) that may be sent on channel n32c_a[] by 203 may be received at input {63}.
The message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be sent on channel n32c_a[] by 252 may be received at input {65}.
So the entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) may be inserted in a table at insert {78}.
table(storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[]))).

254. The message () that may be sent on channel c_20[] by 205 may be received at input {1379}.
The message (sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),1) that may be sent on channel n32c_a[] by 251 may be received at input {730}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be in a table by 253 may be read at get {736}.
We have 1 ≥ 1.
So the message (sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),1,FAIL) may be sent on channel n32c_a[] at output {734}.
mess(n32c_a[],(sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),1,FAIL)).

255. The message (sepp_a_addr[],ciphersuites[],n32f_pid_1[]) that may be sent on channel n32c_a[] by 202 may be received at input {39}.
The message (sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),encp[],modp_b[]) that may be sent on channel n32c_a[] by 204 may be received at input {43}.
The message (sepp_a_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),1,FAIL) that may be sent on channel n32c_a[] by 254 may be received at input {45}.
So the entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),1,FAIL) may be inserted in a table at insert {57}.
table(storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),1,FAIL)).

256. The message () that may be sent on channel c_21[] by 47 may be received at input {1377}.
The message (SEND,createHttp(nf_a_addr[],nf_b_addr[],RES,applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]))) that may be sent on channel plmn_a[] by 200 may be received at input {739}.
The entry storeSeppA(sepp_b_plmn[],sepp_b_addr[],deriveContextId(n32f_pid[],n32f_pid_1[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),ciphersuites[],encp[],modp_a[],modp_b[],ipx_a_id[],pk(ipx_a_privkey[]),1,FAIL) that may be in a table by 255 may be read at get {802}.
We have RES ≠ REQ.
So the message (sepp_b_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))) may be sent to the attacker at output {777}.
attacker((sepp_b_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))))).

257. By 256, the attacker may know (sepp_b_addr[],prins'(ciphersuites[],deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))).
Using the function 2-proj-2-tuple the attacker may obtain prins'(ciphersuites[],deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
attacker(prins'(ciphersuites[],deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[])))))).

258. By 257, the attacker may know prins'(ciphersuites[],deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1)),macf((deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),deriveNonce(deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))),1))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid[],n32f_pid_1[]))))).
Using the function 3-proj-prins' the attacker may obtain combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
attacker(combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[]))).

259. By 258, the attacker may know combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid[],n32f_pid_1[])).
Using the function 4-proj-combineAAD the attacker may obtain getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]).
attacker(getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[])).

260. Using the function RES the attacker may obtain RES.
attacker(RES).

261. By 136, the attacker may know nf_a_addr[].
By 137, the attacker may know nf_b_addr[].
By 260, the attacker may know RES.
By 259, the attacker may know getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]).
By 132, the attacker may know 1.
By 100, the attacker may know ipx_a_id[].
By 130, the attacker may know deriveContextId(n32f_pid_2[],n32f_pid_3[]).
Using the function combineAAD the attacker may obtain combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
attacker(combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]))).

262. We assume as hypothesis that
attacker(nonce_77).

263. We assume as hypothesis that
attacker(jwe_headers_25).

264. By 263, the attacker may know jwe_headers_25.
By 262, the attacker may know nonce_77.
By 261, the attacker may know combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
By 173, the attacker may know encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)).
By 150, the attacker may know macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
By 172, the attacker may know jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])).
By 151, the attacker may know jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[])).
Using the function prins'' the attacker may obtain prins''(jwe_headers_25,nonce_77,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]))).
attacker(prins''(jwe_headers_25,nonce_77,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[])))).

265. The message sepp_b_addr[] may be sent to the attacker at output {21}.
attacker(sepp_b_addr[]).

266. By 265, the attacker may know sepp_b_addr[].
By 264, the attacker may know prins''(jwe_headers_25,nonce_77,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]))).
Using the function 2-tuple the attacker may obtain (sepp_b_addr[],prins''(jwe_headers_25,nonce_77,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[])))).
attacker((sepp_b_addr[],prins''(jwe_headers_25,nonce_77,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]))))).

267. The message () that may be sent on channel c_14[] by 24 may be received at input {1391}.
The message (sepp_b_addr[],prins''(jwe_headers_25,nonce_77,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_26,iv_20,combineAAD(source_addr_28,destination_addr_28,msg_type_32,nonconf_28,msg_id_37,auth_ipx_id_20,n32f_context_37),dataToIntegrityProtectAndCipher_24,tag_1),modp_r1[],ipx_a_id[],tag_1,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[])))) that the attacker may have by 266 may be received at input {520}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be in a table by 96 may be read at get {688}.
We have RES ≠ REQ.
So event recvValidIpxPatchSeppB(ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[]))) may be executed at {611} in session @sid_2.
end(@occ611_2,recvValidIpxPatchSeppB(ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[])))).

268. We assume as hypothesis that
attacker(ipx_a_mods_9).

269. We assume as hypothesis that
attacker(t).

270. We assume as hypothesis that
attacker(dataToIntegrityProtectAndCipher_23).

271. We assume as hypothesis that
attacker(n32f_context_36).

272. We assume as hypothesis that
attacker(auth_ipx_id_19).

273. We assume as hypothesis that
attacker(msg_id_36).

274. We assume as hypothesis that
attacker(nonconf_27).

275. We assume as hypothesis that
attacker(msg_type_31).

276. We assume as hypothesis that
attacker(destination_addr_27).

277. We assume as hypothesis that
attacker(source_addr_27).

278. By 277, the attacker may know source_addr_27.
By 276, the attacker may know destination_addr_27.
By 275, the attacker may know msg_type_31.
By 274, the attacker may know nonconf_27.
By 273, the attacker may know msg_id_36.
By 272, the attacker may know auth_ipx_id_19.
By 271, the attacker may know n32f_context_36.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36).
attacker(combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36)).

279. We assume as hypothesis that
attacker(iv_19).

280. We assume as hypothesis that
attacker(jwe_headers_24).

281. By 280, the attacker may know jwe_headers_24.
By 279, the attacker may know iv_19.
By 278, the attacker may know combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36).
By 270, the attacker may know dataToIntegrityProtectAndCipher_23.
By 269, the attacker may know t.
By 268, the attacker may know ipx_a_mods_9.
By 26, the attacker may know EMPTY.
Using the function prins'' the attacker may obtain prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY).
attacker(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY)).

282. We assume as hypothesis that
attacker(sepp_b_addr_17).

283. By 282, the attacker may know sepp_b_addr_17.
By 281, the attacker may know prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY).
Using the function 2-tuple the attacker may obtain (sepp_b_addr_17,prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY)).
attacker((sepp_b_addr_17,prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY))).

284. The message () that may be sent on channel c_6[] by 25 may be received at input {1407}.
The message (sepp_b_addr_17,prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY)) that the attacker may have by 283 may be received at input {285}.
The event ipxRecvB(n32f_context_36,msg_id_36,t,jsonPatch(modp_b[],ipx_b_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[]))) (with occurrence name @occ290_1) may be executed at {290}.
So the message (sepp_b_addr_17,prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,jsonPatch(modp_b[],ipx_b_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[])))) may be sent to the attacker at output {291}.
attacker((sepp_b_addr_17,prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,jsonPatch(modp_b[],ipx_b_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[]))))).

285. By 284, the attacker may know (sepp_b_addr_17,prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,jsonPatch(modp_b[],ipx_b_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[])))).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,jsonPatch(modp_b[],ipx_b_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[]))).
attacker(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,jsonPatch(modp_b[],ipx_b_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[])))).

286. By 285, the attacker may know prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,jsonPatch(modp_b[],ipx_b_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[]))).
Using the function 7-proj-prins'' the attacker may obtain jsonPatch(modp_b[],ipx_b_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[])).
attacker(jsonPatch(modp_b[],ipx_b_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[]))).

287. By 286, the attacker may know jsonPatch(modp_b[],ipx_b_id[],t,signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[]).
attacker(signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[])).

288. By 123, the attacker may know modp_b[].
By 107, the attacker may know ipx_b_id[].
By 150, the attacker may know macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
By 287, the attacker may know signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[])).
attacker(jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[]))).

289. We assume as hypothesis that
attacker(tag).

290. We assume as hypothesis that
attacker(dataToIntegrityProtectAndCipher_22).

291. We assume as hypothesis that
attacker(n32f_context_35).

292. We assume as hypothesis that
attacker(auth_ipx_id_18).

293. We assume as hypothesis that
attacker(msg_id_35).

294. We assume as hypothesis that
attacker(nonconf_26).

295. We assume as hypothesis that
attacker(msg_type_30).

296. We assume as hypothesis that
attacker(destination_addr_26).

297. We assume as hypothesis that
attacker(source_addr_26).

298. By 297, the attacker may know source_addr_26.
By 296, the attacker may know destination_addr_26.
By 295, the attacker may know msg_type_30.
By 294, the attacker may know nonconf_26.
By 293, the attacker may know msg_id_35.
By 292, the attacker may know auth_ipx_id_18.
By 291, the attacker may know n32f_context_35.
Using the function combineAAD the attacker may obtain combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35).
attacker(combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35)).

299. We assume as hypothesis that
attacker(iv_18).

300. We assume as hypothesis that
attacker(jwe_headers_23).

301. By 300, the attacker may know jwe_headers_23.
By 299, the attacker may know iv_18.
By 298, the attacker may know combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35).
By 290, the attacker may know dataToIntegrityProtectAndCipher_22.
By 289, the attacker may know tag.
Using the function prins' the attacker may obtain prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag).
attacker(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag)).

302. The attacker has some term sepp_b_addr_21.
attacker(sepp_b_addr_21).

303. By 302, the attacker may know sepp_b_addr_21.
By 301, the attacker may know prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag).
Using the function 2-tuple the attacker may obtain (sepp_b_addr_21,prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag)).
attacker((sepp_b_addr_21,prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag))).

304. The message () that may be sent on channel c_9[] by 152 may be received at input {1401}.
The message (sepp_b_addr_21,prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag)) that the attacker may have by 303 may be received at input {313}.
So the message (sepp_b_addr_21,prins''(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag,jsonPatch(modp_r1[],ipx_a_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])),EMPTY)) may be sent to the attacker at output {319}.
attacker((sepp_b_addr_21,prins''(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag,jsonPatch(modp_r1[],ipx_a_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])),EMPTY))).

305. By 304, the attacker may know (sepp_b_addr_21,prins''(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag,jsonPatch(modp_r1[],ipx_a_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])),EMPTY)).
Using the function 2-proj-2-tuple the attacker may obtain prins''(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag,jsonPatch(modp_r1[],ipx_a_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])),EMPTY).
attacker(prins''(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag,jsonPatch(modp_r1[],ipx_a_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])),EMPTY)).

306. By 305, the attacker may know prins''(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag,jsonPatch(modp_r1[],ipx_a_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])),EMPTY).
Using the function 6-proj-prins'' the attacker may obtain jsonPatch(modp_r1[],ipx_a_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])).
attacker(jsonPatch(modp_r1[],ipx_a_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[]))).

307. By 306, the attacker may know jsonPatch(modp_r1[],ipx_a_id[],tag,signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])).
Using the function 4-proj-jsonPatch the attacker may obtain signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[]).
attacker(signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])).

308. By 101, the attacker may know modp_a[].
By 100, the attacker may know ipx_a_id[].
By 150, the attacker may know macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
By 307, the attacker may know signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[]).
Using the function jsonPatch the attacker may obtain jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])).
attacker(jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[]))).

309. We assume as hypothesis that
attacker(nonce_76).

310. We assume as hypothesis that
attacker(jwe_headers_22).

311. By 310, the attacker may know jwe_headers_22.
By 309, the attacker may know nonce_76.
By 261, the attacker may know combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])).
By 173, the attacker may know encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)).
By 150, the attacker may know macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))).
By 308, the attacker may know jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])).
By 288, the attacker may know jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[])).
Using the function prins'' the attacker may obtain prins''(jwe_headers_22,nonce_76,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[]))).
attacker(prins''(jwe_headers_22,nonce_76,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[])))).

312. By 265, the attacker may know sepp_b_addr[].
By 311, the attacker may know prins''(jwe_headers_22,nonce_76,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[]))).
Using the function 2-tuple the attacker may obtain (sepp_b_addr[],prins''(jwe_headers_22,nonce_76,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[])))).
attacker((sepp_b_addr[],prins''(jwe_headers_22,nonce_76,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[]))))).

313. The message () that may be sent on channel c_14[] by 24 may be received at input {1391}.
The message (sepp_b_addr[],prins''(jwe_headers_22,nonce_76,combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1)),macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_a[],ipx_a_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrins(prins'(jwe_headers_23,iv_18,combineAAD(source_addr_26,destination_addr_26,msg_type_30,nonconf_26,msg_id_35,auth_ipx_id_18,n32f_context_35),dataToIntegrityProtectAndCipher_22,tag),modp_r1[],ipx_a_id[],tag,ipx_a_privkey[])),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[])))) that the attacker may have by 312 may be received at input {520}.
The entry storeSeppB(sepp_a_plmn[],sepp_a_addr[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),ciphersuites[],encp[],modp_b[],modp_a[],ipx_b_id[],pk(ipx_b_privkey[]),ipx_a_id[],pk(ipx_a_privkey[])) that may be in a table by 96 may be read at get {688}.
We have RES ≠ REQ.
So event recvValidIpxPatchSeppB(ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[]))) may be executed at {611} in session @sid_1.
end(@occ611_1,recvValidIpxPatchSeppB(ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[])))).

314. By 313, end(@occ611_1,recvValidIpxPatchSeppB(ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[])))).
By 267, end(@occ611_2,recvValidIpxPatchSeppB(ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[])))).
The goals are reached, combined in the following fact:
end(@occ611_1,recvValidIpxPatchSeppB(ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_24,iv_19,combineAAD(source_addr_27,destination_addr_27,msg_type_31,nonconf_27,msg_id_36,auth_ipx_id_19,n32f_context_36),dataToIntegrityProtectAndCipher_23,t,ipx_a_mods_9,EMPTY),modp_b[],ipx_b_id[],t,ipx_b_privkey[])))) && end(@occ611_2,recvValidIpxPatchSeppB(ipx_b_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[]),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),jsonPatch(modp_b[],ipx_b_id[],macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1),combineAAD(nf_a_addr[],nf_b_addr[],RES,getNonconf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),1,ipx_a_id[],deriveContextId(n32f_pid_2[],n32f_pid_3[])),encrypt(getConf(applyPatches((getConf(msg_body_46,encp[]),getNonconf(msg_body_46,encp[])),modp_b[],modp_a[]),encp[]),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[]))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_2[],n32f_pid_3[])))),signPrinsMod(prins''(jwe_headers_27,iv_21,combineAAD(source_addr_29,destination_addr_29,msg_type_33,nonconf_29,msg_id_38,auth_ipx_id_21,n32f_context_38),dataToIntegrityProtectAndCipher_25,t_1,ipx_a_mods_10,EMPTY),modp_b[],ipx_b_id[],t_1,ipx_b_privkey[])))).


A more detailed output of the traces is available with
  set traceDisplay = long.

new ciphersuites: bitstring creating ciphersuites_1 at {1}

new encp: bitstring creating encp_1 at {2}

out(n32f_i, ~M) with ~M = encp_1 at {3}

new modp_a: bitstring creating modp_a_19 at {4}

out(n32f_i, ~M_1) with ~M_1 = modp_a_19 at {5}

new modp_b: bitstring creating modp_b_19 at {6}

out(n32f_i, ~M_2) with ~M_2 = modp_b_19 at {7}

new modp_r1: bitstring creating modp_r1_1 at {8}

out(n32f_i, ~M_3) with ~M_3 = modp_r1_1 at {9}

new nf_a_addr: bitstring creating nf_a_addr_3 at {10}

out(n32f_i, ~M_4) with ~M_4 = nf_a_addr_3 at {11}

new nf_b_addr: bitstring creating nf_b_addr_3 at {12}

out(n32f_i, ~M_5) with ~M_5 = nf_b_addr_3 at {13}

new sepp_a_plmn: bitstring creating sepp_a_plmn_9 at {14}

out(n32f_i, ~M_6) with ~M_6 = sepp_a_plmn_9 at {15}

new sepp_b_plmn: bitstring creating sepp_b_plmn_9 at {16}

out(n32f_i, ~M_7) with ~M_7 = sepp_b_plmn_9 at {17}

new sepp_a_addr: bitstring creating sepp_a_addr_19 at {18}

out(n32f_i, ~M_8) with ~M_8 = sepp_a_addr_19 at {19}

new sepp_b_addr: bitstring creating sepp_b_addr_17 at {20}

out(n32f_i, ~M_9) with ~M_9 = sepp_b_addr_17 at {21}

new ipx_a_id: bitstring creating ipx_a_id_20 at {22}

out(n32f_i, ~M_10) with ~M_10 = ipx_a_id_20 at {23}

new ipx_b_id: bitstring creating ipx_b_id_20 at {24}

out(n32f_i, ~M_11) with ~M_11 = ipx_b_id_20 at {25}

new ipx_r2_id: bitstring creating ipx_r2_id_1 at {26}

out(n32f_i, ~M_12) with ~M_12 = ipx_r2_id_1 at {27}

new ipx_a_privkey: privkey creating ipx_a_privkey_1 at {28}

new ipx_b_privkey: privkey creating ipx_b_privkey_1 at {29}

new ipx_r2_privkey: privkey creating ipx_r2_privkey_1 at {30}

out(n32f_a, ~M_13) with ~M_13 = pk(ipx_a_privkey_1) at {32}

out(n32f_b, ~M_14) with ~M_14 = pk(ipx_b_privkey_1) at {34}

out(n32f_a, ~M_15) with ~M_15 = pk(ipx_r2_privkey_1) at {36}

new n32f_pid_3: bitstring creating n32f_pid_4 at {100}

new n32f_pid_2: bitstring creating n32f_pid_5 at {79}

new n32f_pid_1: bitstring creating n32f_pid_6 at {58}

new n32f_pid: bitstring creating n32f_pid_7 at {37}

out(n32c_a, (sepp_b_addr_17,ciphersuites_1,n32f_pid_7)) at {38} received at {59}

out(n32c_a, (sepp_a_addr_19,ciphersuites_1,n32f_pid_6)) at {60} received at {39}

event recvN32fContext(sepp_b_addr_17,n32f_pid_7,n32f_pid_6,deriveContextId(n32f_pid_7,n32f_pid_6)) at {62}

event sendN32fContext(sepp_a_addr_19,n32f_pid_7,n32f_pid_6,deriveContextId(n32f_pid_7,n32f_pid_6)) at {41}

out(n32c_a, (sepp_b_addr_17,deriveContextId(n32f_pid_7,n32f_pid_6),encp_1,modp_a_19)) at {42} received at {63}

out(n32c_a, (sepp_a_addr_19,deriveContextId(n32f_pid_7,n32f_pid_6),encp_1,modp_b_19)) at {64} received at {43}

out(n32c_a, (sepp_b_addr_17,deriveContextId(n32f_pid_7,n32f_pid_6),ipx_a_id_20,pk(ipx_a_privkey_1))) at {44} received at {65}

out(n32c_a, (sepp_a_addr_19,deriveContextId(n32f_pid_7,n32f_pid_6),ipx_b_id_20,pk(ipx_b_privkey_1))) at {66} received at {45}

event recvMasterKey(sepp_b_addr_17,deriveContextId(n32f_pid_7,n32f_pid_6),deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))) at {69}

insert storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_7,n32f_pid_6),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_20,pk(ipx_b_privkey_1),ipx_a_id_20,pk(ipx_a_privkey_1)) at {78}

event sendMasterKey(sepp_a_addr_19,deriveContextId(n32f_pid_7,n32f_pid_6),deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))) at {48}

insert storeSeppA(sepp_b_plmn_9,sepp_b_addr_17,deriveContextId(n32f_pid_7,n32f_pid_6),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_7,n32f_pid_6))),ciphersuites_1,encp_1,modp_a_19,modp_b_19,ipx_a_id_20,pk(ipx_a_privkey_1),ipx_b_id_20,pk(ipx_b_privkey_1)) at {57}

out(n32c_b, (sepp_a_addr_19,ciphersuites_1,n32f_pid_5)) at {80} received at {101}

out(n32c_b, (sepp_b_addr_17,ciphersuites_1,n32f_pid_4)) at {102} received at {81}

event recvN32fContext(sepp_a_addr_19,n32f_pid_5,n32f_pid_4,deriveContextId(n32f_pid_5,n32f_pid_4)) at {104}

event sendN32fContext(sepp_b_addr_17,n32f_pid_5,n32f_pid_4,deriveContextId(n32f_pid_5,n32f_pid_4)) at {83}

out(n32c_b, (sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),encp_1,modp_b_19)) at {84} received at {105}

out(n32c_b, (sepp_b_addr_17,deriveContextId(n32f_pid_5,n32f_pid_4),encp_1,modp_a_19)) at {106} received at {85}

out(n32c_b, (sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),ipx_b_id_20,pk(ipx_b_privkey_1))) at {86} received at {107}

out(n32c_b, (sepp_b_addr_17,deriveContextId(n32f_pid_5,n32f_pid_4),ipx_a_id_20,pk(ipx_a_privkey_1))) at {108} received at {87}

event recvMasterKey(sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))) at {111}

insert storeSeppA(sepp_b_plmn_9,sepp_b_addr_17,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_a_19,modp_b_19,ipx_a_id_20,pk(ipx_a_privkey_1),ipx_b_id_20,pk(ipx_b_privkey_1)) at {120}

event sendMasterKey(sepp_b_addr_17,deriveContextId(n32f_pid_5,n32f_pid_4),deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))) at {90}

insert storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_20,pk(ipx_b_privkey_1),ipx_a_id_20,pk(ipx_a_privkey_1)) at {99}

out(a_3, ()) at {1414} received at {1500}

out(a_2, ()) at {1416} received at {1499}

out(a_1, ()) at {1418} received at {1498}

out(a, ()) at {1420} received at {1497}

out(c_3, ()) at {1496} received at {1413}

out(c_2, ()) at {1495} received at {1415}

out(c_1, ()) at {1494} received at {1417}

new msg_body_1: bitstring creating msg_body_46 at {129} in copy a_40

event sendHttpMsgNfB(REQ,msg_body_46) at {131} in copy a_40

new msg_body_1: bitstring creating msg_body_47 at {129} in copy a_41

event sendHttpMsgNfB(REQ,msg_body_47) at {131} in copy a_41

new msg_body_1: bitstring creating msg_body_48 at {129} in copy a_42

event sendHttpMsgNfB(REQ,msg_body_48) at {131} in copy a_42

new msg_body_1: bitstring creating msg_body_49 at {129} in copy a_43

event sendHttpMsgNfB(REQ,msg_body_49) at {131} in copy a_43

out(c, ()) at {1493} received at {1419}

out(plmn_b, (SEND,createHttp(nf_b_addr_3,nf_a_addr_3,REQ,msg_body_48))) at {132} in copy a_42 received at {201} in copy a_44

get storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_20,pk(ipx_b_privkey_1),ipx_a_id_20,pk(ipx_a_privkey_1)) at {264} in copy a_44

event recvHttpMsgSeppB(REQ,msg_body_48) at {203} in copy a_44

event sendN32fMsgSeppB(deriveContextId(n32f_pid_5,n32f_pid_4),1,encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4))) at {215} in copy a_44

out(n32f_b, (~M_16,prins'(~M_17,~M_18,combineAAD(~M_19,~M_20,~M_21,~M_22,1,~M_23,~M_24),~M_25,~M_26))) with ~M_16 = sepp_a_addr_19, ~M_17 = ciphersuites_1, ~M_18 = deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1), ~M_19 = nf_b_addr_3, ~M_20 = nf_a_addr_3, ~M_21 = REQ, ~M_22 = getNonconf(msg_body_48,encp_1), ~M_23 = ipx_b_id_20, ~M_24 = deriveContextId(n32f_pid_5,n32f_pid_4), ~M_25 = encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)), ~M_26 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_48,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_48,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))) at {216} in copy a_44

insert storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_20,pk(ipx_b_privkey_1),ipx_a_id_20,pk(ipx_a_privkey_1)) at {217} in copy a_44

out(plmn_b, (SEND,createHttp(nf_b_addr_3,nf_a_addr_3,REQ,msg_body_49))) at {132} in copy a_43 received at {201} in copy a_45

out(plmn_b, (SEND,createHttp(nf_b_addr_3,nf_a_addr_3,REQ,msg_body_47))) at {132} in copy a_41 received at {201} in copy a_46

get storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_20,pk(ipx_b_privkey_1),ipx_a_id_20,pk(ipx_a_privkey_1)) at {264} in copy a_46

event recvHttpMsgSeppB(REQ,msg_body_47) at {203} in copy a_46

event sendN32fMsgSeppB(deriveContextId(n32f_pid_5,n32f_pid_4),1,encrypt(getConf(msg_body_47,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_47,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4))) at {215} in copy a_46

out(n32f_b, (~M_27,prins'(~M_28,~M_29,combineAAD(~M_30,~M_31,~M_32,~M_33,1,~M_34,~M_35),~M_36,~M_37))) with ~M_27 = sepp_a_addr_19, ~M_28 = ciphersuites_1, ~M_29 = deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1), ~M_30 = nf_b_addr_3, ~M_31 = nf_a_addr_3, ~M_32 = REQ, ~M_33 = getNonconf(msg_body_47,encp_1), ~M_34 = ipx_b_id_20, ~M_35 = deriveContextId(n32f_pid_5,n32f_pid_4), ~M_36 = encrypt(getConf(msg_body_47,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)), ~M_37 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_47,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_47,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))) at {216} in copy a_46

insert storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_20,pk(ipx_b_privkey_1),ipx_a_id_20,pk(ipx_a_privkey_1)) at {217} in copy a_46

out(plmn_b, (SEND,createHttp(nf_b_addr_3,nf_a_addr_3,REQ,msg_body_46))) at {132} in copy a_40 received at {201} in copy a_47

get storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_20,pk(ipx_b_privkey_1),ipx_a_id_20,pk(ipx_a_privkey_1)) at {264} in copy a_47

event recvHttpMsgSeppB(REQ,msg_body_46) at {203} in copy a_47

event sendN32fMsgSeppB(deriveContextId(n32f_pid_5,n32f_pid_4),1,encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4))) at {215} in copy a_47

out(n32f_b, (~M_38,prins'(~M_39,~M_40,combineAAD(~M_41,~M_42,~M_43,~M_44,1,~M_45,~M_46),~M_47,~M_48))) with ~M_38 = sepp_a_addr_19, ~M_39 = ciphersuites_1, ~M_40 = deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1), ~M_41 = nf_b_addr_3, ~M_42 = nf_a_addr_3, ~M_43 = REQ, ~M_44 = getNonconf(msg_body_46,encp_1), ~M_45 = ipx_b_id_20, ~M_46 = deriveContextId(n32f_pid_5,n32f_pid_4), ~M_47 = encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)), ~M_48 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))) at {216} in copy a_47

insert storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_20,pk(ipx_b_privkey_1),ipx_a_id_20,pk(ipx_a_privkey_1)) at {217} in copy a_47

out(a_12, ()) at {1396} received at {1492}

out(a_11, ()) at {1398} received at {1491}

out(a_10, ()) at {1400} received at {1490}

out(a_9, ()) at {1402} received at {1489}

out(a_8, ()) at {1404} received at {1488}

out(a_7, ()) at {1406} received at {1487}

out(a_6, ()) at {1408} received at {1486}

out(a_5, ()) at {1410} received at {1485}

out(a_4, ()) at {1412} received at {1484}

out(c_12, ()) at {1483} received at {1395}

out(c_11, ()) at {1482} received at {1397}

out(c_10, ()) at {1481} received at {1399}

out(c_9, ()) at {1480} received at {1401}

out(c_8, ()) at {1479} received at {1403}

out(c_7, ()) at {1478} received at {1405}

out(c_6, ()) at {1477} received at {1407}

out(c_5, ()) at {1476} received at {1409}

out(c_4, ()) at {1475} received at {1411}

in(n32f_i, (a_48,prins''(a_49,a_50,combineAAD(a_51,a_52,a_53,a_54,a_55,a_56,a_57),a_58,a_59,a_60,EMPTY))) at {285} in copy a_61

event ipxRecvB(a_57,a_55,a_59,jsonPatch(modp_b_19,ipx_b_id_20,a_59,signPrinsMod(prins''(a_49,a_50,combineAAD(a_51,a_52,a_53,a_54,a_55,a_56,a_57),a_58,a_59,a_60,EMPTY),modp_b_19,ipx_b_id_20,a_59,ipx_b_privkey_1))) at {290} in copy a_61

out(n32f_b, (~M_49,prins''(~M_50,~M_51,combineAAD(~M_52,~M_53,~M_54,~M_55,~M_56,~M_57,~M_58),~M_59,~M_60,~M_61,jsonPatch(~M_62,~M_63,~M_64,~M_65)))) with ~M_49 = a_48, ~M_50 = a_49, ~M_51 = a_50, ~M_52 = a_51, ~M_53 = a_52, ~M_54 = a_53, ~M_55 = a_54, ~M_56 = a_55, ~M_57 = a_56, ~M_58 = a_57, ~M_59 = a_58, ~M_60 = a_59, ~M_61 = a_60, ~M_62 = modp_b_19, ~M_63 = ipx_b_id_20, ~M_64 = a_59, ~M_65 = signPrinsMod(prins''(a_49,a_50,combineAAD(a_51,a_52,a_53,a_54,a_55,a_56,a_57),a_58,a_59,a_60,EMPTY),modp_b_19,ipx_b_id_20,a_59,ipx_b_privkey_1) at {291} in copy a_61

in(n32f_i, (a_62,prins''(a_63,a_64,combineAAD(a_65,a_66,a_67,a_68,a_69,a_70,a_71),a_72,a_73,a_74,EMPTY))) at {285} in copy a_75

event ipxRecvB(a_71,a_69,a_73,jsonPatch(modp_b_19,ipx_b_id_20,a_73,signPrinsMod(prins''(a_63,a_64,combineAAD(a_65,a_66,a_67,a_68,a_69,a_70,a_71),a_72,a_73,a_74,EMPTY),modp_b_19,ipx_b_id_20,a_73,ipx_b_privkey_1))) at {290} in copy a_75

out(n32f_b, (~M_66,prins''(~M_67,~M_68,combineAAD(~M_69,~M_70,~M_71,~M_72,~M_73,~M_74,~M_75),~M_76,~M_77,~M_78,jsonPatch(~M_79,~M_80,~M_81,~M_82)))) with ~M_66 = a_62, ~M_67 = a_63, ~M_68 = a_64, ~M_69 = a_65, ~M_70 = a_66, ~M_71 = a_67, ~M_72 = a_68, ~M_73 = a_69, ~M_74 = a_70, ~M_75 = a_71, ~M_76 = a_72, ~M_77 = a_73, ~M_78 = a_74, ~M_79 = modp_b_19, ~M_80 = ipx_b_id_20, ~M_81 = a_73, ~M_82 = signPrinsMod(prins''(a_63,a_64,combineAAD(a_65,a_66,a_67,a_68,a_69,a_70,a_71),a_72,a_73,a_74,EMPTY),modp_b_19,ipx_b_id_20,a_73,ipx_b_privkey_1) at {291} in copy a_75

in(n32f_i, (a_76,prins''(a_77,a_78,combineAAD(a_79,a_80,a_81,a_82,a_83,a_84,a_85),a_86,a_87,a_88,EMPTY))) at {304} in copy a_89

event ipxRecvR1(a_85,a_83,a_87,jsonPatch(modp_a_19,ipx_a_id_20,a_87,signPrinsMod(prins''(a_77,a_78,combineAAD(a_79,a_80,a_81,a_82,a_83,a_84,a_85),a_86,a_87,a_88,EMPTY),modp_a_19,ipx_a_id_20,a_87,ipx_a_privkey_1))) at {309} in copy a_89

out(n32f_a, (~M_83,prins''(~M_84,~M_85,combineAAD(~M_86,~M_87,~M_88,~M_89,~M_90,~M_91,~M_92),~M_93,~M_94,~M_95,jsonPatch(~M_96,~M_97,~M_98,~M_99)))) with ~M_83 = a_76, ~M_84 = a_77, ~M_85 = a_78, ~M_86 = a_79, ~M_87 = a_80, ~M_88 = a_81, ~M_89 = a_82, ~M_90 = a_83, ~M_91 = a_84, ~M_92 = a_85, ~M_93 = a_86, ~M_94 = a_87, ~M_95 = EMPTY, ~M_96 = modp_a_19, ~M_97 = ipx_a_id_20, ~M_98 = a_87, ~M_99 = signPrinsMod(prins''(a_77,a_78,combineAAD(a_79,a_80,a_81,a_82,a_83,a_84,a_85),a_86,a_87,a_88,EMPTY),modp_a_19,ipx_a_id_20,a_87,ipx_a_privkey_1) at {310} in copy a_89

in(n32f_i, (a_90,prins''(a_91,a_92,combineAAD(a_93,a_94,a_95,a_96,a_97,a_98,a_99),a_100,a_101,a_102,EMPTY))) at {304} in copy a_103

event ipxRecvR1(a_99,a_97,a_101,jsonPatch(modp_a_19,ipx_a_id_20,a_101,signPrinsMod(prins''(a_91,a_92,combineAAD(a_93,a_94,a_95,a_96,a_97,a_98,a_99),a_100,a_101,a_102,EMPTY),modp_a_19,ipx_a_id_20,a_101,ipx_a_privkey_1))) at {309} in copy a_103

out(n32f_a, (~M_100,prins''(~M_101,~M_102,combineAAD(~M_103,~M_104,~M_105,~M_106,~M_107,~M_108,~M_109),~M_110,~M_111,~M_112,jsonPatch(~M_113,~M_114,~M_115,~M_116)))) with ~M_100 = a_90, ~M_101 = a_91, ~M_102 = a_92, ~M_103 = a_93, ~M_104 = a_94, ~M_105 = a_95, ~M_106 = a_96, ~M_107 = a_97, ~M_108 = a_98, ~M_109 = a_99, ~M_110 = a_100, ~M_111 = a_101, ~M_112 = EMPTY, ~M_113 = modp_a_19, ~M_114 = ipx_a_id_20, ~M_115 = a_101, ~M_116 = signPrinsMod(prins''(a_91,a_92,combineAAD(a_93,a_94,a_95,a_96,a_97,a_98,a_99),a_100,a_101,a_102,EMPTY),modp_a_19,ipx_a_id_20,a_101,ipx_a_privkey_1) at {310} in copy a_103

in(n32f_a, (a_104,prins'(a_105,a_106,combineAAD(a_107,a_108,a_109,a_110,a_111,a_112,a_113),a_114,a_115))) at {313} in copy a_116

event ipxSendR1(a_113,a_111,a_115,jsonPatch(modp_r1_1,ipx_a_id_20,a_115,signPrins(prins'(a_105,a_106,combineAAD(a_107,a_108,a_109,a_110,a_111,a_112,a_113),a_114,a_115),modp_r1_1,ipx_a_id_20,a_115,ipx_a_privkey_1))) at {318} in copy a_116

out(n32f_i, (~M_117,prins''(~M_118,~M_119,combineAAD(~M_120,~M_121,~M_122,~M_123,~M_124,~M_125,~M_126),~M_127,~M_128,jsonPatch(~M_129,~M_130,~M_131,~M_132),~M_133))) with ~M_117 = a_104, ~M_118 = a_105, ~M_119 = a_106, ~M_120 = a_107, ~M_121 = a_108, ~M_122 = a_109, ~M_123 = a_110, ~M_124 = a_111, ~M_125 = a_112, ~M_126 = a_113, ~M_127 = a_114, ~M_128 = a_115, ~M_129 = modp_r1_1, ~M_130 = ipx_a_id_20, ~M_131 = a_115, ~M_132 = signPrins(prins'(a_105,a_106,combineAAD(a_107,a_108,a_109,a_110,a_111,a_112,a_113),a_114,a_115),modp_r1_1,ipx_a_id_20,a_115,ipx_a_privkey_1), ~M_133 = EMPTY at {319} in copy a_116

in(n32f_a, (a_117,prins'(a_118,a_119,combineAAD(a_120,a_121,a_122,a_123,a_124,a_125,a_126),a_127,a_128))) at {313} in copy a_129

event ipxSendR1(a_126,a_124,a_128,jsonPatch(modp_r1_1,ipx_a_id_20,a_128,signPrins(prins'(a_118,a_119,combineAAD(a_120,a_121,a_122,a_123,a_124,a_125,a_126),a_127,a_128),modp_r1_1,ipx_a_id_20,a_128,ipx_a_privkey_1))) at {318} in copy a_129

out(n32f_i, (~M_134,prins''(~M_135,~M_136,combineAAD(~M_137,~M_138,~M_139,~M_140,~M_141,~M_142,~M_143),~M_144,~M_145,jsonPatch(~M_146,~M_147,~M_148,~M_149),~M_150))) with ~M_134 = a_117, ~M_135 = a_118, ~M_136 = a_119, ~M_137 = a_120, ~M_138 = a_121, ~M_139 = a_122, ~M_140 = a_123, ~M_141 = a_124, ~M_142 = a_125, ~M_143 = a_126, ~M_144 = a_127, ~M_145 = a_128, ~M_146 = modp_r1_1, ~M_147 = ipx_a_id_20, ~M_148 = a_128, ~M_149 = signPrins(prins'(a_118,a_119,combineAAD(a_120,a_121,a_122,a_123,a_124,a_125,a_126),a_127,a_128),modp_r1_1,ipx_a_id_20,a_128,ipx_a_privkey_1), ~M_150 = EMPTY at {319} in copy a_129

in(n32f_a, (a_130,prins'(a_131,a_132,combineAAD(a_133,a_134,a_135,a_136,a_137,a_138,a_139),a_140,a_141))) at {313} in copy a_142

event ipxSendR1(a_139,a_137,a_141,jsonPatch(modp_r1_1,ipx_a_id_20,a_141,signPrins(prins'(a_131,a_132,combineAAD(a_133,a_134,a_135,a_136,a_137,a_138,a_139),a_140,a_141),modp_r1_1,ipx_a_id_20,a_141,ipx_a_privkey_1))) at {318} in copy a_142

out(n32f_i, (~M_151,prins''(~M_152,~M_153,combineAAD(~M_154,~M_155,~M_156,~M_157,~M_158,~M_159,~M_160),~M_161,~M_162,jsonPatch(~M_163,~M_164,~M_165,~M_166),~M_167))) with ~M_151 = a_130, ~M_152 = a_131, ~M_153 = a_132, ~M_154 = a_133, ~M_155 = a_134, ~M_156 = a_135, ~M_157 = a_136, ~M_158 = a_137, ~M_159 = a_138, ~M_160 = a_139, ~M_161 = a_140, ~M_162 = a_141, ~M_163 = modp_r1_1, ~M_164 = ipx_a_id_20, ~M_165 = a_141, ~M_166 = signPrins(prins'(a_131,a_132,combineAAD(a_133,a_134,a_135,a_136,a_137,a_138,a_139),a_140,a_141),modp_r1_1,ipx_a_id_20,a_141,ipx_a_privkey_1), ~M_167 = EMPTY at {319} in copy a_142

out(a_22, ()) at {1376} received at {1474}

out(a_21, ()) at {1378} received at {1473}

out(a_20, ()) at {1380} received at {1472}

out(a_19, ()) at {1382} received at {1471}

out(a_18, ()) at {1384} received at {1470}

out(a_17, ()) at {1386} received at {1469}

out(a_16, ()) at {1388} received at {1468}

out(a_15, ()) at {1390} received at {1467}

out(a_14, ()) at {1392} received at {1466}

out(a_13, ()) at {1394} received at {1465}

out(c_22, ()) at {1464} received at {1375}

out(c_21, ()) at {1463} received at {1377}

out(c_20, ()) at {1462} received at {1379}

out(c_19, ()) at {1461} received at {1381}

out(c_18, ()) at {1460} received at {1383}

out(c_17, ()) at {1459} received at {1385}

out(c_16, ()) at {1458} received at {1387}

out(c_15, ()) at {1457} received at {1389}

out(c_14, ()) at {1456} received at {1391}

out(c_13, ()) at {1455} received at {1393}

out(a_31, ()) at {1358} received at {1454}

out(a_30, ()) at {1360} received at {1453}

out(a_29, ()) at {1362} received at {1452}

out(a_28, ()) at {1364} received at {1451}

out(a_27, ()) at {1366} received at {1450}

out(a_26, ()) at {1368} received at {1449}

out(a_25, ()) at {1370} received at {1448}

out(a_24, ()) at {1372} received at {1447}

out(a_23, ()) at {1374} received at {1446}

out(c_31, ()) at {1445} received at {1357}

out(c_30, ()) at {1444} received at {1359}

out(c_29, ()) at {1443} received at {1361}

out(c_28, ()) at {1442} received at {1363}

out(c_27, ()) at {1441} received at {1365}

out(c_26, ()) at {1440} received at {1367}

out(c_25, ()) at {1439} received at {1369}

out(c_24, ()) at {1438} received at {1371}

out(c_23, ()) at {1437} received at {1373}

in(n32f_b, (a_143,prins'(a_144,a_145,combineAAD(a_146,a_147,a_148,a_149,a_150,~M_11,a_151),a_152,a_153))) with ~M_11 = ipx_b_id_20 at {898} in copy a_154

event ipxSendB(a_151,a_150,a_153,jsonPatch(modp_b_19,ipx_b_id_20,a_153,signPrins(prins'(a_144,a_145,combineAAD(a_146,a_147,a_148,a_149,a_150,ipx_b_id_20,a_151),a_152,a_153),modp_b_19,ipx_b_id_20,a_153,ipx_b_privkey_1))) at {903} in copy a_154

out(n32f_i, (~M_168,prins''(~M_169,~M_170,combineAAD(~M_171,~M_172,~M_173,~M_174,~M_175,~M_176,~M_177),~M_178,~M_179,jsonPatch(~M_180,~M_181,~M_182,~M_183),~M_184))) with ~M_168 = a_143, ~M_169 = a_144, ~M_170 = a_145, ~M_171 = a_146, ~M_172 = a_147, ~M_173 = a_148, ~M_174 = a_149, ~M_175 = a_150, ~M_176 = ipx_b_id_20, ~M_177 = a_151, ~M_178 = a_152, ~M_179 = a_153, ~M_180 = modp_b_19, ~M_181 = ipx_b_id_20, ~M_182 = a_153, ~M_183 = signPrins(prins'(a_144,a_145,combineAAD(a_146,a_147,a_148,a_149,a_150,ipx_b_id_20,a_151),a_152,a_153),modp_b_19,ipx_b_id_20,a_153,ipx_b_privkey_1), ~M_184 = EMPTY at {904} in copy a_154

out(n32f_i, jsonPatch(~M_185,~M_186,~M_187,~M_188)) with ~M_185 = modp_b_19, ~M_186 = ipx_b_id_20, ~M_187 = a_153, ~M_188 = signPrins(prins'(a_144,a_145,combineAAD(a_146,a_147,a_148,a_149,a_150,ipx_b_id_20,a_151),a_152,a_153),modp_b_19,ipx_b_id_20,a_153,ipx_b_privkey_1) at {905} in copy a_154

in(n32f_a, (~M_8,prins''(a_155,a_156,combineAAD(~M_5,~M_4,REQ,~M_44,1,~M_11,~M_24),~M_47,~M_48,jsonPatch(~M_2,~M_11,~M_48,~M_183),jsonPatch(~M_1,~M_10,~M_48,~M_99)))) with ~M_8 = sepp_a_addr_19, ~M_5 = nf_b_addr_3, ~M_4 = nf_a_addr_3, ~M_44 = getNonconf(msg_body_46,encp_1), ~M_11 = ipx_b_id_20, ~M_24 = deriveContextId(n32f_pid_5,n32f_pid_4), ~M_47 = encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)), ~M_48 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))), ~M_2 = modp_b_19, ~M_11 = ipx_b_id_20, ~M_48 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))), ~M_183 = signPrins(prins'(a_144,a_145,combineAAD(a_146,a_147,a_148,a_149,a_150,ipx_b_id_20,a_151),a_152,a_153),modp_b_19,ipx_b_id_20,a_153,ipx_b_privkey_1), ~M_1 = modp_a_19, ~M_10 = ipx_a_id_20, ~M_48 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))), ~M_99 = signPrinsMod(prins''(a_77,a_78,combineAAD(a_79,a_80,a_81,a_82,a_83,a_84,a_85),a_86,a_87,a_88,EMPTY),modp_a_19,ipx_a_id_20,a_87,ipx_a_privkey_1) at {349} in copy a_157

event recvN32fMsgSeppA(deriveContextId(n32f_pid_5,n32f_pid_4),1,encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4))) at {352} in copy a_157

get storeSeppA(sepp_b_plmn_9,sepp_b_addr_17,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_a_19,modp_b_19,ipx_a_id_20,pk(ipx_a_privkey_1),ipx_b_id_20,pk(ipx_b_privkey_1)) at {517} in copy a_157

event recvValidIpxPatchSeppA(ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4),1,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),jsonPatch(modp_b_19,ipx_b_id_20,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),signPrins(prins'(a_144,a_145,combineAAD(a_146,a_147,a_148,a_149,a_150,ipx_b_id_20,a_151),a_152,a_153),modp_b_19,ipx_b_id_20,a_153,ipx_b_privkey_1))) at {364} in copy a_157

event recvValidIpxPatchSeppA(ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4),1,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),jsonPatch(modp_a_19,ipx_a_id_20,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),signPrinsMod(prins''(a_77,a_78,combineAAD(a_79,a_80,a_81,a_82,a_83,a_84,a_85),a_86,a_87,a_88,EMPTY),modp_a_19,ipx_a_id_20,a_87,ipx_a_privkey_1))) at {369} in copy a_157

event sendHttpMsgSeppA(REQ,applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19)) at {373} in copy a_157

in(n32f_a, (~M_8,prins''(a_158,a_159,combineAAD(~M_5,~M_4,REQ,~M_44,1,~M_11,~M_24),~M_47,~M_48,jsonPatch(~M_2,~M_11,~M_48,~M_183),jsonPatch(~M_1,~M_10,~M_48,~M_116)))) with ~M_8 = sepp_a_addr_19, ~M_5 = nf_b_addr_3, ~M_4 = nf_a_addr_3, ~M_44 = getNonconf(msg_body_46,encp_1), ~M_11 = ipx_b_id_20, ~M_24 = deriveContextId(n32f_pid_5,n32f_pid_4), ~M_47 = encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)), ~M_48 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))), ~M_2 = modp_b_19, ~M_11 = ipx_b_id_20, ~M_48 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))), ~M_183 = signPrins(prins'(a_144,a_145,combineAAD(a_146,a_147,a_148,a_149,a_150,ipx_b_id_20,a_151),a_152,a_153),modp_b_19,ipx_b_id_20,a_153,ipx_b_privkey_1), ~M_1 = modp_a_19, ~M_10 = ipx_a_id_20, ~M_48 = macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))), ~M_116 = signPrinsMod(prins''(a_91,a_92,combineAAD(a_93,a_94,a_95,a_96,a_97,a_98,a_99),a_100,a_101,a_102,EMPTY),modp_a_19,ipx_a_id_20,a_101,ipx_a_privkey_1) at {349} in copy a_160

event recvN32fMsgSeppA(deriveContextId(n32f_pid_5,n32f_pid_4),1,encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4))) at {352} in copy a_160

get storeSeppA(sepp_b_plmn_9,sepp_b_addr_17,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_a_19,modp_b_19,ipx_a_id_20,pk(ipx_a_privkey_1),ipx_b_id_20,pk(ipx_b_privkey_1)) at {517} in copy a_160

event recvValidIpxPatchSeppA(ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4),1,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),jsonPatch(modp_b_19,ipx_b_id_20,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),signPrins(prins'(a_144,a_145,combineAAD(a_146,a_147,a_148,a_149,a_150,ipx_b_id_20,a_151),a_152,a_153),modp_b_19,ipx_b_id_20,a_153,ipx_b_privkey_1))) at {364} in copy a_160

event recvValidIpxPatchSeppA(ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4),1,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),jsonPatch(modp_a_19,ipx_a_id_20,macf((deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_b_addr_3,nf_a_addr_3,REQ,getNonconf(msg_body_46,encp_1),1,ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(msg_body_46,encp_1),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),signPrinsMod(prins''(a_91,a_92,combineAAD(a_93,a_94,a_95,a_96,a_97,a_98,a_99),a_100,a_101,a_102,EMPTY),modp_a_19,ipx_a_id_20,a_101,ipx_a_privkey_1))) at {369} in copy a_160

event sendHttpMsgSeppA(REQ,applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19)) at {373} in copy a_160

out(a_39, ()) at {1342} received at {1436}

out(a_38, ()) at {1344} received at {1435}

out(a_37, ()) at {1346} received at {1434}

out(a_36, ()) at {1348} received at {1433}

out(a_35, ()) at {1350} received at {1432}

out(a_34, ()) at {1352} received at {1431}

out(a_33, ()) at {1354} received at {1430}

out(a_32, ()) at {1356} received at {1429}

out(c_39, ()) at {1428} received at {1341}

out(c_38, ()) at {1427} received at {1343}

out(c_37, ()) at {1426} received at {1345}

out(c_36, ()) at {1425} received at {1347}

out(c_35, ()) at {1424} received at {1349}

out(c_34, ()) at {1423} received at {1351}

out(c_33, ()) at {1422} received at {1353}

out(plmn_a, (RECV,createHttp(nf_b_addr_3,nf_a_addr_3,REQ,applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19)))) at {374} in copy a_157 received at {1295} in copy a_161

event sendHttpMsgNfA(RES,applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19)) at {1298} in copy a_161

out(plmn_a, (SEND,createHttp(nf_a_addr_3,nf_b_addr_3,RES,applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19)))) at {1299} in copy a_161 received at {739} in copy a_162

out(plmn_a, (RECV,createHttp(nf_b_addr_3,nf_a_addr_3,REQ,applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19)))) at {374} in copy a_160 received at {1295} in copy a_163

event sendHttpMsgNfA(RES,applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19)) at {1298} in copy a_163

out(plmn_a, (SEND,createHttp(nf_a_addr_3,nf_b_addr_3,RES,applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19)))) at {1299} in copy a_163 received at {739} in copy a_164

get storeSeppA(sepp_b_plmn_9,sepp_b_addr_17,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_a_19,modp_b_19,ipx_a_id_20,pk(ipx_a_privkey_1),ipx_b_id_20,pk(ipx_b_privkey_1)) at {802} in copy a_164

event recvHttpMsgSeppA(RES,applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19)) at {741} in copy a_164

event sendN32fMsgSeppA(deriveContextId(n32f_pid_5,n32f_pid_4),1,encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4))) at {776} in copy a_164

out(n32f_a, (~M_189,prins'(~M_190,~M_191,combineAAD(~M_192,~M_193,~M_194,~M_195,1,~M_196,~M_197),~M_198,~M_199))) with ~M_189 = sepp_b_addr_17, ~M_190 = ciphersuites_1, ~M_191 = deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1), ~M_192 = nf_a_addr_3, ~M_193 = nf_b_addr_3, ~M_194 = RES, ~M_195 = getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1), ~M_196 = ipx_a_id_20, ~M_197 = deriveContextId(n32f_pid_5,n32f_pid_4), ~M_198 = encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)), ~M_199 = macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))) at {777} in copy a_164

insert storeSeppA(sepp_b_plmn_9,sepp_b_addr_17,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_a_19,modp_b_19,ipx_a_id_20,pk(ipx_a_privkey_1),ipx_b_id_20,pk(ipx_b_privkey_1)) at {778} in copy a_164

in(n32f_b, (~M_9,prins''(a_165,a_166,combineAAD(~M_4,~M_5,RES,~M_195,1,~M_10,~M_24),~M_198,~M_199,jsonPatch(~M_1,~M_10,~M_199,~M_132),jsonPatch(~M_2,~M_11,~M_199,~M_65)))) with ~M_9 = sepp_b_addr_17, ~M_4 = nf_a_addr_3, ~M_5 = nf_b_addr_3, ~M_195 = getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1), ~M_10 = ipx_a_id_20, ~M_24 = deriveContextId(n32f_pid_5,n32f_pid_4), ~M_198 = encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)), ~M_199 = macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))), ~M_1 = modp_a_19, ~M_10 = ipx_a_id_20, ~M_199 = macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))), ~M_132 = signPrins(prins'(a_105,a_106,combineAAD(a_107,a_108,a_109,a_110,a_111,a_112,a_113),a_114,a_115),modp_r1_1,ipx_a_id_20,a_115,ipx_a_privkey_1), ~M_2 = modp_b_19, ~M_11 = ipx_b_id_20, ~M_199 = macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))), ~M_65 = signPrinsMod(prins''(a_49,a_50,combineAAD(a_51,a_52,a_53,a_54,a_55,a_56,a_57),a_58,a_59,a_60,EMPTY),modp_b_19,ipx_b_id_20,a_59,ipx_b_privkey_1) at {520} in copy a_167

event recvN32fMsgSeppB(deriveContextId(n32f_pid_5,n32f_pid_4),1,encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4))) at {523} in copy a_167

get storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_20,pk(ipx_b_privkey_1),ipx_a_id_20,pk(ipx_a_privkey_1)) at {688} in copy a_167

event recvValidIpxPatchSeppB(ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),jsonPatch(modp_a_19,ipx_a_id_20,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),signPrins(prins'(a_105,a_106,combineAAD(a_107,a_108,a_109,a_110,a_111,a_112,a_113),a_114,a_115),modp_r1_1,ipx_a_id_20,a_115,ipx_a_privkey_1))) at {606} in copy a_167

event recvValidIpxPatchSeppB(ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),jsonPatch(modp_b_19,ipx_b_id_20,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),signPrinsMod(prins''(a_49,a_50,combineAAD(a_51,a_52,a_53,a_54,a_55,a_56,a_57),a_58,a_59,a_60,EMPTY),modp_b_19,ipx_b_id_20,a_59,ipx_b_privkey_1))) at {611} in copy a_167 (goal)

event sendHttpMsgSeppB(RES,applyPatches((getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1)),modp_a_19,modp_b_19)) at {615} in copy a_167

in(n32f_b, (~M_9,prins''(a_168,a_169,combineAAD(~M_4,~M_5,RES,~M_195,1,~M_10,~M_24),~M_198,~M_199,jsonPatch(~M_1,~M_10,~M_199,~M_166),jsonPatch(~M_2,~M_11,~M_199,~M_82)))) with ~M_9 = sepp_b_addr_17, ~M_4 = nf_a_addr_3, ~M_5 = nf_b_addr_3, ~M_195 = getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1), ~M_10 = ipx_a_id_20, ~M_24 = deriveContextId(n32f_pid_5,n32f_pid_4), ~M_198 = encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)), ~M_199 = macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))), ~M_1 = modp_a_19, ~M_10 = ipx_a_id_20, ~M_199 = macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))), ~M_166 = signPrins(prins'(a_131,a_132,combineAAD(a_133,a_134,a_135,a_136,a_137,a_138,a_139),a_140,a_141),modp_r1_1,ipx_a_id_20,a_141,ipx_a_privkey_1), ~M_2 = modp_b_19, ~M_11 = ipx_b_id_20, ~M_199 = macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))), ~M_82 = signPrinsMod(prins''(a_63,a_64,combineAAD(a_65,a_66,a_67,a_68,a_69,a_70,a_71),a_72,a_73,a_74,EMPTY),modp_b_19,ipx_b_id_20,a_73,ipx_b_privkey_1) at {520} in copy a_170

event recvN32fMsgSeppB(deriveContextId(n32f_pid_5,n32f_pid_4),1,encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1)),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4))) at {523} in copy a_170

get storeSeppB(sepp_a_plmn_9,sepp_a_addr_19,deriveContextId(n32f_pid_5,n32f_pid_4),0,deriveSessionKey(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(SEND,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,REQ,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),ciphersuites_1,encp_1,modp_b_19,modp_a_19,ipx_b_id_20,pk(ipx_b_privkey_1),ipx_a_id_20,pk(ipx_a_privkey_1)) at {688} in copy a_170

event recvValidIpxPatchSeppB(ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),jsonPatch(modp_a_19,ipx_a_id_20,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),signPrins(prins'(a_131,a_132,combineAAD(a_133,a_134,a_135,a_136,a_137,a_138,a_139),a_140,a_141),modp_r1_1,ipx_a_id_20,a_141,ipx_a_privkey_1))) at {606} in copy a_170

event recvValidIpxPatchSeppB(ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),jsonPatch(modp_b_19,ipx_b_id_20,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),signPrinsMod(prins''(a_63,a_64,combineAAD(a_65,a_66,a_67,a_68,a_69,a_70,a_71),a_72,a_73,a_74,EMPTY),modp_b_19,ipx_b_id_20,a_73,ipx_b_privkey_1))) at {611} in copy a_170 (goal)

The event recvValidIpxPatchSeppB(ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),jsonPatch(modp_b_19,ipx_b_id_20,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),signPrinsMod(prins''(a_49,a_50,combineAAD(a_51,a_52,a_53,a_54,a_55,a_56,a_57),a_58,a_59,a_60,EMPTY),modp_b_19,ipx_b_id_20,a_59,ipx_b_privkey_1))) is executed at {611} in copy a_167.
The event recvValidIpxPatchSeppB(ipx_b_id_20,deriveContextId(n32f_pid_5,n32f_pid_4),1,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),jsonPatch(modp_b_19,ipx_b_id_20,macf((deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1),combineAAD(nf_a_addr_3,nf_b_addr_3,RES,getNonconf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),1,ipx_a_id_20,deriveContextId(n32f_pid_5,n32f_pid_4)),encrypt(getConf(applyPatches((getConf(msg_body_46,encp_1),getNonconf(msg_body_46,encp_1)),modp_b_19,modp_a_19),encp_1),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),deriveNonce(deriveIV(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4))),1))),deriveSessionKey(RECV,RES,deriveMasterKey(deriveContextId(n32f_pid_5,n32f_pid_4)))),signPrinsMod(prins''(a_63,a_64,combineAAD(a_65,a_66,a_67,a_68,a_69,a_70,a_71),a_72,a_73,a_74,EMPTY),modp_b_19,ipx_b_id_20,a_73,ipx_b_privkey_1))) is executed at {611} in copy a_170.
A trace has been found.
RESULT inj-event(recvValidIpxPatchSeppB(ipx_a_id_20,n32f_context_35,msg_id_35,jwe_tag_59,ipx_a_mods_9)) && event(recvValidIpxPatchSeppB(ipx_b_id_20,n32f_context_35,msg_id_35,jwe_tag_59,ipx_b_mods_13)) ==> inj-event(ipxRecvB(n32f_context_35,msg_id_35,jwe_tag_59,ipx_b_mods_13)) && inj-event(ipxSendA(n32f_context_35,msg_id_35,jwe_tag_59,ipx_a_mods_9)) is false.
RESULT (even event(recvValidIpxPatchSeppB(ipx_a_id_20,n32f_context_35,msg_id_35,jwe_tag_59,ipx_a_mods_9)) && event(recvValidIpxPatchSeppB(ipx_b_id_20,n32f_context_35,msg_id_35,jwe_tag_59,ipx_b_mods_13)) ==> event(ipxRecvB(n32f_context_35,msg_id_35,jwe_tag_59,ipx_b_mods_13)) && event(ipxSendA(n32f_context_35,msg_id_35,jwe_tag_59,ipx_a_mods_9)) is false.)

--------------------------------------------------------------
Verification summary:

Query inj-event(recvValidIpxPatchSeppA(ipx_b_id_21,n32f_context_36,msg_id_36,jwe_tag_60,ipx_b_mods_14)) && event(recvValidIpxPatchSeppA(ipx_a_id_21,n32f_context_36,msg_id_36,jwe_tag_60,ipx_a_mods_10)) ==> inj-event(ipxRecvA(n32f_context_36,msg_id_36,jwe_tag_60,ipx_a_mods_10)) && inj-event(ipxSendB(n32f_context_36,msg_id_36,jwe_tag_60,ipx_b_mods_14)) is false.

Query inj-event(recvValidIpxPatchSeppB(ipx_a_id_21,n32f_context_36,msg_id_36,jwe_tag_60,ipx_a_mods_10)) && event(recvValidIpxPatchSeppB(ipx_b_id_21,n32f_context_36,msg_id_36,jwe_tag_60,ipx_b_mods_14)) ==> inj-event(ipxRecvB(n32f_context_36,msg_id_36,jwe_tag_60,ipx_b_mods_14)) && inj-event(ipxSendA(n32f_context_36,msg_id_36,jwe_tag_60,ipx_a_mods_10)) is false.

--------------------------------------------------------------

